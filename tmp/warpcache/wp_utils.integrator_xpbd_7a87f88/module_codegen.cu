
#define WP_NO_CRT
#include "builtin.h"

// avoid namespacing of float type for casting to float type, this is to avoid wp::float(x), which is not valid in C++
#define float(x) cast_float(x)
#define adj_float(x, adj_x, adj_ret) adj_cast_float(x, adj_x, adj_ret)

#define int(x) cast_int(x)
#define adj_int(x, adj_x, adj_ret) adj_cast_int(x, adj_x, adj_ret)

#define builtin_tid1d() wp::tid(task_index)
#define builtin_tid2d(x, y) wp::tid(x, y, task_index, dim)
#define builtin_tid3d(x, y, z) wp::tid(x, y, z, task_index, dim)
#define builtin_tid4d(x, y, z, w) wp::tid(x, y, z, w, task_index, dim)


struct ModelShapeMaterials
{
    wp::array_t<wp::float32> ke;
    wp::array_t<wp::float32> kd;
    wp::array_t<wp::float32> kf;
    wp::array_t<wp::float32> mu;
    wp::array_t<wp::float32> restitution;


    CUDA_CALLABLE ModelShapeMaterials(wp::array_t<wp::float32> const& ke = {},
    wp::array_t<wp::float32> const& kd = {},
    wp::array_t<wp::float32> const& kf = {},
    wp::array_t<wp::float32> const& mu = {},
    wp::array_t<wp::float32> const& restitution = {})
        : ke{ke}
        , kd{kd}
        , kf{kf}
        , mu{mu}
        , restitution{restitution}

    {
    }

    CUDA_CALLABLE ModelShapeMaterials& operator += (const ModelShapeMaterials& rhs)
    {
        return *this;}

};

static CUDA_CALLABLE void adj_ModelShapeMaterials(wp::array_t<wp::float32> const&,
    wp::array_t<wp::float32> const&,
    wp::array_t<wp::float32> const&,
    wp::array_t<wp::float32> const&,
    wp::array_t<wp::float32> const&,
    wp::array_t<wp::float32> & adj_ke,
    wp::array_t<wp::float32> & adj_kd,
    wp::array_t<wp::float32> & adj_kf,
    wp::array_t<wp::float32> & adj_mu,
    wp::array_t<wp::float32> & adj_restitution,
    ModelShapeMaterials & adj_ret)
{
    adj_ke = adj_ret.ke;
    adj_kd = adj_ret.kd;
    adj_kf = adj_ret.kf;
    adj_mu = adj_ret.mu;
    adj_restitution = adj_ret.restitution;
}

CUDA_CALLABLE void adj_atomic_add(ModelShapeMaterials* p, ModelShapeMaterials t)
{
    wp::adj_atomic_add(&p->ke, t.ke);
    wp::adj_atomic_add(&p->kd, t.kd);
    wp::adj_atomic_add(&p->kf, t.kf);
    wp::adj_atomic_add(&p->mu, t.mu);
    wp::adj_atomic_add(&p->restitution, t.restitution);
}



// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:768
static CUDA_CALLABLE wp::vec_t<3,wp::uint8> update_joint_axis_mode(
    wp::uint8 var_mode,
    wp::vec_t<3,wp::float32> var_axis,
    wp::vec_t<3,wp::uint8> var_input_axis_mode)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::uint8 var_3;
    wp::uint8 var_4;
    wp::uint8 var_5;
    wp::uint8 var_6;
    const wp::int32 var_7 = 1;
    wp::float32 var_8;
    wp::float32 var_9;
    wp::uint8 var_10;
    wp::uint8 var_11;
    wp::uint8 var_12;
    wp::uint8 var_13;
    const wp::int32 var_14 = 2;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::uint8 var_17;
    wp::uint8 var_18;
    wp::uint8 var_19;
    wp::uint8 var_20;
    wp::vec_t<3,wp::uint8> var_21;
    //---------
    // forward
    // def update_joint_axis_mode(mode: wp.uint8, axis: wp.vec3, input_axis_mode: wp.vec3ub):       <L 769>
    // mode_x = wp.max(wp.uint8(wp.nonzero(axis[0])) * mode, input_axis_mode[0])              <L 771>
    var_1 = wp::extract(var_axis, var_0);
    var_2 = wp::nonzero(var_1);
    var_3 = wp::uint8(var_2);
    var_4 = wp::mul(var_3, var_mode);
    var_5 = wp::extract(var_input_axis_mode, var_0);
    var_6 = wp::max(var_4, var_5);
    // mode_y = wp.max(wp.uint8(wp.nonzero(axis[1])) * mode, input_axis_mode[1])              <L 772>
    var_8 = wp::extract(var_axis, var_7);
    var_9 = wp::nonzero(var_8);
    var_10 = wp::uint8(var_9);
    var_11 = wp::mul(var_10, var_mode);
    var_12 = wp::extract(var_input_axis_mode, var_7);
    var_13 = wp::max(var_11, var_12);
    // mode_z = wp.max(wp.uint8(wp.nonzero(axis[2])) * mode, input_axis_mode[2])              <L 773>
    var_15 = wp::extract(var_axis, var_14);
    var_16 = wp::nonzero(var_15);
    var_17 = wp::uint8(var_16);
    var_18 = wp::mul(var_17, var_mode);
    var_19 = wp::extract(var_input_axis_mode, var_14);
    var_20 = wp::max(var_18, var_19);
    // return wp.vec3ub(mode_x, mode_y, mode_z)                                               <L 774>
    var_21 = wp::vec_t<3,wp::uint8>(var_6, var_13, var_20);
    return var_21;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:768
static CUDA_CALLABLE void adj_update_joint_axis_mode(
    wp::uint8 var_mode,
    wp::vec_t<3,wp::float32> var_axis,
    wp::vec_t<3,wp::uint8> var_input_axis_mode,
    wp::uint8 & adj_mode,
    wp::vec_t<3,wp::float32> & adj_axis,
    wp::vec_t<3,wp::uint8> & adj_input_axis_mode,
    wp::vec_t<3,wp::uint8> & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::uint8 var_3;
    wp::uint8 var_4;
    wp::uint8 var_5;
    wp::uint8 var_6;
    const wp::int32 var_7 = 1;
    wp::float32 var_8;
    wp::float32 var_9;
    wp::uint8 var_10;
    wp::uint8 var_11;
    wp::uint8 var_12;
    wp::uint8 var_13;
    const wp::int32 var_14 = 2;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::uint8 var_17;
    wp::uint8 var_18;
    wp::uint8 var_19;
    wp::uint8 var_20;
    wp::vec_t<3,wp::uint8> var_21;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::float32 adj_1 = {};
    wp::float32 adj_2 = {};
    wp::uint8 adj_3 = {};
    wp::uint8 adj_4 = {};
    wp::uint8 adj_5 = {};
    wp::uint8 adj_6 = {};
    wp::int32 adj_7 = {};
    wp::float32 adj_8 = {};
    wp::float32 adj_9 = {};
    wp::uint8 adj_10 = {};
    wp::uint8 adj_11 = {};
    wp::uint8 adj_12 = {};
    wp::uint8 adj_13 = {};
    wp::int32 adj_14 = {};
    wp::float32 adj_15 = {};
    wp::float32 adj_16 = {};
    wp::uint8 adj_17 = {};
    wp::uint8 adj_18 = {};
    wp::uint8 adj_19 = {};
    wp::uint8 adj_20 = {};
    wp::vec_t<3,wp::uint8> adj_21 = {};
    //---------
    // forward
    // def update_joint_axis_mode(mode: wp.uint8, axis: wp.vec3, input_axis_mode: wp.vec3ub):       <L 769>
    // mode_x = wp.max(wp.uint8(wp.nonzero(axis[0])) * mode, input_axis_mode[0])              <L 771>
    var_1 = wp::extract(var_axis, var_0);
    var_2 = wp::nonzero(var_1);
    var_3 = wp::uint8(var_2);
    var_4 = wp::mul(var_3, var_mode);
    var_5 = wp::extract(var_input_axis_mode, var_0);
    var_6 = wp::max(var_4, var_5);
    // mode_y = wp.max(wp.uint8(wp.nonzero(axis[1])) * mode, input_axis_mode[1])              <L 772>
    var_8 = wp::extract(var_axis, var_7);
    var_9 = wp::nonzero(var_8);
    var_10 = wp::uint8(var_9);
    var_11 = wp::mul(var_10, var_mode);
    var_12 = wp::extract(var_input_axis_mode, var_7);
    var_13 = wp::max(var_11, var_12);
    // mode_z = wp.max(wp.uint8(wp.nonzero(axis[2])) * mode, input_axis_mode[2])              <L 773>
    var_15 = wp::extract(var_axis, var_14);
    var_16 = wp::nonzero(var_15);
    var_17 = wp::uint8(var_16);
    var_18 = wp::mul(var_17, var_mode);
    var_19 = wp::extract(var_input_axis_mode, var_14);
    var_20 = wp::max(var_18, var_19);
    // return wp.vec3ub(mode_x, mode_y, mode_z)                                               <L 774>
    var_21 = wp::vec_t<3,wp::uint8>(var_6, var_13, var_20);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_21 += adj_ret;
    wp::adj_vec_t(var_6, var_13, var_20, adj_6, adj_13, adj_20, adj_21);
    // adj: return wp.vec3ub(mode_x, mode_y, mode_z)                                          <L 774>
    wp::adj_max(var_18, var_19, adj_18, adj_19, adj_20);
    wp::adj_extract(var_input_axis_mode, var_14, adj_input_axis_mode, adj_14, adj_19);
    wp::adj_mul(var_17, var_mode, adj_17, adj_mode, adj_18);
    wp::adj_uint8(var_16, adj_16, adj_17);
    wp::adj_nonzero(var_15, adj_15, adj_16);
    wp::adj_extract(var_axis, var_14, adj_axis, adj_14, adj_15);
    // adj: mode_z = wp.max(wp.uint8(wp.nonzero(axis[2])) * mode, input_axis_mode[2])         <L 773>
    wp::adj_max(var_11, var_12, adj_11, adj_12, adj_13);
    wp::adj_extract(var_input_axis_mode, var_7, adj_input_axis_mode, adj_7, adj_12);
    wp::adj_mul(var_10, var_mode, adj_10, adj_mode, adj_11);
    wp::adj_uint8(var_9, adj_9, adj_10);
    wp::adj_nonzero(var_8, adj_8, adj_9);
    wp::adj_extract(var_axis, var_7, adj_axis, adj_7, adj_8);
    // adj: mode_y = wp.max(wp.uint8(wp.nonzero(axis[1])) * mode, input_axis_mode[1])         <L 772>
    wp::adj_max(var_4, var_5, adj_4, adj_5, adj_6);
    wp::adj_extract(var_input_axis_mode, var_0, adj_input_axis_mode, adj_0, adj_5);
    wp::adj_mul(var_3, var_mode, adj_3, adj_mode, adj_4);
    wp::adj_uint8(var_2, adj_2, adj_3);
    wp::adj_nonzero(var_1, adj_1, adj_2);
    wp::adj_extract(var_axis, var_0, adj_axis, adj_0, adj_1);
    // adj: mode_x = wp.max(wp.uint8(wp.nonzero(axis[0])) * mode, input_axis_mode[0])         <L 771>
    // adj: def update_joint_axis_mode(mode: wp.uint8, axis: wp.vec3, input_axis_mode: wp.vec3ub):  <L 769>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:184
static CUDA_CALLABLE wp::vec_t<3,wp::float32> vec_min(
    wp::vec_t<3,wp::float32> var_a,
    wp::vec_t<3,wp::float32> var_b)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    const wp::int32 var_4 = 1;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::float32 var_7;
    const wp::int32 var_8 = 2;
    wp::float32 var_9;
    wp::float32 var_10;
    wp::float32 var_11;
    wp::vec_t<3,wp::float32> var_12;
    //---------
    // forward
    // def vec_min(a: wp.vec3, b: wp.vec3):                                                   <L 185>
    // return wp.vec3(wp.min(a[0], b[0]), wp.min(a[1], b[1]), wp.min(a[2], b[2]))             <L 186>
    var_1 = wp::extract(var_a, var_0);
    var_2 = wp::extract(var_b, var_0);
    var_3 = wp::min(var_1, var_2);
    var_5 = wp::extract(var_a, var_4);
    var_6 = wp::extract(var_b, var_4);
    var_7 = wp::min(var_5, var_6);
    var_9 = wp::extract(var_a, var_8);
    var_10 = wp::extract(var_b, var_8);
    var_11 = wp::min(var_9, var_10);
    var_12 = wp::vec_t<3,wp::float32>(var_3, var_7, var_11);
    return var_12;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:184
static CUDA_CALLABLE void adj_vec_min(
    wp::vec_t<3,wp::float32> var_a,
    wp::vec_t<3,wp::float32> var_b,
    wp::vec_t<3,wp::float32> & adj_a,
    wp::vec_t<3,wp::float32> & adj_b,
    wp::vec_t<3,wp::float32> & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    const wp::int32 var_4 = 1;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::float32 var_7;
    const wp::int32 var_8 = 2;
    wp::float32 var_9;
    wp::float32 var_10;
    wp::float32 var_11;
    wp::vec_t<3,wp::float32> var_12;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::float32 adj_1 = {};
    wp::float32 adj_2 = {};
    wp::float32 adj_3 = {};
    wp::int32 adj_4 = {};
    wp::float32 adj_5 = {};
    wp::float32 adj_6 = {};
    wp::float32 adj_7 = {};
    wp::int32 adj_8 = {};
    wp::float32 adj_9 = {};
    wp::float32 adj_10 = {};
    wp::float32 adj_11 = {};
    wp::vec_t<3,wp::float32> adj_12 = {};
    //---------
    // forward
    // def vec_min(a: wp.vec3, b: wp.vec3):                                                   <L 185>
    // return wp.vec3(wp.min(a[0], b[0]), wp.min(a[1], b[1]), wp.min(a[2], b[2]))             <L 186>
    var_1 = wp::extract(var_a, var_0);
    var_2 = wp::extract(var_b, var_0);
    var_3 = wp::min(var_1, var_2);
    var_5 = wp::extract(var_a, var_4);
    var_6 = wp::extract(var_b, var_4);
    var_7 = wp::min(var_5, var_6);
    var_9 = wp::extract(var_a, var_8);
    var_10 = wp::extract(var_b, var_8);
    var_11 = wp::min(var_9, var_10);
    var_12 = wp::vec_t<3,wp::float32>(var_3, var_7, var_11);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_12 += adj_ret;
    wp::adj_vec_t(var_3, var_7, var_11, adj_3, adj_7, adj_11, adj_12);
    wp::adj_min(var_9, var_10, adj_9, adj_10, adj_11);
    wp::adj_extract(var_b, var_8, adj_b, adj_8, adj_10);
    wp::adj_extract(var_a, var_8, adj_a, adj_8, adj_9);
    wp::adj_min(var_5, var_6, adj_5, adj_6, adj_7);
    wp::adj_extract(var_b, var_4, adj_b, adj_4, adj_6);
    wp::adj_extract(var_a, var_4, adj_a, adj_4, adj_5);
    wp::adj_min(var_1, var_2, adj_1, adj_2, adj_3);
    wp::adj_extract(var_b, var_0, adj_b, adj_0, adj_2);
    wp::adj_extract(var_a, var_0, adj_a, adj_0, adj_1);
    // adj: return wp.vec3(wp.min(a[0], b[0]), wp.min(a[1], b[1]), wp.min(a[2], b[2]))        <L 186>
    // adj: def vec_min(a: wp.vec3, b: wp.vec3):                                              <L 185>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:189
static CUDA_CALLABLE wp::vec_t<3,wp::float32> vec_max(
    wp::vec_t<3,wp::float32> var_a,
    wp::vec_t<3,wp::float32> var_b)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    const wp::int32 var_4 = 1;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::float32 var_7;
    const wp::int32 var_8 = 2;
    wp::float32 var_9;
    wp::float32 var_10;
    wp::float32 var_11;
    wp::vec_t<3,wp::float32> var_12;
    //---------
    // forward
    // def vec_max(a: wp.vec3, b: wp.vec3):                                                   <L 190>
    // return wp.vec3(wp.max(a[0], b[0]), wp.max(a[1], b[1]), wp.max(a[2], b[2]))             <L 191>
    var_1 = wp::extract(var_a, var_0);
    var_2 = wp::extract(var_b, var_0);
    var_3 = wp::max(var_1, var_2);
    var_5 = wp::extract(var_a, var_4);
    var_6 = wp::extract(var_b, var_4);
    var_7 = wp::max(var_5, var_6);
    var_9 = wp::extract(var_a, var_8);
    var_10 = wp::extract(var_b, var_8);
    var_11 = wp::max(var_9, var_10);
    var_12 = wp::vec_t<3,wp::float32>(var_3, var_7, var_11);
    return var_12;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:189
static CUDA_CALLABLE void adj_vec_max(
    wp::vec_t<3,wp::float32> var_a,
    wp::vec_t<3,wp::float32> var_b,
    wp::vec_t<3,wp::float32> & adj_a,
    wp::vec_t<3,wp::float32> & adj_b,
    wp::vec_t<3,wp::float32> & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    const wp::int32 var_4 = 1;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::float32 var_7;
    const wp::int32 var_8 = 2;
    wp::float32 var_9;
    wp::float32 var_10;
    wp::float32 var_11;
    wp::vec_t<3,wp::float32> var_12;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::float32 adj_1 = {};
    wp::float32 adj_2 = {};
    wp::float32 adj_3 = {};
    wp::int32 adj_4 = {};
    wp::float32 adj_5 = {};
    wp::float32 adj_6 = {};
    wp::float32 adj_7 = {};
    wp::int32 adj_8 = {};
    wp::float32 adj_9 = {};
    wp::float32 adj_10 = {};
    wp::float32 adj_11 = {};
    wp::vec_t<3,wp::float32> adj_12 = {};
    //---------
    // forward
    // def vec_max(a: wp.vec3, b: wp.vec3):                                                   <L 190>
    // return wp.vec3(wp.max(a[0], b[0]), wp.max(a[1], b[1]), wp.max(a[2], b[2]))             <L 191>
    var_1 = wp::extract(var_a, var_0);
    var_2 = wp::extract(var_b, var_0);
    var_3 = wp::max(var_1, var_2);
    var_5 = wp::extract(var_a, var_4);
    var_6 = wp::extract(var_b, var_4);
    var_7 = wp::max(var_5, var_6);
    var_9 = wp::extract(var_a, var_8);
    var_10 = wp::extract(var_b, var_8);
    var_11 = wp::max(var_9, var_10);
    var_12 = wp::vec_t<3,wp::float32>(var_3, var_7, var_11);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_12 += adj_ret;
    wp::adj_vec_t(var_3, var_7, var_11, adj_3, adj_7, adj_11, adj_12);
    wp::adj_max(var_9, var_10, adj_9, adj_10, adj_11);
    wp::adj_extract(var_b, var_8, adj_b, adj_8, adj_10);
    wp::adj_extract(var_a, var_8, adj_a, adj_8, adj_9);
    wp::adj_max(var_5, var_6, adj_5, adj_6, adj_7);
    wp::adj_extract(var_b, var_4, adj_b, adj_4, adj_6);
    wp::adj_extract(var_a, var_4, adj_a, adj_4, adj_5);
    wp::adj_max(var_1, var_2, adj_1, adj_2, adj_3);
    wp::adj_extract(var_b, var_0, adj_b, adj_0, adj_2);
    wp::adj_extract(var_a, var_0, adj_a, adj_0, adj_1);
    // adj: return wp.vec3(wp.max(a[0], b[0]), wp.max(a[1], b[1]), wp.max(a[2], b[2]))        <L 191>
    // adj: def vec_max(a: wp.vec3, b: wp.vec3):                                              <L 190>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:777
static CUDA_CALLABLE wp::vec_t<6,wp::float32> update_joint_axis_limits(
    wp::vec_t<3,wp::float32> var_axis,
    wp::float32 var_limit_lower,
    wp::float32 var_limit_upper,
    wp::vec_t<6,wp::float32> var_input_limits)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float32> var_0;
    wp::vec_t<3,wp::float32> var_1;
    wp::vec_t<3,wp::float32> var_2;
    wp::vec_t<3,wp::float32> var_3;
    wp::vec_t<3,wp::float32> var_4;
    wp::vec_t<3,wp::float32> var_5;
    wp::vec_t<3,wp::float32> var_6;
    wp::vec_t<3,wp::float32> var_7;
    wp::vec_t<6,wp::float32> var_8;
    //---------
    // forward
    // def update_joint_axis_limits(axis: wp.vec3, limit_lower: float, limit_upper: float, input_limits: wp.spatial_vector):       <L 778>
    // lo_temp = axis * limit_lower                                                           <L 780>
    var_0 = wp::mul(var_axis, var_limit_lower);
    // up_temp = axis * limit_upper                                                           <L 781>
    var_1 = wp::mul(var_axis, var_limit_upper);
    // lo = vec_min(lo_temp, up_temp)                                                         <L 782>
    var_2 = vec_min(var_0, var_1);
    // up = vec_max(lo_temp, up_temp)                                                         <L 783>
    var_3 = vec_max(var_0, var_1);
    // input_lower = wp.spatial_top(input_limits)                                             <L 784>
    var_4 = wp::spatial_top(var_input_limits);
    // input_upper = wp.spatial_bottom(input_limits)                                          <L 785>
    var_5 = wp::spatial_bottom(var_input_limits);
    // lower = vec_min(input_lower, lo)                                                       <L 786>
    var_6 = vec_min(var_4, var_2);
    // upper = vec_max(input_upper, up)                                                       <L 787>
    var_7 = vec_max(var_5, var_3);
    // return wp.spatial_vector(lower, upper)                                                 <L 788>
    var_8 = wp::vec_t<6,wp::float32>(var_6, var_7);
    return var_8;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:777
static CUDA_CALLABLE void adj_update_joint_axis_limits(
    wp::vec_t<3,wp::float32> var_axis,
    wp::float32 var_limit_lower,
    wp::float32 var_limit_upper,
    wp::vec_t<6,wp::float32> var_input_limits,
    wp::vec_t<3,wp::float32> & adj_axis,
    wp::float32 & adj_limit_lower,
    wp::float32 & adj_limit_upper,
    wp::vec_t<6,wp::float32> & adj_input_limits,
    wp::vec_t<6,wp::float32> & adj_ret)
{
    //---------
    // primal vars
    wp::vec_t<3,wp::float32> var_0;
    wp::vec_t<3,wp::float32> var_1;
    wp::vec_t<3,wp::float32> var_2;
    wp::vec_t<3,wp::float32> var_3;
    wp::vec_t<3,wp::float32> var_4;
    wp::vec_t<3,wp::float32> var_5;
    wp::vec_t<3,wp::float32> var_6;
    wp::vec_t<3,wp::float32> var_7;
    wp::vec_t<6,wp::float32> var_8;
    //---------
    // dual vars
    wp::vec_t<3,wp::float32> adj_0 = {};
    wp::vec_t<3,wp::float32> adj_1 = {};
    wp::vec_t<3,wp::float32> adj_2 = {};
    wp::vec_t<3,wp::float32> adj_3 = {};
    wp::vec_t<3,wp::float32> adj_4 = {};
    wp::vec_t<3,wp::float32> adj_5 = {};
    wp::vec_t<3,wp::float32> adj_6 = {};
    wp::vec_t<3,wp::float32> adj_7 = {};
    wp::vec_t<6,wp::float32> adj_8 = {};
    //---------
    // forward
    // def update_joint_axis_limits(axis: wp.vec3, limit_lower: float, limit_upper: float, input_limits: wp.spatial_vector):       <L 778>
    // lo_temp = axis * limit_lower                                                           <L 780>
    var_0 = wp::mul(var_axis, var_limit_lower);
    // up_temp = axis * limit_upper                                                           <L 781>
    var_1 = wp::mul(var_axis, var_limit_upper);
    // lo = vec_min(lo_temp, up_temp)                                                         <L 782>
    var_2 = vec_min(var_0, var_1);
    // up = vec_max(lo_temp, up_temp)                                                         <L 783>
    var_3 = vec_max(var_0, var_1);
    // input_lower = wp.spatial_top(input_limits)                                             <L 784>
    var_4 = wp::spatial_top(var_input_limits);
    // input_upper = wp.spatial_bottom(input_limits)                                          <L 785>
    var_5 = wp::spatial_bottom(var_input_limits);
    // lower = vec_min(input_lower, lo)                                                       <L 786>
    var_6 = vec_min(var_4, var_2);
    // upper = vec_max(input_upper, up)                                                       <L 787>
    var_7 = vec_max(var_5, var_3);
    // return wp.spatial_vector(lower, upper)                                                 <L 788>
    var_8 = wp::vec_t<6,wp::float32>(var_6, var_7);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_8 += adj_ret;
    wp::adj_vec_t(var_6, var_7, adj_6, adj_7, adj_8);
    // adj: return wp.spatial_vector(lower, upper)                                            <L 788>
    adj_vec_max(var_5, var_3, adj_5, adj_3, adj_7);
    // adj: upper = vec_max(input_upper, up)                                                  <L 787>
    adj_vec_min(var_4, var_2, adj_4, adj_2, adj_6);
    // adj: lower = vec_min(input_lower, lo)                                                  <L 786>
    wp::adj_spatial_bottom(var_input_limits, adj_input_limits, adj_5);
    // adj: input_upper = wp.spatial_bottom(input_limits)                                     <L 785>
    wp::adj_spatial_top(var_input_limits, adj_input_limits, adj_4);
    // adj: input_lower = wp.spatial_top(input_limits)                                        <L 784>
    adj_vec_max(var_0, var_1, adj_0, adj_1, adj_3);
    // adj: up = vec_max(lo_temp, up_temp)                                                    <L 783>
    adj_vec_min(var_0, var_1, adj_0, adj_1, adj_2);
    // adj: lo = vec_min(lo_temp, up_temp)                                                    <L 782>
    wp::adj_mul(var_axis, var_limit_upper, adj_axis, adj_limit_upper, adj_1);
    // adj: up_temp = axis * limit_upper                                                      <L 781>
    wp::adj_mul(var_axis, var_limit_lower, adj_axis, adj_limit_lower, adj_0);
    // adj: lo_temp = axis * limit_lower                                                      <L 780>
    // adj: def update_joint_axis_limits(axis: wp.vec3, limit_lower: float, limit_upper: float, input_limits: wp.spatial_vector):  <L 778>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:194
static CUDA_CALLABLE wp::vec_t<3,wp::float32> vec_abs(
    wp::vec_t<3,wp::float32> var_a)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    const wp::int32 var_3 = 1;
    wp::float32 var_4;
    wp::float32 var_5;
    const wp::int32 var_6 = 2;
    wp::float32 var_7;
    wp::float32 var_8;
    wp::vec_t<3,wp::float32> var_9;
    //---------
    // forward
    // def vec_abs(a: wp.vec3):                                                               <L 195>
    // return wp.vec3(wp.abs(a[0]), wp.abs(a[1]), wp.abs(a[2]))                               <L 196>
    var_1 = wp::extract(var_a, var_0);
    var_2 = wp::abs(var_1);
    var_4 = wp::extract(var_a, var_3);
    var_5 = wp::abs(var_4);
    var_7 = wp::extract(var_a, var_6);
    var_8 = wp::abs(var_7);
    var_9 = wp::vec_t<3,wp::float32>(var_2, var_5, var_8);
    return var_9;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:194
static CUDA_CALLABLE void adj_vec_abs(
    wp::vec_t<3,wp::float32> var_a,
    wp::vec_t<3,wp::float32> & adj_a,
    wp::vec_t<3,wp::float32> & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::float32 var_1;
    wp::float32 var_2;
    const wp::int32 var_3 = 1;
    wp::float32 var_4;
    wp::float32 var_5;
    const wp::int32 var_6 = 2;
    wp::float32 var_7;
    wp::float32 var_8;
    wp::vec_t<3,wp::float32> var_9;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::float32 adj_1 = {};
    wp::float32 adj_2 = {};
    wp::int32 adj_3 = {};
    wp::float32 adj_4 = {};
    wp::float32 adj_5 = {};
    wp::int32 adj_6 = {};
    wp::float32 adj_7 = {};
    wp::float32 adj_8 = {};
    wp::vec_t<3,wp::float32> adj_9 = {};
    //---------
    // forward
    // def vec_abs(a: wp.vec3):                                                               <L 195>
    // return wp.vec3(wp.abs(a[0]), wp.abs(a[1]), wp.abs(a[2]))                               <L 196>
    var_1 = wp::extract(var_a, var_0);
    var_2 = wp::abs(var_1);
    var_4 = wp::extract(var_a, var_3);
    var_5 = wp::abs(var_4);
    var_7 = wp::extract(var_a, var_6);
    var_8 = wp::abs(var_7);
    var_9 = wp::vec_t<3,wp::float32>(var_2, var_5, var_8);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_9 += adj_ret;
    wp::adj_vec_t(var_2, var_5, var_8, adj_2, adj_5, adj_8, adj_9);
    wp::adj_abs(var_7, adj_7, adj_8);
    wp::adj_extract(var_a, var_6, adj_a, adj_6, adj_7);
    wp::adj_abs(var_4, adj_4, adj_5);
    wp::adj_extract(var_a, var_3, adj_a, adj_3, adj_4);
    wp::adj_abs(var_1, adj_1, adj_2);
    wp::adj_extract(var_a, var_0, adj_a, adj_0, adj_1);
    // adj: return wp.vec3(wp.abs(a[0]), wp.abs(a[1]), wp.abs(a[2]))                          <L 196>
    // adj: def vec_abs(a: wp.vec3):                                                          <L 195>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:791
static CUDA_CALLABLE wp::mat_t<3,3,wp::float32> update_joint_axis_target_ke_kd(
    wp::vec_t<3,wp::float32> var_axis,
    wp::float32 var_target,
    wp::float32 var_target_ke,
    wp::float32 var_target_kd,
    wp::mat_t<3,3,wp::float32> var_input_target_ke_kd)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::vec_t<3,wp::float32> var_1;
    const wp::int32 var_2 = 1;
    wp::vec_t<3,wp::float32> var_3;
    const wp::int32 var_4 = 2;
    wp::vec_t<3,wp::float32> var_5;
    wp::vec_t<3,wp::float32> var_6;
    wp::vec_t<3,wp::float32> var_7;
    wp::vec_t<3,wp::float32> var_8;
    wp::vec_t<3,wp::float32> var_9;
    wp::vec_t<3,wp::float32> var_10;
    wp::vec_t<3,wp::float32> var_11;
    wp::vec_t<3,wp::float32> var_12;
    wp::vec_t<3,wp::float32> var_13;
    wp::float32 var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    wp::float32 var_18;
    wp::float32 var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::mat_t<3,3,wp::float32> var_23;
    //---------
    // forward
    // def update_joint_axis_target_ke_kd(                                                    <L 792>
    // axis_target = input_target_ke_kd[0]                                                    <L 796>
    var_1 = wp::extract(var_input_target_ke_kd, var_0);
    // axis_ke = input_target_ke_kd[1]                                                        <L 797>
    var_3 = wp::extract(var_input_target_ke_kd, var_2);
    // axis_kd = input_target_ke_kd[2]                                                        <L 798>
    var_5 = wp::extract(var_input_target_ke_kd, var_4);
    // stiffness = axis * target_ke                                                           <L 799>
    var_6 = wp::mul(var_axis, var_target_ke);
    // axis_target += stiffness * target  # weighted target (to be normalized later by sum of target_ke)       <L 800>
    var_7 = wp::mul(var_6, var_target);
    var_8 = wp::add(var_1, var_7);
    // axis_ke += vec_abs(stiffness)                                                          <L 801>
    var_9 = vec_abs(var_6);
    var_10 = wp::add(var_3, var_9);
    // axis_kd += vec_abs(axis * target_kd)                                                   <L 802>
    var_11 = wp::mul(var_axis, var_target_kd);
    var_12 = vec_abs(var_11);
    var_13 = wp::add(var_5, var_12);
    // return wp.mat33(                                                                       <L 803>
    // axis_target[0],                                                                        <L 804>
    var_14 = wp::extract(var_8, var_0);
    // axis_target[1],                                                                        <L 805>
    var_15 = wp::extract(var_8, var_2);
    // axis_target[2],                                                                        <L 806>
    var_16 = wp::extract(var_8, var_4);
    // axis_ke[0],                                                                            <L 807>
    var_17 = wp::extract(var_10, var_0);
    // axis_ke[1],                                                                            <L 808>
    var_18 = wp::extract(var_10, var_2);
    // axis_ke[2],                                                                            <L 809>
    var_19 = wp::extract(var_10, var_4);
    // axis_kd[0],                                                                            <L 810>
    var_20 = wp::extract(var_13, var_0);
    // axis_kd[1],                                                                            <L 811>
    var_21 = wp::extract(var_13, var_2);
    // axis_kd[2],                                                                            <L 812>
    var_22 = wp::extract(var_13, var_4);
    var_23 = wp::mat_t<3,3,wp::float32>(var_14, var_15, var_16, var_17, var_18, var_19, var_20, var_21, var_22);
    return var_23;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:791
static CUDA_CALLABLE void adj_update_joint_axis_target_ke_kd(
    wp::vec_t<3,wp::float32> var_axis,
    wp::float32 var_target,
    wp::float32 var_target_ke,
    wp::float32 var_target_kd,
    wp::mat_t<3,3,wp::float32> var_input_target_ke_kd,
    wp::vec_t<3,wp::float32> & adj_axis,
    wp::float32 & adj_target,
    wp::float32 & adj_target_ke,
    wp::float32 & adj_target_kd,
    wp::mat_t<3,3,wp::float32> & adj_input_target_ke_kd,
    wp::mat_t<3,3,wp::float32> & adj_ret)
{
    //---------
    // primal vars
    const wp::int32 var_0 = 0;
    wp::vec_t<3,wp::float32> var_1;
    const wp::int32 var_2 = 1;
    wp::vec_t<3,wp::float32> var_3;
    const wp::int32 var_4 = 2;
    wp::vec_t<3,wp::float32> var_5;
    wp::vec_t<3,wp::float32> var_6;
    wp::vec_t<3,wp::float32> var_7;
    wp::vec_t<3,wp::float32> var_8;
    wp::vec_t<3,wp::float32> var_9;
    wp::vec_t<3,wp::float32> var_10;
    wp::vec_t<3,wp::float32> var_11;
    wp::vec_t<3,wp::float32> var_12;
    wp::vec_t<3,wp::float32> var_13;
    wp::float32 var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    wp::float32 var_18;
    wp::float32 var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::mat_t<3,3,wp::float32> var_23;
    //---------
    // dual vars
    wp::int32 adj_0 = {};
    wp::vec_t<3,wp::float32> adj_1 = {};
    wp::int32 adj_2 = {};
    wp::vec_t<3,wp::float32> adj_3 = {};
    wp::int32 adj_4 = {};
    wp::vec_t<3,wp::float32> adj_5 = {};
    wp::vec_t<3,wp::float32> adj_6 = {};
    wp::vec_t<3,wp::float32> adj_7 = {};
    wp::vec_t<3,wp::float32> adj_8 = {};
    wp::vec_t<3,wp::float32> adj_9 = {};
    wp::vec_t<3,wp::float32> adj_10 = {};
    wp::vec_t<3,wp::float32> adj_11 = {};
    wp::vec_t<3,wp::float32> adj_12 = {};
    wp::vec_t<3,wp::float32> adj_13 = {};
    wp::float32 adj_14 = {};
    wp::float32 adj_15 = {};
    wp::float32 adj_16 = {};
    wp::float32 adj_17 = {};
    wp::float32 adj_18 = {};
    wp::float32 adj_19 = {};
    wp::float32 adj_20 = {};
    wp::float32 adj_21 = {};
    wp::float32 adj_22 = {};
    wp::mat_t<3,3,wp::float32> adj_23 = {};
    //---------
    // forward
    // def update_joint_axis_target_ke_kd(                                                    <L 792>
    // axis_target = input_target_ke_kd[0]                                                    <L 796>
    var_1 = wp::extract(var_input_target_ke_kd, var_0);
    // axis_ke = input_target_ke_kd[1]                                                        <L 797>
    var_3 = wp::extract(var_input_target_ke_kd, var_2);
    // axis_kd = input_target_ke_kd[2]                                                        <L 798>
    var_5 = wp::extract(var_input_target_ke_kd, var_4);
    // stiffness = axis * target_ke                                                           <L 799>
    var_6 = wp::mul(var_axis, var_target_ke);
    // axis_target += stiffness * target  # weighted target (to be normalized later by sum of target_ke)       <L 800>
    var_7 = wp::mul(var_6, var_target);
    var_8 = wp::add(var_1, var_7);
    // axis_ke += vec_abs(stiffness)                                                          <L 801>
    var_9 = vec_abs(var_6);
    var_10 = wp::add(var_3, var_9);
    // axis_kd += vec_abs(axis * target_kd)                                                   <L 802>
    var_11 = wp::mul(var_axis, var_target_kd);
    var_12 = vec_abs(var_11);
    var_13 = wp::add(var_5, var_12);
    // return wp.mat33(                                                                       <L 803>
    // axis_target[0],                                                                        <L 804>
    var_14 = wp::extract(var_8, var_0);
    // axis_target[1],                                                                        <L 805>
    var_15 = wp::extract(var_8, var_2);
    // axis_target[2],                                                                        <L 806>
    var_16 = wp::extract(var_8, var_4);
    // axis_ke[0],                                                                            <L 807>
    var_17 = wp::extract(var_10, var_0);
    // axis_ke[1],                                                                            <L 808>
    var_18 = wp::extract(var_10, var_2);
    // axis_ke[2],                                                                            <L 809>
    var_19 = wp::extract(var_10, var_4);
    // axis_kd[0],                                                                            <L 810>
    var_20 = wp::extract(var_13, var_0);
    // axis_kd[1],                                                                            <L 811>
    var_21 = wp::extract(var_13, var_2);
    // axis_kd[2],                                                                            <L 812>
    var_22 = wp::extract(var_13, var_4);
    var_23 = wp::mat_t<3,3,wp::float32>(var_14, var_15, var_16, var_17, var_18, var_19, var_20, var_21, var_22);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_23 += adj_ret;
    wp::adj_mat_t(var_14, var_15, var_16, var_17, var_18, var_19, var_20, var_21, var_22, adj_14, adj_15, adj_16, adj_17, adj_18, adj_19, adj_20, adj_21, adj_22, adj_23);
    wp::adj_extract(var_13, var_4, adj_13, adj_4, adj_22);
    // adj: axis_kd[2],                                                                       <L 812>
    wp::adj_extract(var_13, var_2, adj_13, adj_2, adj_21);
    // adj: axis_kd[1],                                                                       <L 811>
    wp::adj_extract(var_13, var_0, adj_13, adj_0, adj_20);
    // adj: axis_kd[0],                                                                       <L 810>
    wp::adj_extract(var_10, var_4, adj_10, adj_4, adj_19);
    // adj: axis_ke[2],                                                                       <L 809>
    wp::adj_extract(var_10, var_2, adj_10, adj_2, adj_18);
    // adj: axis_ke[1],                                                                       <L 808>
    wp::adj_extract(var_10, var_0, adj_10, adj_0, adj_17);
    // adj: axis_ke[0],                                                                       <L 807>
    wp::adj_extract(var_8, var_4, adj_8, adj_4, adj_16);
    // adj: axis_target[2],                                                                   <L 806>
    wp::adj_extract(var_8, var_2, adj_8, adj_2, adj_15);
    // adj: axis_target[1],                                                                   <L 805>
    wp::adj_extract(var_8, var_0, adj_8, adj_0, adj_14);
    // adj: axis_target[0],                                                                   <L 804>
    // adj: return wp.mat33(                                                                  <L 803>
    wp::adj_add(var_5, var_12, adj_5, adj_12, adj_13);
    adj_vec_abs(var_11, adj_11, adj_12);
    wp::adj_mul(var_axis, var_target_kd, adj_axis, adj_target_kd, adj_11);
    // adj: axis_kd += vec_abs(axis * target_kd)                                              <L 802>
    wp::adj_add(var_3, var_9, adj_3, adj_9, adj_10);
    adj_vec_abs(var_6, adj_6, adj_9);
    // adj: axis_ke += vec_abs(stiffness)                                                     <L 801>
    wp::adj_add(var_1, var_7, adj_1, adj_7, adj_8);
    wp::adj_mul(var_6, var_target, adj_6, adj_target, adj_7);
    // adj: axis_target += stiffness * target  # weighted target (to be normalized later by sum of target_ke)  <L 800>
    wp::adj_mul(var_axis, var_target_ke, adj_axis, adj_target_ke, adj_6);
    // adj: stiffness = axis * target_ke                                                      <L 799>
    wp::adj_extract(var_input_target_ke_kd, var_4, adj_input_target_ke_kd, adj_4, adj_5);
    // adj: axis_kd = input_target_ke_kd[2]                                                   <L 798>
    wp::adj_extract(var_input_target_ke_kd, var_2, adj_input_target_ke_kd, adj_2, adj_3);
    // adj: axis_ke = input_target_ke_kd[1]                                                   <L 797>
    wp::adj_extract(var_input_target_ke_kd, var_0, adj_input_target_ke_kd, adj_0, adj_1);
    // adj: axis_target = input_target_ke_kd[0]                                               <L 796>
    // adj: def update_joint_axis_target_ke_kd(                                               <L 792>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:1304
static CUDA_CALLABLE wp::float32 compute_contact_constraint_delta(
    wp::float32 var_err,
    wp::transform_t<wp::float32> var_tf_a,
    wp::transform_t<wp::float32> var_tf_b,
    wp::float32 var_m_inv_a,
    wp::float32 var_m_inv_b,
    wp::mat_t<3,3,wp::float32> var_I_inv_a,
    wp::mat_t<3,3,wp::float32> var_I_inv_b,
    wp::vec_t<3,wp::float32> var_linear_a,
    wp::vec_t<3,wp::float32> var_linear_b,
    wp::vec_t<3,wp::float32> var_angular_a,
    wp::vec_t<3,wp::float32> var_angular_b,
    wp::float32 var_relaxation,
    wp::float32 var_dt)
{
    //---------
    // primal vars
    const wp::float32 var_0 = 0.0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    wp::float32 var_4;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::quat_t<wp::float32> var_7;
    wp::quat_t<wp::float32> var_8;
    wp::vec_t<3,wp::float32> var_9;
    wp::vec_t<3,wp::float32> var_10;
    wp::vec_t<3,wp::float32> var_11;
    wp::float32 var_12;
    wp::float32 var_13;
    wp::vec_t<3,wp::float32> var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    bool var_18;
    wp::float32 var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::float32 var_23;
    //---------
    // forward
    // def compute_contact_constraint_delta(                                                  <L 1305>
    // denom = 0.0                                                                            <L 1320>
    // denom += wp.length_sq(linear_a) * m_inv_a                                              <L 1321>
    var_1 = wp::length_sq(var_linear_a);
    var_2 = wp::mul(var_1, var_m_inv_a);
    var_3 = wp::add(var_0, var_2);
    // denom += wp.length_sq(linear_b) * m_inv_b                                              <L 1322>
    var_4 = wp::length_sq(var_linear_b);
    var_5 = wp::mul(var_4, var_m_inv_b);
    var_6 = wp::add(var_3, var_5);
    // q1 = wp.transform_get_rotation(tf_a)                                                   <L 1324>
    var_7 = wp::transform_get_rotation(var_tf_a);
    // q2 = wp.transform_get_rotation(tf_b)                                                   <L 1325>
    var_8 = wp::transform_get_rotation(var_tf_b);
    // rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                      <L 1328>
    var_9 = wp::quat_rotate_inv(var_7, var_angular_a);
    // rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                      <L 1329>
    var_10 = wp::quat_rotate_inv(var_8, var_angular_b);
    // denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                                <L 1331>
    var_11 = wp::mul(var_I_inv_a, var_9);
    var_12 = wp::dot(var_9, var_11);
    var_13 = wp::add(var_6, var_12);
    // denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                                <L 1332>
    var_14 = wp::mul(var_I_inv_b, var_10);
    var_15 = wp::dot(var_10, var_14);
    var_16 = wp::add(var_13, var_15);
    // deltaLambda = -err                                                                     <L 1334>
    var_17 = wp::neg(var_err);
    // if denom > 0.0:                                                                        <L 1335>
    var_18 = (var_16 > var_0);
    if (var_18) {
        // deltaLambda /= dt * dt * denom                                                     <L 1336>
        var_19 = wp::mul(var_dt, var_dt);
        var_20 = wp::mul(var_19, var_16);
        var_21 = wp::div(var_17, var_20);
    }
    var_22 = wp::select(var_18, var_17, var_21);
    // return deltaLambda * relaxation                                                        <L 1338>
    var_23 = wp::mul(var_22, var_relaxation);
    return var_23;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:1304
static CUDA_CALLABLE void adj_compute_contact_constraint_delta(
    wp::float32 var_err,
    wp::transform_t<wp::float32> var_tf_a,
    wp::transform_t<wp::float32> var_tf_b,
    wp::float32 var_m_inv_a,
    wp::float32 var_m_inv_b,
    wp::mat_t<3,3,wp::float32> var_I_inv_a,
    wp::mat_t<3,3,wp::float32> var_I_inv_b,
    wp::vec_t<3,wp::float32> var_linear_a,
    wp::vec_t<3,wp::float32> var_linear_b,
    wp::vec_t<3,wp::float32> var_angular_a,
    wp::vec_t<3,wp::float32> var_angular_b,
    wp::float32 var_relaxation,
    wp::float32 var_dt,
    wp::float32 & adj_err,
    wp::transform_t<wp::float32> & adj_tf_a,
    wp::transform_t<wp::float32> & adj_tf_b,
    wp::float32 & adj_m_inv_a,
    wp::float32 & adj_m_inv_b,
    wp::mat_t<3,3,wp::float32> & adj_I_inv_a,
    wp::mat_t<3,3,wp::float32> & adj_I_inv_b,
    wp::vec_t<3,wp::float32> & adj_linear_a,
    wp::vec_t<3,wp::float32> & adj_linear_b,
    wp::vec_t<3,wp::float32> & adj_angular_a,
    wp::vec_t<3,wp::float32> & adj_angular_b,
    wp::float32 & adj_relaxation,
    wp::float32 & adj_dt,
    wp::float32 & adj_ret)
{
    //---------
    // primal vars
    const wp::float32 var_0 = 0.0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    wp::float32 var_4;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::quat_t<wp::float32> var_7;
    wp::quat_t<wp::float32> var_8;
    wp::vec_t<3,wp::float32> var_9;
    wp::vec_t<3,wp::float32> var_10;
    wp::vec_t<3,wp::float32> var_11;
    wp::float32 var_12;
    wp::float32 var_13;
    wp::vec_t<3,wp::float32> var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    bool var_18;
    wp::float32 var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::float32 var_23;
    //---------
    // dual vars
    wp::float32 adj_0 = {};
    wp::float32 adj_1 = {};
    wp::float32 adj_2 = {};
    wp::float32 adj_3 = {};
    wp::float32 adj_4 = {};
    wp::float32 adj_5 = {};
    wp::float32 adj_6 = {};
    wp::quat_t<wp::float32> adj_7 = {};
    wp::quat_t<wp::float32> adj_8 = {};
    wp::vec_t<3,wp::float32> adj_9 = {};
    wp::vec_t<3,wp::float32> adj_10 = {};
    wp::vec_t<3,wp::float32> adj_11 = {};
    wp::float32 adj_12 = {};
    wp::float32 adj_13 = {};
    wp::vec_t<3,wp::float32> adj_14 = {};
    wp::float32 adj_15 = {};
    wp::float32 adj_16 = {};
    wp::float32 adj_17 = {};
    bool adj_18 = {};
    wp::float32 adj_19 = {};
    wp::float32 adj_20 = {};
    wp::float32 adj_21 = {};
    wp::float32 adj_22 = {};
    wp::float32 adj_23 = {};
    //---------
    // forward
    // def compute_contact_constraint_delta(                                                  <L 1305>
    // denom = 0.0                                                                            <L 1320>
    // denom += wp.length_sq(linear_a) * m_inv_a                                              <L 1321>
    var_1 = wp::length_sq(var_linear_a);
    var_2 = wp::mul(var_1, var_m_inv_a);
    var_3 = wp::add(var_0, var_2);
    // denom += wp.length_sq(linear_b) * m_inv_b                                              <L 1322>
    var_4 = wp::length_sq(var_linear_b);
    var_5 = wp::mul(var_4, var_m_inv_b);
    var_6 = wp::add(var_3, var_5);
    // q1 = wp.transform_get_rotation(tf_a)                                                   <L 1324>
    var_7 = wp::transform_get_rotation(var_tf_a);
    // q2 = wp.transform_get_rotation(tf_b)                                                   <L 1325>
    var_8 = wp::transform_get_rotation(var_tf_b);
    // rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                      <L 1328>
    var_9 = wp::quat_rotate_inv(var_7, var_angular_a);
    // rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                      <L 1329>
    var_10 = wp::quat_rotate_inv(var_8, var_angular_b);
    // denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                                <L 1331>
    var_11 = wp::mul(var_I_inv_a, var_9);
    var_12 = wp::dot(var_9, var_11);
    var_13 = wp::add(var_6, var_12);
    // denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                                <L 1332>
    var_14 = wp::mul(var_I_inv_b, var_10);
    var_15 = wp::dot(var_10, var_14);
    var_16 = wp::add(var_13, var_15);
    // deltaLambda = -err                                                                     <L 1334>
    var_17 = wp::neg(var_err);
    // if denom > 0.0:                                                                        <L 1335>
    var_18 = (var_16 > var_0);
    if (var_18) {
        // deltaLambda /= dt * dt * denom                                                     <L 1336>
        var_19 = wp::mul(var_dt, var_dt);
        var_20 = wp::mul(var_19, var_16);
        var_21 = wp::div(var_17, var_20);
    }
    var_22 = wp::select(var_18, var_17, var_21);
    // return deltaLambda * relaxation                                                        <L 1338>
    var_23 = wp::mul(var_22, var_relaxation);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_23 += adj_ret;
    wp::adj_mul(var_22, var_relaxation, adj_22, adj_relaxation, adj_23);
    // adj: return deltaLambda * relaxation                                                   <L 1338>
    wp::adj_select(var_18, var_17, var_21, adj_18, adj_17, adj_21, adj_22);
    if (var_18) {
        wp::adj_div(var_17, var_20, var_21, adj_17, adj_20, adj_21);
        wp::adj_mul(var_19, var_16, adj_19, adj_16, adj_20);
        wp::adj_mul(var_dt, var_dt, adj_dt, adj_dt, adj_19);
        // adj: deltaLambda /= dt * dt * denom                                                <L 1336>
    }
    // adj: if denom > 0.0:                                                                   <L 1335>
    wp::adj_neg(var_err, adj_err, adj_17);
    // adj: deltaLambda = -err                                                                <L 1334>
    wp::adj_add(var_13, var_15, adj_13, adj_15, adj_16);
    wp::adj_dot(var_10, var_14, adj_10, adj_14, adj_15);
    wp::adj_mul(var_I_inv_b, var_10, adj_I_inv_b, adj_10, adj_14);
    // adj: denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                           <L 1332>
    wp::adj_add(var_6, var_12, adj_6, adj_12, adj_13);
    wp::adj_dot(var_9, var_11, adj_9, adj_11, adj_12);
    wp::adj_mul(var_I_inv_a, var_9, adj_I_inv_a, adj_9, adj_11);
    // adj: denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                           <L 1331>
    wp::adj_quat_rotate_inv(var_8, var_angular_b, adj_8, adj_angular_b, adj_10);
    // adj: rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                 <L 1329>
    wp::adj_quat_rotate_inv(var_7, var_angular_a, adj_7, adj_angular_a, adj_9);
    // adj: rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                 <L 1328>
    wp::adj_transform_get_rotation(var_tf_b, adj_tf_b, adj_8);
    // adj: q2 = wp.transform_get_rotation(tf_b)                                              <L 1325>
    wp::adj_transform_get_rotation(var_tf_a, adj_tf_a, adj_7);
    // adj: q1 = wp.transform_get_rotation(tf_a)                                              <L 1324>
    wp::adj_add(var_3, var_5, adj_3, adj_5, adj_6);
    wp::adj_mul(var_4, var_m_inv_b, adj_4, adj_m_inv_b, adj_5);
    wp::adj_length_sq(var_linear_b, adj_linear_b, adj_4);
    // adj: denom += wp.length_sq(linear_b) * m_inv_b                                         <L 1322>
    wp::adj_add(var_0, var_2, adj_0, adj_2, adj_3);
    wp::adj_mul(var_1, var_m_inv_a, adj_1, adj_m_inv_a, adj_2);
    wp::adj_length_sq(var_linear_a, adj_linear_a, adj_1);
    // adj: denom += wp.length_sq(linear_a) * m_inv_a                                         <L 1321>
    // adj: denom = 0.0                                                                       <L 1320>
    // adj: def compute_contact_constraint_delta(                                             <L 1305>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:1341
static CUDA_CALLABLE wp::float32 compute_positional_correction(
    wp::float32 var_err,
    wp::float32 var_derr,
    wp::transform_t<wp::float32> var_tf_a,
    wp::transform_t<wp::float32> var_tf_b,
    wp::float32 var_m_inv_a,
    wp::float32 var_m_inv_b,
    wp::mat_t<3,3,wp::float32> var_I_inv_a,
    wp::mat_t<3,3,wp::float32> var_I_inv_b,
    wp::vec_t<3,wp::float32> var_linear_a,
    wp::vec_t<3,wp::float32> var_linear_b,
    wp::vec_t<3,wp::float32> var_angular_a,
    wp::vec_t<3,wp::float32> var_angular_b,
    wp::float32 var_lambda_in,
    wp::float32 var_compliance,
    wp::float32 var_damping,
    wp::float32 var_dt)
{
    //---------
    // primal vars
    const wp::float32 var_0 = 0.0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    wp::float32 var_4;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::quat_t<wp::float32> var_7;
    wp::quat_t<wp::float32> var_8;
    wp::vec_t<3,wp::float32> var_9;
    wp::vec_t<3,wp::float32> var_10;
    wp::vec_t<3,wp::float32> var_11;
    wp::float32 var_12;
    wp::float32 var_13;
    wp::vec_t<3,wp::float32> var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    wp::float32 var_18;
    wp::float32 var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::float32 var_23;
    wp::float32 var_24;
    bool var_25;
    wp::float32 var_26;
    wp::float32 var_27;
    wp::float32 var_28;
    wp::float32 var_29;
    wp::float32 var_30;
    wp::float32 var_31;
    //---------
    // forward
    // def compute_positional_correction(                                                     <L 1342>
    // denom = 0.0                                                                            <L 1360>
    // denom += wp.length_sq(linear_a) * m_inv_a                                              <L 1361>
    var_1 = wp::length_sq(var_linear_a);
    var_2 = wp::mul(var_1, var_m_inv_a);
    var_3 = wp::add(var_0, var_2);
    // denom += wp.length_sq(linear_b) * m_inv_b                                              <L 1362>
    var_4 = wp::length_sq(var_linear_b);
    var_5 = wp::mul(var_4, var_m_inv_b);
    var_6 = wp::add(var_3, var_5);
    // q1 = wp.transform_get_rotation(tf_a)                                                   <L 1364>
    var_7 = wp::transform_get_rotation(var_tf_a);
    // q2 = wp.transform_get_rotation(tf_b)                                                   <L 1365>
    var_8 = wp::transform_get_rotation(var_tf_b);
    // rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                      <L 1368>
    var_9 = wp::quat_rotate_inv(var_7, var_angular_a);
    // rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                      <L 1369>
    var_10 = wp::quat_rotate_inv(var_8, var_angular_b);
    // denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                                <L 1371>
    var_11 = wp::mul(var_I_inv_a, var_9);
    var_12 = wp::dot(var_9, var_11);
    var_13 = wp::add(var_6, var_12);
    // denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                                <L 1372>
    var_14 = wp::mul(var_I_inv_b, var_10);
    var_15 = wp::dot(var_10, var_14);
    var_16 = wp::add(var_13, var_15);
    // alpha = compliance                                                                     <L 1374>
    var_17 = wp::copy(var_compliance);
    // gamma = compliance * damping                                                           <L 1375>
    var_18 = wp::mul(var_compliance, var_damping);
    // deltaLambda = -(err + alpha * lambda_in + gamma * derr)                                <L 1377>
    var_19 = wp::mul(var_17, var_lambda_in);
    var_20 = wp::add(var_err, var_19);
    var_21 = wp::mul(var_18, var_derr);
    var_22 = wp::add(var_20, var_21);
    var_23 = wp::neg(var_22);
    // if denom + alpha > 0.0:                                                                <L 1378>
    var_24 = wp::add(var_16, var_17);
    var_25 = (var_24 > var_0);
    if (var_25) {
        // deltaLambda /= dt * (dt + gamma) * denom + alpha                                   <L 1379>
        var_26 = wp::add(var_dt, var_18);
        var_27 = wp::mul(var_dt, var_26);
        var_28 = wp::mul(var_27, var_16);
        var_29 = wp::add(var_28, var_17);
        var_30 = wp::div(var_23, var_29);
    }
    var_31 = wp::select(var_25, var_23, var_30);
    // return deltaLambda                                                                     <L 1381>
    return var_31;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:1341
static CUDA_CALLABLE void adj_compute_positional_correction(
    wp::float32 var_err,
    wp::float32 var_derr,
    wp::transform_t<wp::float32> var_tf_a,
    wp::transform_t<wp::float32> var_tf_b,
    wp::float32 var_m_inv_a,
    wp::float32 var_m_inv_b,
    wp::mat_t<3,3,wp::float32> var_I_inv_a,
    wp::mat_t<3,3,wp::float32> var_I_inv_b,
    wp::vec_t<3,wp::float32> var_linear_a,
    wp::vec_t<3,wp::float32> var_linear_b,
    wp::vec_t<3,wp::float32> var_angular_a,
    wp::vec_t<3,wp::float32> var_angular_b,
    wp::float32 var_lambda_in,
    wp::float32 var_compliance,
    wp::float32 var_damping,
    wp::float32 var_dt,
    wp::float32 & adj_err,
    wp::float32 & adj_derr,
    wp::transform_t<wp::float32> & adj_tf_a,
    wp::transform_t<wp::float32> & adj_tf_b,
    wp::float32 & adj_m_inv_a,
    wp::float32 & adj_m_inv_b,
    wp::mat_t<3,3,wp::float32> & adj_I_inv_a,
    wp::mat_t<3,3,wp::float32> & adj_I_inv_b,
    wp::vec_t<3,wp::float32> & adj_linear_a,
    wp::vec_t<3,wp::float32> & adj_linear_b,
    wp::vec_t<3,wp::float32> & adj_angular_a,
    wp::vec_t<3,wp::float32> & adj_angular_b,
    wp::float32 & adj_lambda_in,
    wp::float32 & adj_compliance,
    wp::float32 & adj_damping,
    wp::float32 & adj_dt,
    wp::float32 & adj_ret)
{
    //---------
    // primal vars
    const wp::float32 var_0 = 0.0;
    wp::float32 var_1;
    wp::float32 var_2;
    wp::float32 var_3;
    wp::float32 var_4;
    wp::float32 var_5;
    wp::float32 var_6;
    wp::quat_t<wp::float32> var_7;
    wp::quat_t<wp::float32> var_8;
    wp::vec_t<3,wp::float32> var_9;
    wp::vec_t<3,wp::float32> var_10;
    wp::vec_t<3,wp::float32> var_11;
    wp::float32 var_12;
    wp::float32 var_13;
    wp::vec_t<3,wp::float32> var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    wp::float32 var_18;
    wp::float32 var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::float32 var_23;
    wp::float32 var_24;
    bool var_25;
    wp::float32 var_26;
    wp::float32 var_27;
    wp::float32 var_28;
    wp::float32 var_29;
    wp::float32 var_30;
    wp::float32 var_31;
    //---------
    // dual vars
    wp::float32 adj_0 = {};
    wp::float32 adj_1 = {};
    wp::float32 adj_2 = {};
    wp::float32 adj_3 = {};
    wp::float32 adj_4 = {};
    wp::float32 adj_5 = {};
    wp::float32 adj_6 = {};
    wp::quat_t<wp::float32> adj_7 = {};
    wp::quat_t<wp::float32> adj_8 = {};
    wp::vec_t<3,wp::float32> adj_9 = {};
    wp::vec_t<3,wp::float32> adj_10 = {};
    wp::vec_t<3,wp::float32> adj_11 = {};
    wp::float32 adj_12 = {};
    wp::float32 adj_13 = {};
    wp::vec_t<3,wp::float32> adj_14 = {};
    wp::float32 adj_15 = {};
    wp::float32 adj_16 = {};
    wp::float32 adj_17 = {};
    wp::float32 adj_18 = {};
    wp::float32 adj_19 = {};
    wp::float32 adj_20 = {};
    wp::float32 adj_21 = {};
    wp::float32 adj_22 = {};
    wp::float32 adj_23 = {};
    wp::float32 adj_24 = {};
    bool adj_25 = {};
    wp::float32 adj_26 = {};
    wp::float32 adj_27 = {};
    wp::float32 adj_28 = {};
    wp::float32 adj_29 = {};
    wp::float32 adj_30 = {};
    wp::float32 adj_31 = {};
    //---------
    // forward
    // def compute_positional_correction(                                                     <L 1342>
    // denom = 0.0                                                                            <L 1360>
    // denom += wp.length_sq(linear_a) * m_inv_a                                              <L 1361>
    var_1 = wp::length_sq(var_linear_a);
    var_2 = wp::mul(var_1, var_m_inv_a);
    var_3 = wp::add(var_0, var_2);
    // denom += wp.length_sq(linear_b) * m_inv_b                                              <L 1362>
    var_4 = wp::length_sq(var_linear_b);
    var_5 = wp::mul(var_4, var_m_inv_b);
    var_6 = wp::add(var_3, var_5);
    // q1 = wp.transform_get_rotation(tf_a)                                                   <L 1364>
    var_7 = wp::transform_get_rotation(var_tf_a);
    // q2 = wp.transform_get_rotation(tf_b)                                                   <L 1365>
    var_8 = wp::transform_get_rotation(var_tf_b);
    // rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                      <L 1368>
    var_9 = wp::quat_rotate_inv(var_7, var_angular_a);
    // rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                      <L 1369>
    var_10 = wp::quat_rotate_inv(var_8, var_angular_b);
    // denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                                <L 1371>
    var_11 = wp::mul(var_I_inv_a, var_9);
    var_12 = wp::dot(var_9, var_11);
    var_13 = wp::add(var_6, var_12);
    // denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                                <L 1372>
    var_14 = wp::mul(var_I_inv_b, var_10);
    var_15 = wp::dot(var_10, var_14);
    var_16 = wp::add(var_13, var_15);
    // alpha = compliance                                                                     <L 1374>
    var_17 = wp::copy(var_compliance);
    // gamma = compliance * damping                                                           <L 1375>
    var_18 = wp::mul(var_compliance, var_damping);
    // deltaLambda = -(err + alpha * lambda_in + gamma * derr)                                <L 1377>
    var_19 = wp::mul(var_17, var_lambda_in);
    var_20 = wp::add(var_err, var_19);
    var_21 = wp::mul(var_18, var_derr);
    var_22 = wp::add(var_20, var_21);
    var_23 = wp::neg(var_22);
    // if denom + alpha > 0.0:                                                                <L 1378>
    var_24 = wp::add(var_16, var_17);
    var_25 = (var_24 > var_0);
    if (var_25) {
        // deltaLambda /= dt * (dt + gamma) * denom + alpha                                   <L 1379>
        var_26 = wp::add(var_dt, var_18);
        var_27 = wp::mul(var_dt, var_26);
        var_28 = wp::mul(var_27, var_16);
        var_29 = wp::add(var_28, var_17);
        var_30 = wp::div(var_23, var_29);
    }
    var_31 = wp::select(var_25, var_23, var_30);
    // return deltaLambda                                                                     <L 1381>
    goto label0;
    //---------
    // reverse
    label0:;
    adj_31 += adj_ret;
    // adj: return deltaLambda                                                                <L 1381>
    wp::adj_select(var_25, var_23, var_30, adj_25, adj_23, adj_30, adj_31);
    if (var_25) {
        wp::adj_div(var_23, var_29, var_30, adj_23, adj_29, adj_30);
        wp::adj_add(var_28, var_17, adj_28, adj_17, adj_29);
        wp::adj_mul(var_27, var_16, adj_27, adj_16, adj_28);
        wp::adj_mul(var_dt, var_26, adj_dt, adj_26, adj_27);
        wp::adj_add(var_dt, var_18, adj_dt, adj_18, adj_26);
        // adj: deltaLambda /= dt * (dt + gamma) * denom + alpha                              <L 1379>
    }
    wp::adj_add(var_16, var_17, adj_16, adj_17, adj_24);
    // adj: if denom + alpha > 0.0:                                                           <L 1378>
    wp::adj_neg(var_22, adj_22, adj_23);
    wp::adj_add(var_20, var_21, adj_20, adj_21, adj_22);
    wp::adj_mul(var_18, var_derr, adj_18, adj_derr, adj_21);
    wp::adj_add(var_err, var_19, adj_err, adj_19, adj_20);
    wp::adj_mul(var_17, var_lambda_in, adj_17, adj_lambda_in, adj_19);
    // adj: deltaLambda = -(err + alpha * lambda_in + gamma * derr)                           <L 1377>
    wp::adj_mul(var_compliance, var_damping, adj_compliance, adj_damping, adj_18);
    // adj: gamma = compliance * damping                                                      <L 1375>
    wp::adj_copy(var_compliance, adj_compliance, adj_17);
    // adj: alpha = compliance                                                                <L 1374>
    wp::adj_add(var_13, var_15, adj_13, adj_15, adj_16);
    wp::adj_dot(var_10, var_14, adj_10, adj_14, adj_15);
    wp::adj_mul(var_I_inv_b, var_10, adj_I_inv_b, adj_10, adj_14);
    // adj: denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                           <L 1372>
    wp::adj_add(var_6, var_12, adj_6, adj_12, adj_13);
    wp::adj_dot(var_9, var_11, adj_9, adj_11, adj_12);
    wp::adj_mul(var_I_inv_a, var_9, adj_I_inv_a, adj_9, adj_11);
    // adj: denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                           <L 1371>
    wp::adj_quat_rotate_inv(var_8, var_angular_b, adj_8, adj_angular_b, adj_10);
    // adj: rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                 <L 1369>
    wp::adj_quat_rotate_inv(var_7, var_angular_a, adj_7, adj_angular_a, adj_9);
    // adj: rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                 <L 1368>
    wp::adj_transform_get_rotation(var_tf_b, adj_tf_b, adj_8);
    // adj: q2 = wp.transform_get_rotation(tf_b)                                              <L 1365>
    wp::adj_transform_get_rotation(var_tf_a, adj_tf_a, adj_7);
    // adj: q1 = wp.transform_get_rotation(tf_a)                                              <L 1364>
    wp::adj_add(var_3, var_5, adj_3, adj_5, adj_6);
    wp::adj_mul(var_4, var_m_inv_b, adj_4, adj_m_inv_b, adj_5);
    wp::adj_length_sq(var_linear_b, adj_linear_b, adj_4);
    // adj: denom += wp.length_sq(linear_b) * m_inv_b                                         <L 1362>
    wp::adj_add(var_0, var_2, adj_0, adj_2, adj_3);
    wp::adj_mul(var_1, var_m_inv_a, adj_1, adj_m_inv_a, adj_2);
    wp::adj_length_sq(var_linear_a, adj_linear_a, adj_1);
    // adj: denom += wp.length_sq(linear_a) * m_inv_a                                         <L 1361>
    // adj: denom = 0.0                                                                       <L 1360>
    // adj: def compute_positional_correction(                                                <L 1342>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:1384
static CUDA_CALLABLE wp::float32 compute_angular_correction(
    wp::float32 var_err,
    wp::float32 var_derr,
    wp::transform_t<wp::float32> var_tf_a,
    wp::transform_t<wp::float32> var_tf_b,
    wp::mat_t<3,3,wp::float32> var_I_inv_a,
    wp::mat_t<3,3,wp::float32> var_I_inv_b,
    wp::vec_t<3,wp::float32> var_angular_a,
    wp::vec_t<3,wp::float32> var_angular_b,
    wp::float32 var_lambda_in,
    wp::float32 var_compliance,
    wp::float32 var_damping,
    wp::float32 var_dt)
{
    //---------
    // primal vars
    const wp::float32 var_0 = 0.0;
    wp::quat_t<wp::float32> var_1;
    wp::quat_t<wp::float32> var_2;
    wp::vec_t<3,wp::float32> var_3;
    wp::vec_t<3,wp::float32> var_4;
    wp::vec_t<3,wp::float32> var_5;
    wp::float32 var_6;
    wp::float32 var_7;
    wp::vec_t<3,wp::float32> var_8;
    wp::float32 var_9;
    wp::float32 var_10;
    wp::float32 var_11;
    wp::float32 var_12;
    wp::float32 var_13;
    wp::float32 var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    wp::float32 var_18;
    bool var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::float32 var_23;
    wp::float32 var_24;
    wp::float32 var_25;
    //---------
    // forward
    // def compute_angular_correction(                                                        <L 1385>
    // denom = 0.0                                                                            <L 1399>
    // q1 = wp.transform_get_rotation(tf_a)                                                   <L 1401>
    var_1 = wp::transform_get_rotation(var_tf_a);
    // q2 = wp.transform_get_rotation(tf_b)                                                   <L 1402>
    var_2 = wp::transform_get_rotation(var_tf_b);
    // rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                      <L 1405>
    var_3 = wp::quat_rotate_inv(var_1, var_angular_a);
    // rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                      <L 1406>
    var_4 = wp::quat_rotate_inv(var_2, var_angular_b);
    // denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                                <L 1408>
    var_5 = wp::mul(var_I_inv_a, var_3);
    var_6 = wp::dot(var_3, var_5);
    var_7 = wp::add(var_0, var_6);
    // denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                                <L 1409>
    var_8 = wp::mul(var_I_inv_b, var_4);
    var_9 = wp::dot(var_4, var_8);
    var_10 = wp::add(var_7, var_9);
    // alpha = compliance                                                                     <L 1411>
    var_11 = wp::copy(var_compliance);
    // gamma = compliance * damping                                                           <L 1412>
    var_12 = wp::mul(var_compliance, var_damping);
    // deltaLambda = -(err + alpha * lambda_in + gamma * derr)                                <L 1414>
    var_13 = wp::mul(var_11, var_lambda_in);
    var_14 = wp::add(var_err, var_13);
    var_15 = wp::mul(var_12, var_derr);
    var_16 = wp::add(var_14, var_15);
    var_17 = wp::neg(var_16);
    // if denom + alpha > 0.0:                                                                <L 1415>
    var_18 = wp::add(var_10, var_11);
    var_19 = (var_18 > var_0);
    if (var_19) {
        // deltaLambda /= dt * (dt + gamma) * denom + alpha                                   <L 1416>
        var_20 = wp::add(var_dt, var_12);
        var_21 = wp::mul(var_dt, var_20);
        var_22 = wp::mul(var_21, var_10);
        var_23 = wp::add(var_22, var_11);
        var_24 = wp::div(var_17, var_23);
    }
    var_25 = wp::select(var_19, var_17, var_24);
    // return deltaLambda                                                                     <L 1418>
    return var_25;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\integrator_xpbd.py:1384
static CUDA_CALLABLE void adj_compute_angular_correction(
    wp::float32 var_err,
    wp::float32 var_derr,
    wp::transform_t<wp::float32> var_tf_a,
    wp::transform_t<wp::float32> var_tf_b,
    wp::mat_t<3,3,wp::float32> var_I_inv_a,
    wp::mat_t<3,3,wp::float32> var_I_inv_b,
    wp::vec_t<3,wp::float32> var_angular_a,
    wp::vec_t<3,wp::float32> var_angular_b,
    wp::float32 var_lambda_in,
    wp::float32 var_compliance,
    wp::float32 var_damping,
    wp::float32 var_dt,
    wp::float32 & adj_err,
    wp::float32 & adj_derr,
    wp::transform_t<wp::float32> & adj_tf_a,
    wp::transform_t<wp::float32> & adj_tf_b,
    wp::mat_t<3,3,wp::float32> & adj_I_inv_a,
    wp::mat_t<3,3,wp::float32> & adj_I_inv_b,
    wp::vec_t<3,wp::float32> & adj_angular_a,
    wp::vec_t<3,wp::float32> & adj_angular_b,
    wp::float32 & adj_lambda_in,
    wp::float32 & adj_compliance,
    wp::float32 & adj_damping,
    wp::float32 & adj_dt,
    wp::float32 & adj_ret)
{
    //---------
    // primal vars
    const wp::float32 var_0 = 0.0;
    wp::quat_t<wp::float32> var_1;
    wp::quat_t<wp::float32> var_2;
    wp::vec_t<3,wp::float32> var_3;
    wp::vec_t<3,wp::float32> var_4;
    wp::vec_t<3,wp::float32> var_5;
    wp::float32 var_6;
    wp::float32 var_7;
    wp::vec_t<3,wp::float32> var_8;
    wp::float32 var_9;
    wp::float32 var_10;
    wp::float32 var_11;
    wp::float32 var_12;
    wp::float32 var_13;
    wp::float32 var_14;
    wp::float32 var_15;
    wp::float32 var_16;
    wp::float32 var_17;
    wp::float32 var_18;
    bool var_19;
    wp::float32 var_20;
    wp::float32 var_21;
    wp::float32 var_22;
    wp::float32 var_23;
    wp::float32 var_24;
    wp::float32 var_25;
    //---------
    // dual vars
    wp::float32 adj_0 = {};
    wp::quat_t<wp::float32> adj_1 = {};
    wp::quat_t<wp::float32> adj_2 = {};
    wp::vec_t<3,wp::float32> adj_3 = {};
    wp::vec_t<3,wp::float32> adj_4 = {};
    wp::vec_t<3,wp::float32> adj_5 = {};
    wp::float32 adj_6 = {};
    wp::float32 adj_7 = {};
    wp::vec_t<3,wp::float32> adj_8 = {};
    wp::float32 adj_9 = {};
    wp::float32 adj_10 = {};
    wp::float32 adj_11 = {};
    wp::float32 adj_12 = {};
    wp::float32 adj_13 = {};
    wp::float32 adj_14 = {};
    wp::float32 adj_15 = {};
    wp::float32 adj_16 = {};
    wp::float32 adj_17 = {};
    wp::float32 adj_18 = {};
    bool adj_19 = {};
    wp::float32 adj_20 = {};
    wp::float32 adj_21 = {};
    wp::float32 adj_22 = {};
    wp::float32 adj_23 = {};
    wp::float32 adj_24 = {};
    wp::float32 adj_25 = {};
    //---------
    // forward
    // def compute_angular_correction(                                                        <L 1385>
    // denom = 0.0                                                                            <L 1399>
    // q1 = wp.transform_get_rotation(tf_a)                                                   <L 1401>
    var_1 = wp::transform_get_rotation(var_tf_a);
    // q2 = wp.transform_get_rotation(tf_b)                                                   <L 1402>
    var_2 = wp::transform_get_rotation(var_tf_b);
    // rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                      <L 1405>
    var_3 = wp::quat_rotate_inv(var_1, var_angular_a);
    // rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                      <L 1406>
    var_4 = wp::quat_rotate_inv(var_2, var_angular_b);
    // denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                                <L 1408>
    var_5 = wp::mul(var_I_inv_a, var_3);
    var_6 = wp::dot(var_3, var_5);
    var_7 = wp::add(var_0, var_6);
    // denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                                <L 1409>
    var_8 = wp::mul(var_I_inv_b, var_4);
    var_9 = wp::dot(var_4, var_8);
    var_10 = wp::add(var_7, var_9);
    // alpha = compliance                                                                     <L 1411>
    var_11 = wp::copy(var_compliance);
    // gamma = compliance * damping                                                           <L 1412>
    var_12 = wp::mul(var_compliance, var_damping);
    // deltaLambda = -(err + alpha * lambda_in + gamma * derr)                                <L 1414>
    var_13 = wp::mul(var_11, var_lambda_in);
    var_14 = wp::add(var_err, var_13);
    var_15 = wp::mul(var_12, var_derr);
    var_16 = wp::add(var_14, var_15);
    var_17 = wp::neg(var_16);
    // if denom + alpha > 0.0:                                                                <L 1415>
    var_18 = wp::add(var_10, var_11);
    var_19 = (var_18 > var_0);
    if (var_19) {
        // deltaLambda /= dt * (dt + gamma) * denom + alpha                                   <L 1416>
        var_20 = wp::add(var_dt, var_12);
        var_21 = wp::mul(var_dt, var_20);
        var_22 = wp::mul(var_21, var_10);
        var_23 = wp::add(var_22, var_11);
        var_24 = wp::div(var_17, var_23);
    }
    var_25 = wp::select(var_19, var_17, var_24);
    // return deltaLambda                                                                     <L 1418>
    goto label0;
    //---------
    // reverse
    label0:;
    adj_25 += adj_ret;
    // adj: return deltaLambda                                                                <L 1418>
    wp::adj_select(var_19, var_17, var_24, adj_19, adj_17, adj_24, adj_25);
    if (var_19) {
        wp::adj_div(var_17, var_23, var_24, adj_17, adj_23, adj_24);
        wp::adj_add(var_22, var_11, adj_22, adj_11, adj_23);
        wp::adj_mul(var_21, var_10, adj_21, adj_10, adj_22);
        wp::adj_mul(var_dt, var_20, adj_dt, adj_20, adj_21);
        wp::adj_add(var_dt, var_12, adj_dt, adj_12, adj_20);
        // adj: deltaLambda /= dt * (dt + gamma) * denom + alpha                              <L 1416>
    }
    wp::adj_add(var_10, var_11, adj_10, adj_11, adj_18);
    // adj: if denom + alpha > 0.0:                                                           <L 1415>
    wp::adj_neg(var_16, adj_16, adj_17);
    wp::adj_add(var_14, var_15, adj_14, adj_15, adj_16);
    wp::adj_mul(var_12, var_derr, adj_12, adj_derr, adj_15);
    wp::adj_add(var_err, var_13, adj_err, adj_13, adj_14);
    wp::adj_mul(var_11, var_lambda_in, adj_11, adj_lambda_in, adj_13);
    // adj: deltaLambda = -(err + alpha * lambda_in + gamma * derr)                           <L 1414>
    wp::adj_mul(var_compliance, var_damping, adj_compliance, adj_damping, adj_12);
    // adj: gamma = compliance * damping                                                      <L 1412>
    wp::adj_copy(var_compliance, adj_compliance, adj_11);
    // adj: alpha = compliance                                                                <L 1411>
    wp::adj_add(var_7, var_9, adj_7, adj_9, adj_10);
    wp::adj_dot(var_4, var_8, adj_4, adj_8, adj_9);
    wp::adj_mul(var_I_inv_b, var_4, adj_I_inv_b, adj_4, adj_8);
    // adj: denom += wp.dot(rot_angular_b, I_inv_b * rot_angular_b)                           <L 1409>
    wp::adj_add(var_0, var_6, adj_0, adj_6, adj_7);
    wp::adj_dot(var_3, var_5, adj_3, adj_5, adj_6);
    wp::adj_mul(var_I_inv_a, var_3, adj_I_inv_a, adj_3, adj_5);
    // adj: denom += wp.dot(rot_angular_a, I_inv_a * rot_angular_a)                           <L 1408>
    wp::adj_quat_rotate_inv(var_2, var_angular_b, adj_2, adj_angular_b, adj_4);
    // adj: rot_angular_b = wp.quat_rotate_inv(q2, angular_b)                                 <L 1406>
    wp::adj_quat_rotate_inv(var_1, var_angular_a, adj_1, adj_angular_a, adj_3);
    // adj: rot_angular_a = wp.quat_rotate_inv(q1, angular_a)                                 <L 1405>
    wp::adj_transform_get_rotation(var_tf_b, adj_tf_b, adj_2);
    // adj: q2 = wp.transform_get_rotation(tf_b)                                              <L 1402>
    wp::adj_transform_get_rotation(var_tf_a, adj_tf_a, adj_1);
    // adj: q1 = wp.transform_get_rotation(tf_a)                                              <L 1401>
    // adj: denom = 0.0                                                                       <L 1399>
    // adj: def compute_angular_correction(                                                   <L 1385>
    return;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:7
static CUDA_CALLABLE wp::vec_t<3,wp::float32> velocity_at_point(
    wp::vec_t<6,wp::float32> var_qd,
    wp::vec_t<3,wp::float32> var_r)
{
    //---------
    // primal vars
    const wp::str var_0 = "\n    Returns the velocity of a point relative to the frame with the given spatial velocity.\n    ";
    wp::vec_t<3,wp::float32> var_1;
    wp::vec_t<3,wp::float32> var_2;
    wp::vec_t<3,wp::float32> var_3;
    wp::vec_t<3,wp::float32> var_4;
    //---------
    // forward
    // def velocity_at_point(qd: wp.spatial_vector, r: wp.vec3):                              <L 8>
    // """                                                                                    <L 9>
    // return wp.cross(wp.spatial_top(qd), r) + wp.spatial_bottom(qd)                         <L 12>
    var_1 = wp::spatial_top(var_qd);
    var_2 = wp::cross(var_1, var_r);
    var_3 = wp::spatial_bottom(var_qd);
    var_4 = wp::add(var_2, var_3);
    return var_4;
}


// G:\My Drive\sourceCodes\fs5ydw-main\utils\utils.py:7
static CUDA_CALLABLE void adj_velocity_at_point(
    wp::vec_t<6,wp::float32> var_qd,
    wp::vec_t<3,wp::float32> var_r,
    wp::vec_t<6,wp::float32> & adj_qd,
    wp::vec_t<3,wp::float32> & adj_r,
    wp::vec_t<3,wp::float32> & adj_ret)
{
    //---------
    // primal vars
    const wp::str var_0 = "\n    Returns the velocity of a point relative to the frame with the given spatial velocity.\n    ";
    wp::vec_t<3,wp::float32> var_1;
    wp::vec_t<3,wp::float32> var_2;
    wp::vec_t<3,wp::float32> var_3;
    wp::vec_t<3,wp::float32> var_4;
    //---------
    // dual vars
    wp::str adj_0 = {};
    wp::vec_t<3,wp::float32> adj_1 = {};
    wp::vec_t<3,wp::float32> adj_2 = {};
    wp::vec_t<3,wp::float32> adj_3 = {};
    wp::vec_t<3,wp::float32> adj_4 = {};
    //---------
    // forward
    // def velocity_at_point(qd: wp.spatial_vector, r: wp.vec3):                              <L 8>
    // """                                                                                    <L 9>
    // return wp.cross(wp.spatial_top(qd), r) + wp.spatial_bottom(qd)                         <L 12>
    var_1 = wp::spatial_top(var_qd);
    var_2 = wp::cross(var_1, var_r);
    var_3 = wp::spatial_bottom(var_qd);
    var_4 = wp::add(var_2, var_3);
    goto label0;
    //---------
    // reverse
    label0:;
    adj_4 += adj_ret;
    wp::adj_add(var_2, var_3, adj_2, adj_3, adj_4);
    wp::adj_spatial_bottom(var_qd, adj_qd, adj_3);
    wp::adj_cross(var_1, var_r, adj_1, adj_r, adj_2);
    wp::adj_spatial_top(var_qd, adj_qd, adj_1);
    // adj: return wp.cross(wp.spatial_top(qd), r) + wp.spatial_bottom(qd)                    <L 12>
    // adj: """                                                                               <L 9>
    // adj: def velocity_at_point(qd: wp.spatial_vector, r: wp.vec3):                         <L 8>
    return;
}



extern "C" __global__ void solve_particle_ground_contacts_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v,
    wp::array_t<wp::float32> var_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::float32 var_ke,
    wp::float32 var_kd,
    wp::float32 var_kf,
    wp::float32 var_mu,
    wp::array_t<wp::float32> var_ground,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::float32* var_7;
        wp::float32 var_8;
        wp::float32 var_9;
        const wp::float32 var_10 = 0.0;
        bool var_11;
        wp::vec_t<3,wp::float32>* var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32>* var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::float32* var_18;
        const wp::int32 var_19 = 1;
        wp::float32* var_20;
        const wp::int32 var_21 = 2;
        wp::float32* var_22;
        wp::float32 var_23;
        wp::float32 var_24;
        wp::float32 var_25;
        wp::vec_t<3,wp::float32> var_26;
        wp::float32 var_27;
        const wp::int32 var_28 = 3;
        wp::float32* var_29;
        wp::float32 var_30;
        wp::float32 var_31;
        wp::float32* var_32;
        wp::float32 var_33;
        wp::float32 var_34;
        wp::float32 var_35;
        bool var_36;
        wp::float32 var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::float32 var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::float32 var_42;
        wp::float32 var_43;
        wp::float32 var_44;
        wp::float32 var_45;
        wp::float32 var_46;
        wp::vec_t<3,wp::float32> var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        //---------
        // forward
        // def solve_particle_ground_contacts(                                                    <L 22>
        // tid = wp.tid()                                                                         <L 37>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 38>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 39>
            return;
        }
        // wi = invmass[tid]                                                                      <L 41>
        var_7 = wp::address(var_invmass, var_0);
        var_8 = wp::load(var_7);
        var_9 = wp::copy(var_8);
        // if wi == 0.0:                                                                          <L 42>
        var_11 = (var_9 == var_10);
        if (var_11) {
            // return                                                                             <L 43>
            return;
        }
        // x = particle_x[tid]                                                                    <L 45>
        var_12 = wp::address(var_particle_x, var_0);
        var_13 = wp::load(var_12);
        var_14 = wp::copy(var_13);
        // v = particle_v[tid]                                                                    <L 46>
        var_15 = wp::address(var_particle_v, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::copy(var_16);
        // n = wp.vec3(ground[0], ground[1], ground[2])                                           <L 48>
        var_18 = wp::address(var_ground, var_5);
        var_20 = wp::address(var_ground, var_19);
        var_22 = wp::address(var_ground, var_21);
        var_23 = wp::load(var_18);
        var_24 = wp::load(var_20);
        var_25 = wp::load(var_22);
        var_26 = wp::vec_t<3,wp::float32>(var_23, var_24, var_25);
        // c = wp.min(wp.dot(n, x) + ground[3] - particle_radius[tid], 0.0)                       <L 49>
        var_27 = wp::dot(var_26, var_14);
        var_29 = wp::address(var_ground, var_28);
        var_30 = wp::load(var_29);
        var_31 = wp::add(var_27, var_30);
        var_32 = wp::address(var_particle_radius, var_0);
        var_33 = wp::load(var_32);
        var_34 = wp::sub(var_31, var_33);
        var_35 = wp::min(var_34, var_10);
        // if c > 0.0:                                                                            <L 51>
        var_36 = (var_35 > var_10);
        if (var_36) {
            // return                                                                             <L 52>
            return;
        }
        // lambda_n = c                                                                           <L 55>
        var_37 = wp::copy(var_35);
        // delta_n = n * lambda_n                                                                 <L 56>
        var_38 = wp::mul(var_26, var_37);
        // vn = wp.dot(n, v)                                                                      <L 59>
        var_39 = wp::dot(var_26, var_17);
        // vt = v - n * vn                                                                        <L 60>
        var_40 = wp::mul(var_26, var_39);
        var_41 = wp::sub(var_17, var_40);
        // lambda_f = wp.max(mu * lambda_n, 0.0 - wp.length(vt) * dt)                             <L 62>
        var_42 = wp::mul(var_mu, var_37);
        var_43 = wp::length(var_41);
        var_44 = wp::mul(var_43, var_dt);
        var_45 = wp::sub(var_10, var_44);
        var_46 = wp::max(var_42, var_45);
        // delta_f = wp.normalize(vt) * lambda_f                                                  <L 63>
        var_47 = wp::normalize(var_41);
        var_48 = wp::mul(var_47, var_46);
        // wp.atomic_add(delta, tid, (delta_f - delta_n) / wi * relaxation)                       <L 65>
        var_49 = wp::sub(var_48, var_38);
        var_50 = wp::div(var_49, var_9);
        var_51 = wp::mul(var_50, var_relaxation);
        var_52 = wp::atomic_add(var_delta, var_0, var_51);
    }
}

extern "C" __global__ void solve_particle_ground_contacts_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v,
    wp::array_t<wp::float32> var_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::float32 var_ke,
    wp::float32 var_kd,
    wp::float32 var_kf,
    wp::float32 var_mu,
    wp::array_t<wp::float32> var_ground,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_v,
    wp::array_t<wp::float32> adj_invmass,
    wp::array_t<wp::float32> adj_particle_radius,
    wp::array_t<wp::uint32> adj_particle_flags,
    wp::float32 adj_ke,
    wp::float32 adj_kd,
    wp::float32 adj_kf,
    wp::float32 adj_mu,
    wp::array_t<wp::float32> adj_ground,
    wp::float32 adj_dt,
    wp::float32 adj_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::float32* var_7;
        wp::float32 var_8;
        wp::float32 var_9;
        const wp::float32 var_10 = 0.0;
        bool var_11;
        wp::vec_t<3,wp::float32>* var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32>* var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::float32* var_18;
        const wp::int32 var_19 = 1;
        wp::float32* var_20;
        const wp::int32 var_21 = 2;
        wp::float32* var_22;
        wp::float32 var_23;
        wp::float32 var_24;
        wp::float32 var_25;
        wp::vec_t<3,wp::float32> var_26;
        wp::float32 var_27;
        const wp::int32 var_28 = 3;
        wp::float32* var_29;
        wp::float32 var_30;
        wp::float32 var_31;
        wp::float32* var_32;
        wp::float32 var_33;
        wp::float32 var_34;
        wp::float32 var_35;
        bool var_36;
        wp::float32 var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::float32 var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::float32 var_42;
        wp::float32 var_43;
        wp::float32 var_44;
        wp::float32 var_45;
        wp::float32 var_46;
        wp::vec_t<3,wp::float32> var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::uint32 adj_1 = {};
        wp::uint32 adj_2 = {};
        wp::uint32 adj_3 = {};
        wp::uint32 adj_4 = {};
        wp::int32 adj_5 = {};
        bool adj_6 = {};
        wp::float32 adj_7 = {};
        wp::float32 adj_8 = {};
        wp::float32 adj_9 = {};
        wp::float32 adj_10 = {};
        bool adj_11 = {};
        wp::vec_t<3,wp::float32> adj_12 = {};
        wp::vec_t<3,wp::float32> adj_13 = {};
        wp::vec_t<3,wp::float32> adj_14 = {};
        wp::vec_t<3,wp::float32> adj_15 = {};
        wp::vec_t<3,wp::float32> adj_16 = {};
        wp::vec_t<3,wp::float32> adj_17 = {};
        wp::float32 adj_18 = {};
        wp::int32 adj_19 = {};
        wp::float32 adj_20 = {};
        wp::int32 adj_21 = {};
        wp::float32 adj_22 = {};
        wp::float32 adj_23 = {};
        wp::float32 adj_24 = {};
        wp::float32 adj_25 = {};
        wp::vec_t<3,wp::float32> adj_26 = {};
        wp::float32 adj_27 = {};
        wp::int32 adj_28 = {};
        wp::float32 adj_29 = {};
        wp::float32 adj_30 = {};
        wp::float32 adj_31 = {};
        wp::float32 adj_32 = {};
        wp::float32 adj_33 = {};
        wp::float32 adj_34 = {};
        wp::float32 adj_35 = {};
        bool adj_36 = {};
        wp::float32 adj_37 = {};
        wp::vec_t<3,wp::float32> adj_38 = {};
        wp::float32 adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::vec_t<3,wp::float32> adj_41 = {};
        wp::float32 adj_42 = {};
        wp::float32 adj_43 = {};
        wp::float32 adj_44 = {};
        wp::float32 adj_45 = {};
        wp::float32 adj_46 = {};
        wp::vec_t<3,wp::float32> adj_47 = {};
        wp::vec_t<3,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        wp::vec_t<3,wp::float32> adj_51 = {};
        wp::vec_t<3,wp::float32> adj_52 = {};
        //---------
        // forward
        // def solve_particle_ground_contacts(                                                    <L 22>
        // tid = wp.tid()                                                                         <L 37>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 38>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 39>
            goto label0;
        }
        // wi = invmass[tid]                                                                      <L 41>
        var_7 = wp::address(var_invmass, var_0);
        var_8 = wp::load(var_7);
        var_9 = wp::copy(var_8);
        // if wi == 0.0:                                                                          <L 42>
        var_11 = (var_9 == var_10);
        if (var_11) {
            // return                                                                             <L 43>
            goto label1;
        }
        // x = particle_x[tid]                                                                    <L 45>
        var_12 = wp::address(var_particle_x, var_0);
        var_13 = wp::load(var_12);
        var_14 = wp::copy(var_13);
        // v = particle_v[tid]                                                                    <L 46>
        var_15 = wp::address(var_particle_v, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::copy(var_16);
        // n = wp.vec3(ground[0], ground[1], ground[2])                                           <L 48>
        var_18 = wp::address(var_ground, var_5);
        var_20 = wp::address(var_ground, var_19);
        var_22 = wp::address(var_ground, var_21);
        var_23 = wp::load(var_18);
        var_24 = wp::load(var_20);
        var_25 = wp::load(var_22);
        var_26 = wp::vec_t<3,wp::float32>(var_23, var_24, var_25);
        // c = wp.min(wp.dot(n, x) + ground[3] - particle_radius[tid], 0.0)                       <L 49>
        var_27 = wp::dot(var_26, var_14);
        var_29 = wp::address(var_ground, var_28);
        var_30 = wp::load(var_29);
        var_31 = wp::add(var_27, var_30);
        var_32 = wp::address(var_particle_radius, var_0);
        var_33 = wp::load(var_32);
        var_34 = wp::sub(var_31, var_33);
        var_35 = wp::min(var_34, var_10);
        // if c > 0.0:                                                                            <L 51>
        var_36 = (var_35 > var_10);
        if (var_36) {
            // return                                                                             <L 52>
            goto label2;
        }
        // lambda_n = c                                                                           <L 55>
        var_37 = wp::copy(var_35);
        // delta_n = n * lambda_n                                                                 <L 56>
        var_38 = wp::mul(var_26, var_37);
        // vn = wp.dot(n, v)                                                                      <L 59>
        var_39 = wp::dot(var_26, var_17);
        // vt = v - n * vn                                                                        <L 60>
        var_40 = wp::mul(var_26, var_39);
        var_41 = wp::sub(var_17, var_40);
        // lambda_f = wp.max(mu * lambda_n, 0.0 - wp.length(vt) * dt)                             <L 62>
        var_42 = wp::mul(var_mu, var_37);
        var_43 = wp::length(var_41);
        var_44 = wp::mul(var_43, var_dt);
        var_45 = wp::sub(var_10, var_44);
        var_46 = wp::max(var_42, var_45);
        // delta_f = wp.normalize(vt) * lambda_f                                                  <L 63>
        var_47 = wp::normalize(var_41);
        var_48 = wp::mul(var_47, var_46);
        // wp.atomic_add(delta, tid, (delta_f - delta_n) / wi * relaxation)                       <L 65>
        var_49 = wp::sub(var_48, var_38);
        var_50 = wp::div(var_49, var_9);
        var_51 = wp::mul(var_50, var_relaxation);
        // var_52 = wp::atomic_add(var_delta, var_0, var_51);
        //---------
        // reverse
        wp::adj_atomic_add(var_delta, var_0, var_51, adj_delta, adj_0, adj_51, adj_52);
        wp::adj_mul(var_50, var_relaxation, adj_50, adj_relaxation, adj_51);
        wp::adj_div(var_49, var_9, adj_49, adj_9, adj_50);
        wp::adj_sub(var_48, var_38, adj_48, adj_38, adj_49);
        // adj: wp.atomic_add(delta, tid, (delta_f - delta_n) / wi * relaxation)                  <L 65>
        wp::adj_mul(var_47, var_46, adj_47, adj_46, adj_48);
        wp::adj_normalize(var_41, var_47, adj_41, adj_47);
        // adj: delta_f = wp.normalize(vt) * lambda_f                                             <L 63>
        wp::adj_max(var_42, var_45, adj_42, adj_45, adj_46);
        wp::adj_sub(var_10, var_44, adj_10, adj_44, adj_45);
        wp::adj_mul(var_43, var_dt, adj_43, adj_dt, adj_44);
        wp::adj_length(var_41, var_43, adj_41, adj_43);
        wp::adj_mul(var_mu, var_37, adj_mu, adj_37, adj_42);
        // adj: lambda_f = wp.max(mu * lambda_n, 0.0 - wp.length(vt) * dt)                        <L 62>
        wp::adj_sub(var_17, var_40, adj_17, adj_40, adj_41);
        wp::adj_mul(var_26, var_39, adj_26, adj_39, adj_40);
        // adj: vt = v - n * vn                                                                   <L 60>
        wp::adj_dot(var_26, var_17, adj_26, adj_17, adj_39);
        // adj: vn = wp.dot(n, v)                                                                 <L 59>
        wp::adj_mul(var_26, var_37, adj_26, adj_37, adj_38);
        // adj: delta_n = n * lambda_n                                                            <L 56>
        wp::adj_copy(var_35, adj_35, adj_37);
        // adj: lambda_n = c                                                                      <L 55>
        if (var_36) {
            label2:;
            // adj: return                                                                        <L 52>
        }
        // adj: if c > 0.0:                                                                       <L 51>
        wp::adj_min(var_34, var_10, adj_34, adj_10, adj_35);
        wp::adj_sub(var_31, var_33, adj_31, adj_32, adj_34);
        wp::adj_load(var_32, adj_32, adj_33);
        wp::adj_address(var_particle_radius, var_0, adj_particle_radius, adj_0, adj_32);
        wp::adj_add(var_27, var_30, adj_27, adj_29, adj_31);
        wp::adj_load(var_29, adj_29, adj_30);
        wp::adj_address(var_ground, var_28, adj_ground, adj_28, adj_29);
        wp::adj_dot(var_26, var_14, adj_26, adj_14, adj_27);
        // adj: c = wp.min(wp.dot(n, x) + ground[3] - particle_radius[tid], 0.0)                  <L 49>
        wp::adj_vec_t(var_23, var_24, var_25, adj_18, adj_20, adj_22, adj_26);
        wp::adj_load(var_22, adj_22, adj_25);
        wp::adj_load(var_20, adj_20, adj_24);
        wp::adj_load(var_18, adj_18, adj_23);
        wp::adj_address(var_ground, var_21, adj_ground, adj_21, adj_22);
        wp::adj_address(var_ground, var_19, adj_ground, adj_19, adj_20);
        wp::adj_address(var_ground, var_5, adj_ground, adj_5, adj_18);
        // adj: n = wp.vec3(ground[0], ground[1], ground[2])                                      <L 48>
        wp::adj_copy(var_16, adj_15, adj_17);
        wp::adj_load(var_15, adj_15, adj_16);
        wp::adj_address(var_particle_v, var_0, adj_particle_v, adj_0, adj_15);
        // adj: v = particle_v[tid]                                                               <L 46>
        wp::adj_copy(var_13, adj_12, adj_14);
        wp::adj_load(var_12, adj_12, adj_13);
        wp::adj_address(var_particle_x, var_0, adj_particle_x, adj_0, adj_12);
        // adj: x = particle_x[tid]                                                               <L 45>
        if (var_11) {
            label1:;
            // adj: return                                                                        <L 43>
        }
        // adj: if wi == 0.0:                                                                     <L 42>
        wp::adj_copy(var_8, adj_7, adj_9);
        wp::adj_load(var_7, adj_7, adj_8);
        wp::adj_address(var_invmass, var_0, adj_invmass, adj_0, adj_7);
        // adj: wi = invmass[tid]                                                                 <L 41>
        if (var_6) {
            label0:;
            // adj: return                                                                        <L 39>
        }
        wp::adj_bit_and(var_3, var_2, adj_1, adj_2, adj_4);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_particle_flags, var_0, adj_particle_flags, adj_0, adj_1);
        // adj: if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                             <L 38>
        // adj: tid = wp.tid()                                                                    <L 37>
        // adj: def solve_particle_ground_contacts(                                               <L 22>
        continue;
    }
}



extern "C" __global__ void apply_soft_restitution_ground_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x_new,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v_new,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x_old,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v_old,
    wp::array_t<wp::float32> var_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::float32 var_restitution,
    wp::array_t<wp::float32> var_ground,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::float32* var_7;
        wp::float32 var_8;
        wp::float32 var_9;
        const wp::float32 var_10 = 0.0;
        bool var_11;
        wp::vec_t<3,wp::float32>* var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32>* var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::vec_t<3,wp::float32>* var_18;
        wp::vec_t<3,wp::float32> var_19;
        wp::vec_t<3,wp::float32> var_20;
        wp::float32* var_21;
        const wp::int32 var_22 = 1;
        wp::float32* var_23;
        const wp::int32 var_24 = 2;
        wp::float32* var_25;
        wp::float32 var_26;
        wp::float32 var_27;
        wp::float32 var_28;
        wp::vec_t<3,wp::float32> var_29;
        wp::float32 var_30;
        const wp::int32 var_31 = 3;
        wp::float32* var_32;
        wp::float32 var_33;
        wp::float32 var_34;
        wp::float32* var_35;
        wp::float32 var_36;
        wp::float32 var_37;
        bool var_38;
        wp::float32 var_39;
        wp::float32 var_40;
        wp::float32 var_41;
        wp::float32 var_42;
        wp::float32 var_43;
        wp::float32 var_44;
        wp::float32 var_45;
        wp::float32 var_46;
        wp::vec_t<3,wp::float32> var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        //---------
        // forward
        // def apply_soft_restitution_ground(                                                     <L 69>
        // tid = wp.tid()                                                                         <L 83>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 84>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 85>
            return;
        }
        // wi = invmass[tid]                                                                      <L 87>
        var_7 = wp::address(var_invmass, var_0);
        var_8 = wp::load(var_7);
        var_9 = wp::copy(var_8);
        // if wi == 0.0:                                                                          <L 88>
        var_11 = (var_9 == var_10);
        if (var_11) {
            // return                                                                             <L 89>
            return;
        }
        // v_new = particle_v_new[tid]                                                            <L 92>
        var_12 = wp::address(var_particle_v_new, var_0);
        var_13 = wp::load(var_12);
        var_14 = wp::copy(var_13);
        // x_old = particle_x_old[tid]                                                            <L 93>
        var_15 = wp::address(var_particle_x_old, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::copy(var_16);
        // v_old = particle_v_old[tid]                                                            <L 94>
        var_18 = wp::address(var_particle_v_old, var_0);
        var_19 = wp::load(var_18);
        var_20 = wp::copy(var_19);
        // n = wp.vec3(ground[0], ground[1], ground[2])                                           <L 96>
        var_21 = wp::address(var_ground, var_5);
        var_23 = wp::address(var_ground, var_22);
        var_25 = wp::address(var_ground, var_24);
        var_26 = wp::load(var_21);
        var_27 = wp::load(var_23);
        var_28 = wp::load(var_25);
        var_29 = wp::vec_t<3,wp::float32>(var_26, var_27, var_28);
        // c = wp.dot(n, x_old) + ground[3] - particle_radius[tid]                                <L 97>
        var_30 = wp::dot(var_29, var_17);
        var_32 = wp::address(var_ground, var_31);
        var_33 = wp::load(var_32);
        var_34 = wp::add(var_30, var_33);
        var_35 = wp::address(var_particle_radius, var_0);
        var_36 = wp::load(var_35);
        var_37 = wp::sub(var_34, var_36);
        // if c > 0.0:                                                                            <L 99>
        var_38 = (var_37 > var_10);
        if (var_38) {
            // return                                                                             <L 100>
            return;
        }
        // rel_vel_old = wp.dot(n, v_old)                                                         <L 102>
        var_39 = wp::dot(var_29, var_20);
        // rel_vel_new = wp.dot(n, v_new)                                                         <L 103>
        var_40 = wp::dot(var_29, var_14);
        // dv = n * wp.max(-rel_vel_new + wp.max(-restitution * rel_vel_old, 0.0), 0.0)           <L 104>
        var_41 = wp::neg(var_40);
        var_42 = wp::neg(var_restitution);
        var_43 = wp::mul(var_42, var_39);
        var_44 = wp::max(var_43, var_10);
        var_45 = wp::add(var_41, var_44);
        var_46 = wp::max(var_45, var_10);
        var_47 = wp::mul(var_29, var_46);
        // wp.atomic_add(particle_v_out, tid, dv / wi * relaxation)                               <L 106>
        var_48 = wp::div(var_47, var_9);
        var_49 = wp::mul(var_48, var_relaxation);
        var_50 = wp::atomic_add(var_particle_v_out, var_0, var_49);
    }
}

extern "C" __global__ void apply_soft_restitution_ground_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x_new,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v_new,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x_old,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v_old,
    wp::array_t<wp::float32> var_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::float32 var_restitution,
    wp::array_t<wp::float32> var_ground,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v_out,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_x_new,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_v_new,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_x_old,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_v_old,
    wp::array_t<wp::float32> adj_invmass,
    wp::array_t<wp::float32> adj_particle_radius,
    wp::array_t<wp::uint32> adj_particle_flags,
    wp::float32 adj_restitution,
    wp::array_t<wp::float32> adj_ground,
    wp::float32 adj_dt,
    wp::float32 adj_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_v_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::float32* var_7;
        wp::float32 var_8;
        wp::float32 var_9;
        const wp::float32 var_10 = 0.0;
        bool var_11;
        wp::vec_t<3,wp::float32>* var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32>* var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::vec_t<3,wp::float32>* var_18;
        wp::vec_t<3,wp::float32> var_19;
        wp::vec_t<3,wp::float32> var_20;
        wp::float32* var_21;
        const wp::int32 var_22 = 1;
        wp::float32* var_23;
        const wp::int32 var_24 = 2;
        wp::float32* var_25;
        wp::float32 var_26;
        wp::float32 var_27;
        wp::float32 var_28;
        wp::vec_t<3,wp::float32> var_29;
        wp::float32 var_30;
        const wp::int32 var_31 = 3;
        wp::float32* var_32;
        wp::float32 var_33;
        wp::float32 var_34;
        wp::float32* var_35;
        wp::float32 var_36;
        wp::float32 var_37;
        bool var_38;
        wp::float32 var_39;
        wp::float32 var_40;
        wp::float32 var_41;
        wp::float32 var_42;
        wp::float32 var_43;
        wp::float32 var_44;
        wp::float32 var_45;
        wp::float32 var_46;
        wp::vec_t<3,wp::float32> var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::uint32 adj_1 = {};
        wp::uint32 adj_2 = {};
        wp::uint32 adj_3 = {};
        wp::uint32 adj_4 = {};
        wp::int32 adj_5 = {};
        bool adj_6 = {};
        wp::float32 adj_7 = {};
        wp::float32 adj_8 = {};
        wp::float32 adj_9 = {};
        wp::float32 adj_10 = {};
        bool adj_11 = {};
        wp::vec_t<3,wp::float32> adj_12 = {};
        wp::vec_t<3,wp::float32> adj_13 = {};
        wp::vec_t<3,wp::float32> adj_14 = {};
        wp::vec_t<3,wp::float32> adj_15 = {};
        wp::vec_t<3,wp::float32> adj_16 = {};
        wp::vec_t<3,wp::float32> adj_17 = {};
        wp::vec_t<3,wp::float32> adj_18 = {};
        wp::vec_t<3,wp::float32> adj_19 = {};
        wp::vec_t<3,wp::float32> adj_20 = {};
        wp::float32 adj_21 = {};
        wp::int32 adj_22 = {};
        wp::float32 adj_23 = {};
        wp::int32 adj_24 = {};
        wp::float32 adj_25 = {};
        wp::float32 adj_26 = {};
        wp::float32 adj_27 = {};
        wp::float32 adj_28 = {};
        wp::vec_t<3,wp::float32> adj_29 = {};
        wp::float32 adj_30 = {};
        wp::int32 adj_31 = {};
        wp::float32 adj_32 = {};
        wp::float32 adj_33 = {};
        wp::float32 adj_34 = {};
        wp::float32 adj_35 = {};
        wp::float32 adj_36 = {};
        wp::float32 adj_37 = {};
        bool adj_38 = {};
        wp::float32 adj_39 = {};
        wp::float32 adj_40 = {};
        wp::float32 adj_41 = {};
        wp::float32 adj_42 = {};
        wp::float32 adj_43 = {};
        wp::float32 adj_44 = {};
        wp::float32 adj_45 = {};
        wp::float32 adj_46 = {};
        wp::vec_t<3,wp::float32> adj_47 = {};
        wp::vec_t<3,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        //---------
        // forward
        // def apply_soft_restitution_ground(                                                     <L 69>
        // tid = wp.tid()                                                                         <L 83>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 84>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 85>
            goto label0;
        }
        // wi = invmass[tid]                                                                      <L 87>
        var_7 = wp::address(var_invmass, var_0);
        var_8 = wp::load(var_7);
        var_9 = wp::copy(var_8);
        // if wi == 0.0:                                                                          <L 88>
        var_11 = (var_9 == var_10);
        if (var_11) {
            // return                                                                             <L 89>
            goto label1;
        }
        // v_new = particle_v_new[tid]                                                            <L 92>
        var_12 = wp::address(var_particle_v_new, var_0);
        var_13 = wp::load(var_12);
        var_14 = wp::copy(var_13);
        // x_old = particle_x_old[tid]                                                            <L 93>
        var_15 = wp::address(var_particle_x_old, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::copy(var_16);
        // v_old = particle_v_old[tid]                                                            <L 94>
        var_18 = wp::address(var_particle_v_old, var_0);
        var_19 = wp::load(var_18);
        var_20 = wp::copy(var_19);
        // n = wp.vec3(ground[0], ground[1], ground[2])                                           <L 96>
        var_21 = wp::address(var_ground, var_5);
        var_23 = wp::address(var_ground, var_22);
        var_25 = wp::address(var_ground, var_24);
        var_26 = wp::load(var_21);
        var_27 = wp::load(var_23);
        var_28 = wp::load(var_25);
        var_29 = wp::vec_t<3,wp::float32>(var_26, var_27, var_28);
        // c = wp.dot(n, x_old) + ground[3] - particle_radius[tid]                                <L 97>
        var_30 = wp::dot(var_29, var_17);
        var_32 = wp::address(var_ground, var_31);
        var_33 = wp::load(var_32);
        var_34 = wp::add(var_30, var_33);
        var_35 = wp::address(var_particle_radius, var_0);
        var_36 = wp::load(var_35);
        var_37 = wp::sub(var_34, var_36);
        // if c > 0.0:                                                                            <L 99>
        var_38 = (var_37 > var_10);
        if (var_38) {
            // return                                                                             <L 100>
            goto label2;
        }
        // rel_vel_old = wp.dot(n, v_old)                                                         <L 102>
        var_39 = wp::dot(var_29, var_20);
        // rel_vel_new = wp.dot(n, v_new)                                                         <L 103>
        var_40 = wp::dot(var_29, var_14);
        // dv = n * wp.max(-rel_vel_new + wp.max(-restitution * rel_vel_old, 0.0), 0.0)           <L 104>
        var_41 = wp::neg(var_40);
        var_42 = wp::neg(var_restitution);
        var_43 = wp::mul(var_42, var_39);
        var_44 = wp::max(var_43, var_10);
        var_45 = wp::add(var_41, var_44);
        var_46 = wp::max(var_45, var_10);
        var_47 = wp::mul(var_29, var_46);
        // wp.atomic_add(particle_v_out, tid, dv / wi * relaxation)                               <L 106>
        var_48 = wp::div(var_47, var_9);
        var_49 = wp::mul(var_48, var_relaxation);
        // var_50 = wp::atomic_add(var_particle_v_out, var_0, var_49);
        //---------
        // reverse
        wp::adj_atomic_add(var_particle_v_out, var_0, var_49, adj_particle_v_out, adj_0, adj_49, adj_50);
        wp::adj_mul(var_48, var_relaxation, adj_48, adj_relaxation, adj_49);
        wp::adj_div(var_47, var_9, adj_47, adj_9, adj_48);
        // adj: wp.atomic_add(particle_v_out, tid, dv / wi * relaxation)                          <L 106>
        wp::adj_mul(var_29, var_46, adj_29, adj_46, adj_47);
        wp::adj_max(var_45, var_10, adj_45, adj_10, adj_46);
        wp::adj_add(var_41, var_44, adj_41, adj_44, adj_45);
        wp::adj_max(var_43, var_10, adj_43, adj_10, adj_44);
        wp::adj_mul(var_42, var_39, adj_42, adj_39, adj_43);
        wp::adj_neg(var_restitution, adj_restitution, adj_42);
        wp::adj_neg(var_40, adj_40, adj_41);
        // adj: dv = n * wp.max(-rel_vel_new + wp.max(-restitution * rel_vel_old, 0.0), 0.0)      <L 104>
        wp::adj_dot(var_29, var_14, adj_29, adj_14, adj_40);
        // adj: rel_vel_new = wp.dot(n, v_new)                                                    <L 103>
        wp::adj_dot(var_29, var_20, adj_29, adj_20, adj_39);
        // adj: rel_vel_old = wp.dot(n, v_old)                                                    <L 102>
        if (var_38) {
            label2:;
            // adj: return                                                                        <L 100>
        }
        // adj: if c > 0.0:                                                                       <L 99>
        wp::adj_sub(var_34, var_36, adj_34, adj_35, adj_37);
        wp::adj_load(var_35, adj_35, adj_36);
        wp::adj_address(var_particle_radius, var_0, adj_particle_radius, adj_0, adj_35);
        wp::adj_add(var_30, var_33, adj_30, adj_32, adj_34);
        wp::adj_load(var_32, adj_32, adj_33);
        wp::adj_address(var_ground, var_31, adj_ground, adj_31, adj_32);
        wp::adj_dot(var_29, var_17, adj_29, adj_17, adj_30);
        // adj: c = wp.dot(n, x_old) + ground[3] - particle_radius[tid]                           <L 97>
        wp::adj_vec_t(var_26, var_27, var_28, adj_21, adj_23, adj_25, adj_29);
        wp::adj_load(var_25, adj_25, adj_28);
        wp::adj_load(var_23, adj_23, adj_27);
        wp::adj_load(var_21, adj_21, adj_26);
        wp::adj_address(var_ground, var_24, adj_ground, adj_24, adj_25);
        wp::adj_address(var_ground, var_22, adj_ground, adj_22, adj_23);
        wp::adj_address(var_ground, var_5, adj_ground, adj_5, adj_21);
        // adj: n = wp.vec3(ground[0], ground[1], ground[2])                                      <L 96>
        wp::adj_copy(var_19, adj_18, adj_20);
        wp::adj_load(var_18, adj_18, adj_19);
        wp::adj_address(var_particle_v_old, var_0, adj_particle_v_old, adj_0, adj_18);
        // adj: v_old = particle_v_old[tid]                                                       <L 94>
        wp::adj_copy(var_16, adj_15, adj_17);
        wp::adj_load(var_15, adj_15, adj_16);
        wp::adj_address(var_particle_x_old, var_0, adj_particle_x_old, adj_0, adj_15);
        // adj: x_old = particle_x_old[tid]                                                       <L 93>
        wp::adj_copy(var_13, adj_12, adj_14);
        wp::adj_load(var_12, adj_12, adj_13);
        wp::adj_address(var_particle_v_new, var_0, adj_particle_v_new, adj_0, adj_12);
        // adj: v_new = particle_v_new[tid]                                                       <L 92>
        if (var_11) {
            label1:;
            // adj: return                                                                        <L 89>
        }
        // adj: if wi == 0.0:                                                                     <L 88>
        wp::adj_copy(var_8, adj_7, adj_9);
        wp::adj_load(var_7, adj_7, adj_8);
        wp::adj_address(var_invmass, var_0, adj_invmass, adj_0, adj_7);
        // adj: wi = invmass[tid]                                                                 <L 87>
        if (var_6) {
            label0:;
            // adj: return                                                                        <L 85>
        }
        wp::adj_bit_and(var_3, var_2, adj_1, adj_2, adj_4);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_particle_flags, var_0, adj_particle_flags, adj_0, adj_1);
        // adj: if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                             <L 84>
        // adj: tid = wp.tid()                                                                    <L 83>
        // adj: def apply_soft_restitution_ground(                                                <L 69>
        continue;
    }
}



extern "C" __global__ void solve_particle_shape_contacts_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v,
    wp::array_t<wp::float32> var_particle_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I_inv,
    wp::array_t<wp::int32> var_shape_body,
    ModelShapeMaterials var_shape_materials,
    wp::float32 var_particle_mu,
    wp::float32 var_particle_ka,
    wp::array_t<wp::int32> var_contact_count,
    wp::array_t<wp::int32> var_contact_particle,
    wp::array_t<wp::int32> var_contact_shape,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_body_pos,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_body_vel,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_normal,
    wp::int32 var_contact_max,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::int32* var_7;
        wp::int32 var_8;
        wp::int32 var_9;
        bool var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::int32* var_17;
        wp::int32 var_18;
        wp::int32 var_19;
        wp::vec_t<3,wp::float32>* var_20;
        wp::vec_t<3,wp::float32> var_21;
        wp::vec_t<3,wp::float32> var_22;
        wp::vec_t<3,wp::float32>* var_23;
        wp::vec_t<3,wp::float32> var_24;
        wp::vec_t<3,wp::float32> var_25;
        wp::transform_t<wp::float32> var_26;
        wp::vec_t<3,wp::float32> var_27;
        bool var_28;
        wp::transform_t<wp::float32>* var_29;
        wp::transform_t<wp::float32> var_30;
        wp::transform_t<wp::float32> var_31;
        wp::vec_t<3,wp::float32>* var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::transform_t<wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32>* var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::vec_t<3,wp::float32>* var_42;
        wp::vec_t<3,wp::float32> var_43;
        wp::vec_t<3,wp::float32> var_44;
        wp::vec_t<3,wp::float32> var_45;
        wp::float32 var_46;
        wp::float32* var_47;
        wp::float32 var_48;
        wp::float32 var_49;
        bool var_50;
        const wp::float32 var_51 = 0.5;
        wp::array_t<wp::float32>* var_52;
        wp::array_t<wp::float32> var_53;
        wp::float32* var_54;
        wp::float32 var_55;
        wp::float32 var_56;
        wp::float32 var_57;
        wp::vec_t<6,wp::float32> var_58;
        bool var_59;
        wp::vec_t<6,wp::float32>* var_60;
        wp::vec_t<6,wp::float32> var_61;
        wp::vec_t<6,wp::float32> var_62;
        wp::vec_t<6,wp::float32> var_63;
        wp::vec_t<3,wp::float32> var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::vec_t<3,wp::float32>* var_68;
        wp::vec_t<3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::float32 var_73;
        wp::vec_t<3,wp::float32> var_74;
        wp::float32 var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::vec_t<3,wp::float32> var_77;
        wp::float32* var_78;
        wp::float32 var_79;
        wp::float32 var_80;
        const wp::float32 var_81 = 0.0;
        bool var_82;
        wp::vec_t<3,wp::float32> var_83;
        wp::quat_t<wp::float32> var_84;
        wp::vec_t<3,wp::float32> var_85;
        wp::mat_t<3,3,wp::float32>* var_86;
        wp::mat_t<3,3,wp::float32> var_87;
        wp::mat_t<3,3,wp::float32> var_88;
        wp::float32* var_89;
        wp::vec_t<3,wp::float32> var_90;
        wp::float32 var_91;
        wp::float32 var_92;
        wp::float32 var_93;
        wp::float32 var_94;
        wp::float32 var_95;
        bool var_96;
        wp::float32 var_97;
        wp::float32 var_98;
        wp::float32 var_99;
        wp::float32 var_100;
        wp::float32 var_101;
        wp::vec_t<3,wp::float32> var_102;
        wp::vec_t<3,wp::float32> var_103;
        wp::vec_t<3,wp::float32> var_104;
        wp::vec_t<3,wp::float32> var_105;
        wp::vec_t<3,wp::float32> var_106;
        wp::vec_t<3,wp::float32> var_107;
        bool var_108;
        wp::vec_t<3,wp::float32> var_109;
        wp::vec_t<6,wp::float32> var_110;
        wp::vec_t<6,wp::float32> var_111;
        //---------
        // forward
        // def solve_particle_shape_contacts(                                                     <L 110>
        // tid = wp.tid()                                                                         <L 138>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 139>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 140>
            return;
        }
        // count = min(contact_max, contact_count[0])                                             <L 142>
        var_7 = wp::address(var_contact_count, var_5);
        var_8 = wp::load(var_7);
        var_9 = wp::min(var_contact_max, var_8);
        // if tid >= count:                                                                       <L 143>
        var_10 = (var_0 >= var_9);
        if (var_10) {
            // return                                                                             <L 144>
            return;
        }
        // shape_index = contact_shape[tid]                                                       <L 146>
        var_11 = wp::address(var_contact_shape, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // body_index = shape_body[shape_index]                                                   <L 147>
        var_14 = wp::address(var_shape_body, var_13);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // particle_index = contact_particle[tid]                                                 <L 148>
        var_17 = wp::address(var_contact_particle, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // px = particle_x[particle_index]                                                        <L 150>
        var_20 = wp::address(var_particle_x, var_19);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // pv = particle_v[particle_index]                                                        <L 151>
        var_23 = wp::address(var_particle_v, var_19);
        var_24 = wp::load(var_23);
        var_25 = wp::copy(var_24);
        // X_wb = wp.transform_identity()                                                         <L 153>
        var_26 = wp::transform_identity<wp::float32>();
        // X_com = wp.vec3()                                                                      <L 154>
        var_27 = wp::vec_t<3,wp::float32>();
        // if body_index >= 0:                                                                    <L 156>
        var_28 = (var_16 >= var_5);
        if (var_28) {
            // X_wb = body_q[body_index]                                                          <L 157>
            var_29 = wp::address(var_body_q, var_16);
            var_30 = wp::load(var_29);
            var_31 = wp::copy(var_30);
            // X_com = body_com[body_index]                                                       <L 158>
            var_32 = wp::address(var_body_com, var_16);
            var_33 = wp::load(var_32);
            var_34 = wp::copy(var_33);
        }
        var_35 = wp::select(var_28, var_26, var_31);
        var_36 = wp::select(var_28, var_27, var_34);
        // bx = wp.transform_point(X_wb, contact_body_pos[tid])                                   <L 161>
        var_37 = wp::address(var_contact_body_pos, var_0);
        var_38 = wp::load(var_37);
        var_39 = wp::transform_point(var_35, var_38);
        // r = bx - wp.transform_point(X_wb, X_com)                                               <L 162>
        var_40 = wp::transform_point(var_35, var_36);
        var_41 = wp::sub(var_39, var_40);
        // n = contact_normal[tid]                                                                <L 164>
        var_42 = wp::address(var_contact_normal, var_0);
        var_43 = wp::load(var_42);
        var_44 = wp::copy(var_43);
        // c = wp.dot(n, px - bx) - particle_radius[tid]                                          <L 165>
        var_45 = wp::sub(var_22, var_39);
        var_46 = wp::dot(var_44, var_45);
        var_47 = wp::address(var_particle_radius, var_0);
        var_48 = wp::load(var_47);
        var_49 = wp::sub(var_46, var_48);
        // if c > particle_ka:                                                                    <L 167>
        var_50 = (var_49 > var_particle_ka);
        if (var_50) {
            // return                                                                             <L 168>
            return;
        }
        // mu = 0.5 * (particle_mu + shape_materials.mu[shape_index])                             <L 171>
        var_52 = &(var_shape_materials.mu);
        var_53 = wp::load(var_52);
        var_54 = wp::address(var_53, var_13);
        var_55 = wp::load(var_54);
        var_56 = wp::add(var_particle_mu, var_55);
        var_57 = wp::mul(var_51, var_56);
        // body_v_s = wp.spatial_vector()                                                         <L 174>
        var_58 = wp::vec_t<6,wp::float32>();
        // if body_index >= 0:                                                                    <L 175>
        var_59 = (var_16 >= var_5);
        if (var_59) {
            // body_v_s = body_qd[body_index]                                                     <L 176>
            var_60 = wp::address(var_body_qd, var_16);
            var_61 = wp::load(var_60);
            var_62 = wp::copy(var_61);
        }
        var_63 = wp::select(var_59, var_58, var_62);
        // body_w = wp.spatial_top(body_v_s)                                                      <L 178>
        var_64 = wp::spatial_top(var_63);
        // body_v = wp.spatial_bottom(body_v_s)                                                   <L 179>
        var_65 = wp::spatial_bottom(var_63);
        // bv = body_v + wp.cross(body_w, r) + wp.transform_vector(X_wb, contact_body_vel[tid])       <L 182>
        var_66 = wp::cross(var_64, var_41);
        var_67 = wp::add(var_65, var_66);
        var_68 = wp::address(var_contact_body_vel, var_0);
        var_69 = wp::load(var_68);
        var_70 = wp::transform_vector(var_35, var_69);
        var_71 = wp::add(var_67, var_70);
        // v = pv - bv                                                                            <L 185>
        var_72 = wp::sub(var_25, var_71);
        // lambda_n = c                                                                           <L 188>
        var_73 = wp::copy(var_49);
        // delta_n = n * lambda_n                                                                 <L 189>
        var_74 = wp::mul(var_44, var_73);
        // vn = wp.dot(n, v)                                                                      <L 192>
        var_75 = wp::dot(var_44, var_72);
        // vt = v - n * vn                                                                        <L 193>
        var_76 = wp::mul(var_44, var_75);
        var_77 = wp::sub(var_72, var_76);
        // w1 = particle_invmass[particle_index]                                                  <L 196>
        var_78 = wp::address(var_particle_invmass, var_19);
        var_79 = wp::load(var_78);
        var_80 = wp::copy(var_79);
        // w2 = 0.0                                                                               <L 197>
        // if body_index >= 0:                                                                    <L 198>
        var_82 = (var_16 >= var_5);
        if (var_82) {
            // angular = wp.cross(r, n)                                                           <L 199>
            var_83 = wp::cross(var_41, var_44);
            // q = wp.transform_get_rotation(X_wb)                                                <L 200>
            var_84 = wp::transform_get_rotation(var_35);
            // rot_angular = wp.quat_rotate_inv(q, angular)                                       <L 201>
            var_85 = wp::quat_rotate_inv(var_84, var_83);
            // I_inv = body_I_inv[body_index]                                                     <L 202>
            var_86 = wp::address(var_body_I_inv, var_16);
            var_87 = wp::load(var_86);
            var_88 = wp::copy(var_87);
            // w2 = body_m_inv[body_index] + wp.dot(rot_angular, I_inv * rot_angular)             <L 203>
            var_89 = wp::address(var_body_m_inv, var_16);
            var_90 = wp::mul(var_88, var_85);
            var_91 = wp::dot(var_85, var_90);
            var_92 = wp::load(var_89);
            var_93 = wp::add(var_92, var_91);
        }
        var_94 = wp::select(var_82, var_81, var_93);
        // denom = w1 + w2                                                                        <L 204>
        var_95 = wp::add(var_80, var_94);
        // if denom == 0.0:                                                                       <L 205>
        var_96 = (var_95 == var_81);
        if (var_96) {
            // return                                                                             <L 206>
            return;
        }
        // lambda_f = wp.max(mu * lambda_n, -wp.length(vt) * dt)                                  <L 208>
        var_97 = wp::mul(var_57, var_73);
        var_98 = wp::length(var_77);
        var_99 = wp::neg(var_98);
        var_100 = wp::mul(var_99, var_dt);
        var_101 = wp::max(var_97, var_100);
        // delta_f = wp.normalize(vt) * lambda_f                                                  <L 209>
        var_102 = wp::normalize(var_77);
        var_103 = wp::mul(var_102, var_101);
        // delta_total = (delta_f - delta_n) / denom * relaxation                                 <L 210>
        var_104 = wp::sub(var_103, var_74);
        var_105 = wp::div(var_104, var_95);
        var_106 = wp::mul(var_105, var_relaxation);
        // wp.atomic_add(delta, particle_index, delta_total)                                      <L 212>
        var_107 = wp::atomic_add(var_delta, var_19, var_106);
        // if body_index >= 0:                                                                    <L 214>
        var_108 = (var_16 >= var_5);
        if (var_108) {
            // delta_t = wp.cross(r, delta_total)                                                 <L 215>
            var_109 = wp::cross(var_41, var_106);
            // wp.atomic_sub(body_delta, body_index, wp.spatial_vector(delta_t, delta_total))       <L 216>
            var_110 = wp::vec_t<6,wp::float32>(var_109, var_106);
            var_111 = wp::atomic_sub(var_body_delta, var_16, var_110);
        }
    }
}

extern "C" __global__ void solve_particle_shape_contacts_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v,
    wp::array_t<wp::float32> var_particle_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I_inv,
    wp::array_t<wp::int32> var_shape_body,
    ModelShapeMaterials var_shape_materials,
    wp::float32 var_particle_mu,
    wp::float32 var_particle_ka,
    wp::array_t<wp::int32> var_contact_count,
    wp::array_t<wp::int32> var_contact_particle,
    wp::array_t<wp::int32> var_contact_shape,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_body_pos,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_body_vel,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_normal,
    wp::int32 var_contact_max,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_delta,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_v,
    wp::array_t<wp::float32> adj_particle_invmass,
    wp::array_t<wp::float32> adj_particle_radius,
    wp::array_t<wp::uint32> adj_particle_flags,
    wp::array_t<wp::transform_t<wp::float32>> adj_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::array_t<wp::float32> adj_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_body_I_inv,
    wp::array_t<wp::int32> adj_shape_body,
    ModelShapeMaterials adj_shape_materials,
    wp::float32 adj_particle_mu,
    wp::float32 adj_particle_ka,
    wp::array_t<wp::int32> adj_contact_count,
    wp::array_t<wp::int32> adj_contact_particle,
    wp::array_t<wp::int32> adj_contact_shape,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_body_pos,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_body_vel,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_normal,
    wp::int32 adj_contact_max,
    wp::float32 adj_dt,
    wp::float32 adj_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_delta,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::int32* var_7;
        wp::int32 var_8;
        wp::int32 var_9;
        bool var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::int32* var_17;
        wp::int32 var_18;
        wp::int32 var_19;
        wp::vec_t<3,wp::float32>* var_20;
        wp::vec_t<3,wp::float32> var_21;
        wp::vec_t<3,wp::float32> var_22;
        wp::vec_t<3,wp::float32>* var_23;
        wp::vec_t<3,wp::float32> var_24;
        wp::vec_t<3,wp::float32> var_25;
        wp::transform_t<wp::float32> var_26;
        wp::vec_t<3,wp::float32> var_27;
        bool var_28;
        wp::transform_t<wp::float32>* var_29;
        wp::transform_t<wp::float32> var_30;
        wp::transform_t<wp::float32> var_31;
        wp::vec_t<3,wp::float32>* var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::transform_t<wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32>* var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::vec_t<3,wp::float32>* var_42;
        wp::vec_t<3,wp::float32> var_43;
        wp::vec_t<3,wp::float32> var_44;
        wp::vec_t<3,wp::float32> var_45;
        wp::float32 var_46;
        wp::float32* var_47;
        wp::float32 var_48;
        wp::float32 var_49;
        bool var_50;
        const wp::float32 var_51 = 0.5;
        wp::array_t<wp::float32>* var_52;
        wp::array_t<wp::float32> var_53;
        wp::float32* var_54;
        wp::float32 var_55;
        wp::float32 var_56;
        wp::float32 var_57;
        wp::vec_t<6,wp::float32> var_58;
        bool var_59;
        wp::vec_t<6,wp::float32>* var_60;
        wp::vec_t<6,wp::float32> var_61;
        wp::vec_t<6,wp::float32> var_62;
        wp::vec_t<6,wp::float32> var_63;
        wp::vec_t<3,wp::float32> var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::vec_t<3,wp::float32>* var_68;
        wp::vec_t<3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::float32 var_73;
        wp::vec_t<3,wp::float32> var_74;
        wp::float32 var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::vec_t<3,wp::float32> var_77;
        wp::float32* var_78;
        wp::float32 var_79;
        wp::float32 var_80;
        const wp::float32 var_81 = 0.0;
        bool var_82;
        wp::vec_t<3,wp::float32> var_83;
        wp::quat_t<wp::float32> var_84;
        wp::vec_t<3,wp::float32> var_85;
        wp::mat_t<3,3,wp::float32>* var_86;
        wp::mat_t<3,3,wp::float32> var_87;
        wp::mat_t<3,3,wp::float32> var_88;
        wp::float32* var_89;
        wp::vec_t<3,wp::float32> var_90;
        wp::float32 var_91;
        wp::float32 var_92;
        wp::float32 var_93;
        wp::float32 var_94;
        wp::float32 var_95;
        bool var_96;
        wp::float32 var_97;
        wp::float32 var_98;
        wp::float32 var_99;
        wp::float32 var_100;
        wp::float32 var_101;
        wp::vec_t<3,wp::float32> var_102;
        wp::vec_t<3,wp::float32> var_103;
        wp::vec_t<3,wp::float32> var_104;
        wp::vec_t<3,wp::float32> var_105;
        wp::vec_t<3,wp::float32> var_106;
        wp::vec_t<3,wp::float32> var_107;
        bool var_108;
        wp::vec_t<3,wp::float32> var_109;
        wp::vec_t<6,wp::float32> var_110;
        wp::vec_t<6,wp::float32> var_111;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::uint32 adj_1 = {};
        wp::uint32 adj_2 = {};
        wp::uint32 adj_3 = {};
        wp::uint32 adj_4 = {};
        wp::int32 adj_5 = {};
        bool adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        bool adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        wp::int32 adj_17 = {};
        wp::int32 adj_18 = {};
        wp::int32 adj_19 = {};
        wp::vec_t<3,wp::float32> adj_20 = {};
        wp::vec_t<3,wp::float32> adj_21 = {};
        wp::vec_t<3,wp::float32> adj_22 = {};
        wp::vec_t<3,wp::float32> adj_23 = {};
        wp::vec_t<3,wp::float32> adj_24 = {};
        wp::vec_t<3,wp::float32> adj_25 = {};
        wp::transform_t<wp::float32> adj_26 = {};
        wp::vec_t<3,wp::float32> adj_27 = {};
        bool adj_28 = {};
        wp::transform_t<wp::float32> adj_29 = {};
        wp::transform_t<wp::float32> adj_30 = {};
        wp::transform_t<wp::float32> adj_31 = {};
        wp::vec_t<3,wp::float32> adj_32 = {};
        wp::vec_t<3,wp::float32> adj_33 = {};
        wp::vec_t<3,wp::float32> adj_34 = {};
        wp::transform_t<wp::float32> adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::vec_t<3,wp::float32> adj_37 = {};
        wp::vec_t<3,wp::float32> adj_38 = {};
        wp::vec_t<3,wp::float32> adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::vec_t<3,wp::float32> adj_41 = {};
        wp::vec_t<3,wp::float32> adj_42 = {};
        wp::vec_t<3,wp::float32> adj_43 = {};
        wp::vec_t<3,wp::float32> adj_44 = {};
        wp::vec_t<3,wp::float32> adj_45 = {};
        wp::float32 adj_46 = {};
        wp::float32 adj_47 = {};
        wp::float32 adj_48 = {};
        wp::float32 adj_49 = {};
        bool adj_50 = {};
        wp::float32 adj_51 = {};
        wp::array_t<wp::float32> adj_52 = {};
        wp::array_t<wp::float32> adj_53 = {};
        wp::float32 adj_54 = {};
        wp::float32 adj_55 = {};
        wp::float32 adj_56 = {};
        wp::float32 adj_57 = {};
        wp::vec_t<6,wp::float32> adj_58 = {};
        bool adj_59 = {};
        wp::vec_t<6,wp::float32> adj_60 = {};
        wp::vec_t<6,wp::float32> adj_61 = {};
        wp::vec_t<6,wp::float32> adj_62 = {};
        wp::vec_t<6,wp::float32> adj_63 = {};
        wp::vec_t<3,wp::float32> adj_64 = {};
        wp::vec_t<3,wp::float32> adj_65 = {};
        wp::vec_t<3,wp::float32> adj_66 = {};
        wp::vec_t<3,wp::float32> adj_67 = {};
        wp::vec_t<3,wp::float32> adj_68 = {};
        wp::vec_t<3,wp::float32> adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::vec_t<3,wp::float32> adj_71 = {};
        wp::vec_t<3,wp::float32> adj_72 = {};
        wp::float32 adj_73 = {};
        wp::vec_t<3,wp::float32> adj_74 = {};
        wp::float32 adj_75 = {};
        wp::vec_t<3,wp::float32> adj_76 = {};
        wp::vec_t<3,wp::float32> adj_77 = {};
        wp::float32 adj_78 = {};
        wp::float32 adj_79 = {};
        wp::float32 adj_80 = {};
        wp::float32 adj_81 = {};
        bool adj_82 = {};
        wp::vec_t<3,wp::float32> adj_83 = {};
        wp::quat_t<wp::float32> adj_84 = {};
        wp::vec_t<3,wp::float32> adj_85 = {};
        wp::mat_t<3,3,wp::float32> adj_86 = {};
        wp::mat_t<3,3,wp::float32> adj_87 = {};
        wp::mat_t<3,3,wp::float32> adj_88 = {};
        wp::float32 adj_89 = {};
        wp::vec_t<3,wp::float32> adj_90 = {};
        wp::float32 adj_91 = {};
        wp::float32 adj_92 = {};
        wp::float32 adj_93 = {};
        wp::float32 adj_94 = {};
        wp::float32 adj_95 = {};
        bool adj_96 = {};
        wp::float32 adj_97 = {};
        wp::float32 adj_98 = {};
        wp::float32 adj_99 = {};
        wp::float32 adj_100 = {};
        wp::float32 adj_101 = {};
        wp::vec_t<3,wp::float32> adj_102 = {};
        wp::vec_t<3,wp::float32> adj_103 = {};
        wp::vec_t<3,wp::float32> adj_104 = {};
        wp::vec_t<3,wp::float32> adj_105 = {};
        wp::vec_t<3,wp::float32> adj_106 = {};
        wp::vec_t<3,wp::float32> adj_107 = {};
        bool adj_108 = {};
        wp::vec_t<3,wp::float32> adj_109 = {};
        wp::vec_t<6,wp::float32> adj_110 = {};
        wp::vec_t<6,wp::float32> adj_111 = {};
        //---------
        // forward
        // def solve_particle_shape_contacts(                                                     <L 110>
        // tid = wp.tid()                                                                         <L 138>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 139>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 140>
            goto label0;
        }
        // count = min(contact_max, contact_count[0])                                             <L 142>
        var_7 = wp::address(var_contact_count, var_5);
        var_8 = wp::load(var_7);
        var_9 = wp::min(var_contact_max, var_8);
        // if tid >= count:                                                                       <L 143>
        var_10 = (var_0 >= var_9);
        if (var_10) {
            // return                                                                             <L 144>
            goto label1;
        }
        // shape_index = contact_shape[tid]                                                       <L 146>
        var_11 = wp::address(var_contact_shape, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // body_index = shape_body[shape_index]                                                   <L 147>
        var_14 = wp::address(var_shape_body, var_13);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // particle_index = contact_particle[tid]                                                 <L 148>
        var_17 = wp::address(var_contact_particle, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // px = particle_x[particle_index]                                                        <L 150>
        var_20 = wp::address(var_particle_x, var_19);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // pv = particle_v[particle_index]                                                        <L 151>
        var_23 = wp::address(var_particle_v, var_19);
        var_24 = wp::load(var_23);
        var_25 = wp::copy(var_24);
        // X_wb = wp.transform_identity()                                                         <L 153>
        var_26 = wp::transform_identity<wp::float32>();
        // X_com = wp.vec3()                                                                      <L 154>
        var_27 = wp::vec_t<3,wp::float32>();
        // if body_index >= 0:                                                                    <L 156>
        var_28 = (var_16 >= var_5);
        if (var_28) {
            // X_wb = body_q[body_index]                                                          <L 157>
            var_29 = wp::address(var_body_q, var_16);
            var_30 = wp::load(var_29);
            var_31 = wp::copy(var_30);
            // X_com = body_com[body_index]                                                       <L 158>
            var_32 = wp::address(var_body_com, var_16);
            var_33 = wp::load(var_32);
            var_34 = wp::copy(var_33);
        }
        var_35 = wp::select(var_28, var_26, var_31);
        var_36 = wp::select(var_28, var_27, var_34);
        // bx = wp.transform_point(X_wb, contact_body_pos[tid])                                   <L 161>
        var_37 = wp::address(var_contact_body_pos, var_0);
        var_38 = wp::load(var_37);
        var_39 = wp::transform_point(var_35, var_38);
        // r = bx - wp.transform_point(X_wb, X_com)                                               <L 162>
        var_40 = wp::transform_point(var_35, var_36);
        var_41 = wp::sub(var_39, var_40);
        // n = contact_normal[tid]                                                                <L 164>
        var_42 = wp::address(var_contact_normal, var_0);
        var_43 = wp::load(var_42);
        var_44 = wp::copy(var_43);
        // c = wp.dot(n, px - bx) - particle_radius[tid]                                          <L 165>
        var_45 = wp::sub(var_22, var_39);
        var_46 = wp::dot(var_44, var_45);
        var_47 = wp::address(var_particle_radius, var_0);
        var_48 = wp::load(var_47);
        var_49 = wp::sub(var_46, var_48);
        // if c > particle_ka:                                                                    <L 167>
        var_50 = (var_49 > var_particle_ka);
        if (var_50) {
            // return                                                                             <L 168>
            goto label2;
        }
        // mu = 0.5 * (particle_mu + shape_materials.mu[shape_index])                             <L 171>
        var_52 = &(var_shape_materials.mu);
        var_53 = wp::load(var_52);
        var_54 = wp::address(var_53, var_13);
        var_55 = wp::load(var_54);
        var_56 = wp::add(var_particle_mu, var_55);
        var_57 = wp::mul(var_51, var_56);
        // body_v_s = wp.spatial_vector()                                                         <L 174>
        var_58 = wp::vec_t<6,wp::float32>();
        // if body_index >= 0:                                                                    <L 175>
        var_59 = (var_16 >= var_5);
        if (var_59) {
            // body_v_s = body_qd[body_index]                                                     <L 176>
            var_60 = wp::address(var_body_qd, var_16);
            var_61 = wp::load(var_60);
            var_62 = wp::copy(var_61);
        }
        var_63 = wp::select(var_59, var_58, var_62);
        // body_w = wp.spatial_top(body_v_s)                                                      <L 178>
        var_64 = wp::spatial_top(var_63);
        // body_v = wp.spatial_bottom(body_v_s)                                                   <L 179>
        var_65 = wp::spatial_bottom(var_63);
        // bv = body_v + wp.cross(body_w, r) + wp.transform_vector(X_wb, contact_body_vel[tid])       <L 182>
        var_66 = wp::cross(var_64, var_41);
        var_67 = wp::add(var_65, var_66);
        var_68 = wp::address(var_contact_body_vel, var_0);
        var_69 = wp::load(var_68);
        var_70 = wp::transform_vector(var_35, var_69);
        var_71 = wp::add(var_67, var_70);
        // v = pv - bv                                                                            <L 185>
        var_72 = wp::sub(var_25, var_71);
        // lambda_n = c                                                                           <L 188>
        var_73 = wp::copy(var_49);
        // delta_n = n * lambda_n                                                                 <L 189>
        var_74 = wp::mul(var_44, var_73);
        // vn = wp.dot(n, v)                                                                      <L 192>
        var_75 = wp::dot(var_44, var_72);
        // vt = v - n * vn                                                                        <L 193>
        var_76 = wp::mul(var_44, var_75);
        var_77 = wp::sub(var_72, var_76);
        // w1 = particle_invmass[particle_index]                                                  <L 196>
        var_78 = wp::address(var_particle_invmass, var_19);
        var_79 = wp::load(var_78);
        var_80 = wp::copy(var_79);
        // w2 = 0.0                                                                               <L 197>
        // if body_index >= 0:                                                                    <L 198>
        var_82 = (var_16 >= var_5);
        if (var_82) {
            // angular = wp.cross(r, n)                                                           <L 199>
            var_83 = wp::cross(var_41, var_44);
            // q = wp.transform_get_rotation(X_wb)                                                <L 200>
            var_84 = wp::transform_get_rotation(var_35);
            // rot_angular = wp.quat_rotate_inv(q, angular)                                       <L 201>
            var_85 = wp::quat_rotate_inv(var_84, var_83);
            // I_inv = body_I_inv[body_index]                                                     <L 202>
            var_86 = wp::address(var_body_I_inv, var_16);
            var_87 = wp::load(var_86);
            var_88 = wp::copy(var_87);
            // w2 = body_m_inv[body_index] + wp.dot(rot_angular, I_inv * rot_angular)             <L 203>
            var_89 = wp::address(var_body_m_inv, var_16);
            var_90 = wp::mul(var_88, var_85);
            var_91 = wp::dot(var_85, var_90);
            var_92 = wp::load(var_89);
            var_93 = wp::add(var_92, var_91);
        }
        var_94 = wp::select(var_82, var_81, var_93);
        // denom = w1 + w2                                                                        <L 204>
        var_95 = wp::add(var_80, var_94);
        // if denom == 0.0:                                                                       <L 205>
        var_96 = (var_95 == var_81);
        if (var_96) {
            // return                                                                             <L 206>
            goto label3;
        }
        // lambda_f = wp.max(mu * lambda_n, -wp.length(vt) * dt)                                  <L 208>
        var_97 = wp::mul(var_57, var_73);
        var_98 = wp::length(var_77);
        var_99 = wp::neg(var_98);
        var_100 = wp::mul(var_99, var_dt);
        var_101 = wp::max(var_97, var_100);
        // delta_f = wp.normalize(vt) * lambda_f                                                  <L 209>
        var_102 = wp::normalize(var_77);
        var_103 = wp::mul(var_102, var_101);
        // delta_total = (delta_f - delta_n) / denom * relaxation                                 <L 210>
        var_104 = wp::sub(var_103, var_74);
        var_105 = wp::div(var_104, var_95);
        var_106 = wp::mul(var_105, var_relaxation);
        // wp.atomic_add(delta, particle_index, delta_total)                                      <L 212>
        // var_107 = wp::atomic_add(var_delta, var_19, var_106);
        // if body_index >= 0:                                                                    <L 214>
        var_108 = (var_16 >= var_5);
        if (var_108) {
            // delta_t = wp.cross(r, delta_total)                                                 <L 215>
            var_109 = wp::cross(var_41, var_106);
            // wp.atomic_sub(body_delta, body_index, wp.spatial_vector(delta_t, delta_total))       <L 216>
            var_110 = wp::vec_t<6,wp::float32>(var_109, var_106);
            // var_111 = wp::atomic_sub(var_body_delta, var_16, var_110);
        }
        //---------
        // reverse
        if (var_108) {
            wp::adj_atomic_sub(var_body_delta, var_16, var_110, adj_body_delta, adj_16, adj_110, adj_111);
            wp::adj_vec_t(var_109, var_106, adj_109, adj_106, adj_110);
            // adj: wp.atomic_sub(body_delta, body_index, wp.spatial_vector(delta_t, delta_total))  <L 216>
            wp::adj_cross(var_41, var_106, adj_41, adj_106, adj_109);
            // adj: delta_t = wp.cross(r, delta_total)                                            <L 215>
        }
        // adj: if body_index >= 0:                                                               <L 214>
        wp::adj_atomic_add(var_delta, var_19, var_106, adj_delta, adj_19, adj_106, adj_107);
        // adj: wp.atomic_add(delta, particle_index, delta_total)                                 <L 212>
        wp::adj_mul(var_105, var_relaxation, adj_105, adj_relaxation, adj_106);
        wp::adj_div(var_104, var_95, adj_104, adj_95, adj_105);
        wp::adj_sub(var_103, var_74, adj_103, adj_74, adj_104);
        // adj: delta_total = (delta_f - delta_n) / denom * relaxation                            <L 210>
        wp::adj_mul(var_102, var_101, adj_102, adj_101, adj_103);
        wp::adj_normalize(var_77, var_102, adj_77, adj_102);
        // adj: delta_f = wp.normalize(vt) * lambda_f                                             <L 209>
        wp::adj_max(var_97, var_100, adj_97, adj_100, adj_101);
        wp::adj_mul(var_99, var_dt, adj_99, adj_dt, adj_100);
        wp::adj_neg(var_98, adj_98, adj_99);
        wp::adj_length(var_77, var_98, adj_77, adj_98);
        wp::adj_mul(var_57, var_73, adj_57, adj_73, adj_97);
        // adj: lambda_f = wp.max(mu * lambda_n, -wp.length(vt) * dt)                             <L 208>
        if (var_96) {
            label3:;
            // adj: return                                                                        <L 206>
        }
        // adj: if denom == 0.0:                                                                  <L 205>
        wp::adj_add(var_80, var_94, adj_80, adj_94, adj_95);
        // adj: denom = w1 + w2                                                                   <L 204>
        wp::adj_select(var_82, var_81, var_93, adj_82, adj_81, adj_93, adj_94);
        if (var_82) {
            wp::adj_add(var_92, var_91, adj_89, adj_91, adj_93);
            wp::adj_load(var_89, adj_89, adj_92);
            wp::adj_dot(var_85, var_90, adj_85, adj_90, adj_91);
            wp::adj_mul(var_88, var_85, adj_88, adj_85, adj_90);
            wp::adj_address(var_body_m_inv, var_16, adj_body_m_inv, adj_16, adj_89);
            // adj: w2 = body_m_inv[body_index] + wp.dot(rot_angular, I_inv * rot_angular)        <L 203>
            wp::adj_copy(var_87, adj_86, adj_88);
            wp::adj_load(var_86, adj_86, adj_87);
            wp::adj_address(var_body_I_inv, var_16, adj_body_I_inv, adj_16, adj_86);
            // adj: I_inv = body_I_inv[body_index]                                                <L 202>
            wp::adj_quat_rotate_inv(var_84, var_83, adj_84, adj_83, adj_85);
            // adj: rot_angular = wp.quat_rotate_inv(q, angular)                                  <L 201>
            wp::adj_transform_get_rotation(var_35, adj_35, adj_84);
            // adj: q = wp.transform_get_rotation(X_wb)                                           <L 200>
            wp::adj_cross(var_41, var_44, adj_41, adj_44, adj_83);
            // adj: angular = wp.cross(r, n)                                                      <L 199>
        }
        // adj: if body_index >= 0:                                                               <L 198>
        // adj: w2 = 0.0                                                                          <L 197>
        wp::adj_copy(var_79, adj_78, adj_80);
        wp::adj_load(var_78, adj_78, adj_79);
        wp::adj_address(var_particle_invmass, var_19, adj_particle_invmass, adj_19, adj_78);
        // adj: w1 = particle_invmass[particle_index]                                             <L 196>
        wp::adj_sub(var_72, var_76, adj_72, adj_76, adj_77);
        wp::adj_mul(var_44, var_75, adj_44, adj_75, adj_76);
        // adj: vt = v - n * vn                                                                   <L 193>
        wp::adj_dot(var_44, var_72, adj_44, adj_72, adj_75);
        // adj: vn = wp.dot(n, v)                                                                 <L 192>
        wp::adj_mul(var_44, var_73, adj_44, adj_73, adj_74);
        // adj: delta_n = n * lambda_n                                                            <L 189>
        wp::adj_copy(var_49, adj_49, adj_73);
        // adj: lambda_n = c                                                                      <L 188>
        wp::adj_sub(var_25, var_71, adj_25, adj_71, adj_72);
        // adj: v = pv - bv                                                                       <L 185>
        wp::adj_add(var_67, var_70, adj_67, adj_70, adj_71);
        wp::adj_transform_vector(var_35, var_69, adj_35, adj_68, adj_70);
        wp::adj_load(var_68, adj_68, adj_69);
        wp::adj_address(var_contact_body_vel, var_0, adj_contact_body_vel, adj_0, adj_68);
        wp::adj_add(var_65, var_66, adj_65, adj_66, adj_67);
        wp::adj_cross(var_64, var_41, adj_64, adj_41, adj_66);
        // adj: bv = body_v + wp.cross(body_w, r) + wp.transform_vector(X_wb, contact_body_vel[tid])  <L 182>
        wp::adj_spatial_bottom(var_63, adj_63, adj_65);
        // adj: body_v = wp.spatial_bottom(body_v_s)                                              <L 179>
        wp::adj_spatial_top(var_63, adj_63, adj_64);
        // adj: body_w = wp.spatial_top(body_v_s)                                                 <L 178>
        wp::adj_select(var_59, var_58, var_62, adj_59, adj_58, adj_62, adj_63);
        if (var_59) {
            wp::adj_copy(var_61, adj_60, adj_62);
            wp::adj_load(var_60, adj_60, adj_61);
            wp::adj_address(var_body_qd, var_16, adj_body_qd, adj_16, adj_60);
            // adj: body_v_s = body_qd[body_index]                                                <L 176>
        }
        // adj: if body_index >= 0:                                                               <L 175>
        // adj: body_v_s = wp.spatial_vector()                                                    <L 174>
        wp::adj_mul(var_51, var_56, adj_51, adj_56, adj_57);
        wp::adj_add(var_particle_mu, var_55, adj_particle_mu, adj_54, adj_56);
        wp::adj_load(var_54, adj_54, adj_55);
        wp::adj_address(var_53, var_13, adj_52, adj_13, adj_54);
        wp::adj_load(var_52, adj_52, adj_53);
        adj_shape_materials.mu = adj_52;
        // adj: mu = 0.5 * (particle_mu + shape_materials.mu[shape_index])                        <L 171>
        if (var_50) {
            label2:;
            // adj: return                                                                        <L 168>
        }
        // adj: if c > particle_ka:                                                               <L 167>
        wp::adj_sub(var_46, var_48, adj_46, adj_47, adj_49);
        wp::adj_load(var_47, adj_47, adj_48);
        wp::adj_address(var_particle_radius, var_0, adj_particle_radius, adj_0, adj_47);
        wp::adj_dot(var_44, var_45, adj_44, adj_45, adj_46);
        wp::adj_sub(var_22, var_39, adj_22, adj_39, adj_45);
        // adj: c = wp.dot(n, px - bx) - particle_radius[tid]                                     <L 165>
        wp::adj_copy(var_43, adj_42, adj_44);
        wp::adj_load(var_42, adj_42, adj_43);
        wp::adj_address(var_contact_normal, var_0, adj_contact_normal, adj_0, adj_42);
        // adj: n = contact_normal[tid]                                                           <L 164>
        wp::adj_sub(var_39, var_40, adj_39, adj_40, adj_41);
        wp::adj_transform_point(var_35, var_36, adj_35, adj_36, adj_40);
        // adj: r = bx - wp.transform_point(X_wb, X_com)                                          <L 162>
        wp::adj_transform_point(var_35, var_38, adj_35, adj_37, adj_39);
        wp::adj_load(var_37, adj_37, adj_38);
        wp::adj_address(var_contact_body_pos, var_0, adj_contact_body_pos, adj_0, adj_37);
        // adj: bx = wp.transform_point(X_wb, contact_body_pos[tid])                              <L 161>
        wp::adj_select(var_28, var_27, var_34, adj_28, adj_27, adj_34, adj_36);
        wp::adj_select(var_28, var_26, var_31, adj_28, adj_26, adj_31, adj_35);
        if (var_28) {
            wp::adj_copy(var_33, adj_32, adj_34);
            wp::adj_load(var_32, adj_32, adj_33);
            wp::adj_address(var_body_com, var_16, adj_body_com, adj_16, adj_32);
            // adj: X_com = body_com[body_index]                                                  <L 158>
            wp::adj_copy(var_30, adj_29, adj_31);
            wp::adj_load(var_29, adj_29, adj_30);
            wp::adj_address(var_body_q, var_16, adj_body_q, adj_16, adj_29);
            // adj: X_wb = body_q[body_index]                                                     <L 157>
        }
        // adj: if body_index >= 0:                                                               <L 156>
        // adj: X_com = wp.vec3()                                                                 <L 154>
        // adj: X_wb = wp.transform_identity()                                                    <L 153>
        wp::adj_copy(var_24, adj_23, adj_25);
        wp::adj_load(var_23, adj_23, adj_24);
        wp::adj_address(var_particle_v, var_19, adj_particle_v, adj_19, adj_23);
        // adj: pv = particle_v[particle_index]                                                   <L 151>
        wp::adj_copy(var_21, adj_20, adj_22);
        wp::adj_load(var_20, adj_20, adj_21);
        wp::adj_address(var_particle_x, var_19, adj_particle_x, adj_19, adj_20);
        // adj: px = particle_x[particle_index]                                                   <L 150>
        wp::adj_copy(var_18, adj_17, adj_19);
        wp::adj_load(var_17, adj_17, adj_18);
        wp::adj_address(var_contact_particle, var_0, adj_contact_particle, adj_0, adj_17);
        // adj: particle_index = contact_particle[tid]                                            <L 148>
        wp::adj_copy(var_15, adj_14, adj_16);
        wp::adj_load(var_14, adj_14, adj_15);
        wp::adj_address(var_shape_body, var_13, adj_shape_body, adj_13, adj_14);
        // adj: body_index = shape_body[shape_index]                                              <L 147>
        wp::adj_copy(var_12, adj_11, adj_13);
        wp::adj_load(var_11, adj_11, adj_12);
        wp::adj_address(var_contact_shape, var_0, adj_contact_shape, adj_0, adj_11);
        // adj: shape_index = contact_shape[tid]                                                  <L 146>
        if (var_10) {
            label1:;
            // adj: return                                                                        <L 144>
        }
        // adj: if tid >= count:                                                                  <L 143>
        wp::adj_min(var_contact_max, var_8, adj_contact_max, adj_7, adj_9);
        wp::adj_load(var_7, adj_7, adj_8);
        wp::adj_address(var_contact_count, var_5, adj_contact_count, adj_5, adj_7);
        // adj: count = min(contact_max, contact_count[0])                                        <L 142>
        if (var_6) {
            label0:;
            // adj: return                                                                        <L 140>
        }
        wp::adj_bit_and(var_3, var_2, adj_1, adj_2, adj_4);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_particle_flags, var_0, adj_particle_flags, adj_0, adj_1);
        // adj: if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                             <L 139>
        // adj: tid = wp.tid()                                                                    <L 138>
        // adj: def solve_particle_shape_contacts(                                                <L 110>
        continue;
    }
}



extern "C" __global__ void solve_particle_particle_contacts_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::uint64 var_grid,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v,
    wp::array_t<wp::float32> var_particle_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::float32 var_k_mu,
    wp::float32 var_k_cohesion,
    wp::float32 var_max_radius,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_deltas)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32 var_1;
        const wp::int32 var_2 = 1;
        wp::int32 var_3;
        bool var_4;
        wp::uint32* var_5;
        const wp::uint32 var_6 = 1;
        wp::uint32 var_7;
        wp::uint32 var_8;
        const wp::int32 var_9 = 0;
        bool var_10;
        wp::vec_t<3,wp::float32>* var_11;
        wp::vec_t<3,wp::float32> var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32>* var_14;
        wp::vec_t<3,wp::float32> var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::float32* var_17;
        wp::float32 var_18;
        wp::float32 var_19;
        wp::float32* var_20;
        wp::float32 var_21;
        wp::float32 var_22;
        wp::float32 var_23;
        wp::float32 var_24;
        wp::hash_grid_query_t var_25;
        wp::int32 var_26;
        const wp::float32 var_27 = 0.0;
        wp::vec_t<3,wp::float32> var_28;
        bool var_29;
        wp::uint32* var_30;
        wp::uint32 var_31;
        wp::uint32 var_32;
        bool var_33;
        bool var_34;
        bool var_35;
        wp::vec_t<3,wp::float32>* var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::float32 var_39;
        wp::float32 var_40;
        wp::float32* var_41;
        wp::float32 var_42;
        wp::float32 var_43;
        wp::float32* var_44;
        wp::float32 var_45;
        wp::float32 var_46;
        wp::float32 var_47;
        bool var_48;
        bool var_49;
        bool var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32>* var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::float32 var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::float32 var_57;
        wp::vec_t<3,wp::float32> var_58;
        wp::vec_t<3,wp::float32> var_59;
        wp::float32 var_60;
        wp::float32 var_61;
        wp::float32 var_62;
        wp::float32 var_63;
        wp::float32 var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::vec_t<3,wp::float32> var_68;
        wp::vec_t<3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::vec_t<3,wp::float32> var_73;
        wp::vec_t<3,wp::float32> var_74;
        //---------
        // forward
        // def solve_particle_particle_contacts(                                                  <L 220>
        // tid = wp.tid()                                                                         <L 235>
        var_0 = builtin_tid1d();
        // i = wp.hash_grid_point_id(grid, tid)                                                   <L 238>
        var_1 = wp::hash_grid_point_id(var_grid, var_0);
        // if i == -1:                                                                            <L 239>
        var_3 = wp::neg(var_2);
        var_4 = (var_1 == var_3);
        if (var_4) {
            // return                                                                             <L 241>
            return;
        }
        // if (particle_flags[i] & PARTICLE_FLAG_ACTIVE) == 0:                                    <L 242>
        var_5 = wp::address(var_particle_flags, var_1);
        var_7 = wp::load(var_5);
        var_8 = wp::bit_and(var_7, var_6);
        var_10 = (var_8 == var_9);
        if (var_10) {
            // return                                                                             <L 243>
            return;
        }
        // x = particle_x[i]                                                                      <L 245>
        var_11 = wp::address(var_particle_x, var_1);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // v = particle_v[i]                                                                      <L 246>
        var_14 = wp::address(var_particle_v, var_1);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // radius = particle_radius[i]                                                            <L 247>
        var_17 = wp::address(var_particle_radius, var_1);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // w1 = particle_invmass[i]                                                               <L 248>
        var_20 = wp::address(var_particle_invmass, var_1);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // query = wp.hash_grid_query(grid, x, radius + max_radius + k_cohesion)                  <L 251>
        var_23 = wp::add(var_19, var_max_radius);
        var_24 = wp::add(var_23, var_k_cohesion);
        var_25 = wp::hash_grid_query(var_grid, var_13, var_24);
        // index = int(0)                                                                         <L 252>
        var_26 = wp::int(var_9);
        // delta = wp.vec3(0.0)                                                                   <L 254>
        var_28 = wp::vec_t<3,wp::float32>(var_27);
        // while wp.hash_grid_query_next(query, index):                                           <L 256>
        start_while_2:;
        var_29 = wp::hash_grid_query_next(var_25, var_26);
        if ((var_29) == false) goto end_while_2;
            // if (particle_flags[index] & PARTICLE_FLAG_ACTIVE) != 0 and index != i:             <L 257>
            var_30 = wp::address(var_particle_flags, var_26);
            var_31 = wp::load(var_30);
            var_32 = wp::bit_and(var_31, var_6);
            var_33 = (var_32 != var_9);
            var_34 = (var_26 != var_1);
            var_35 = var_33 && var_34;
            if (var_35) {
                // n = x - particle_x[index]                                                      <L 259>
                var_36 = wp::address(var_particle_x, var_26);
                var_37 = wp::load(var_36);
                var_38 = wp::sub(var_13, var_37);
                // d = wp.length(n)                                                               <L 260>
                var_39 = wp::length(var_38);
                // err = d - radius - particle_radius[index]                                      <L 261>
                var_40 = wp::sub(var_39, var_19);
                var_41 = wp::address(var_particle_radius, var_26);
                var_42 = wp::load(var_41);
                var_43 = wp::sub(var_40, var_42);
                // w2 = particle_invmass[index]                                                   <L 264>
                var_44 = wp::address(var_particle_invmass, var_26);
                var_45 = wp::load(var_44);
                var_46 = wp::copy(var_45);
                // denom = w1 + w2                                                                <L 265>
                var_47 = wp::add(var_22, var_46);
                // if err <= k_cohesion and denom > 0.0:                                          <L 267>
                var_48 = (var_43 <= var_k_cohesion);
                var_49 = (var_47 > var_27);
                var_50 = var_48 && var_49;
                if (var_50) {
                    // n = n / d                                                                  <L 268>
                    var_51 = wp::div(var_38, var_39);
                    // vrel = v - particle_v[index]                                               <L 269>
                    var_52 = wp::address(var_particle_v, var_26);
                    var_53 = wp::load(var_52);
                    var_54 = wp::sub(var_16, var_53);
                    // lambda_n = err                                                             <L 272>
                    var_55 = wp::copy(var_43);
                    // delta_n = n * lambda_n                                                     <L 273>
                    var_56 = wp::mul(var_51, var_55);
                    // vn = wp.dot(n, vrel)                                                       <L 276>
                    var_57 = wp::dot(var_51, var_54);
                    // vt = v - n * vn                                                            <L 277>
                    var_58 = wp::mul(var_51, var_57);
                    var_59 = wp::sub(var_16, var_58);
                    // lambda_f = wp.max(k_mu * lambda_n, -wp.length(vt) * dt)                    <L 279>
                    var_60 = wp::mul(var_k_mu, var_55);
                    var_61 = wp::length(var_59);
                    var_62 = wp::neg(var_61);
                    var_63 = wp::mul(var_62, var_dt);
                    var_64 = wp::max(var_60, var_63);
                    // delta_f = wp.normalize(vt) * lambda_f                                      <L 280>
                    var_65 = wp::normalize(var_59);
                    var_66 = wp::mul(var_65, var_64);
                    // delta += (delta_f - delta_n) / denom                                       <L 281>
                    var_67 = wp::sub(var_66, var_56);
                    var_68 = wp::div(var_67, var_47);
                    var_69 = wp::add(var_28, var_68);
                }
                var_70 = wp::select(var_50, var_28, var_69);
                var_71 = wp::select(var_50, var_38, var_51);
            }
            var_72 = wp::select(var_35, var_28, var_70);
            wp::assign(var_28, var_72);
        goto start_while_2;
        end_while_2:;
        // wp.atomic_add(deltas, i, delta * relaxation)                                           <L 283>
        var_73 = wp::mul(var_28, var_relaxation);
        var_74 = wp::atomic_add(var_deltas, var_1, var_73);
    }
}

extern "C" __global__ void solve_particle_particle_contacts_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::uint64 var_grid,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_particle_v,
    wp::array_t<wp::float32> var_particle_invmass,
    wp::array_t<wp::float32> var_particle_radius,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::float32 var_k_mu,
    wp::float32 var_k_cohesion,
    wp::float32 var_max_radius,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_deltas,
    wp::uint64 adj_grid,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_x,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_particle_v,
    wp::array_t<wp::float32> adj_particle_invmass,
    wp::array_t<wp::float32> adj_particle_radius,
    wp::array_t<wp::uint32> adj_particle_flags,
    wp::float32 adj_k_mu,
    wp::float32 adj_k_cohesion,
    wp::float32 adj_max_radius,
    wp::float32 adj_dt,
    wp::float32 adj_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_deltas)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32 var_1;
        const wp::int32 var_2 = 1;
        wp::int32 var_3;
        bool var_4;
        wp::uint32* var_5;
        const wp::uint32 var_6 = 1;
        wp::uint32 var_7;
        wp::uint32 var_8;
        const wp::int32 var_9 = 0;
        bool var_10;
        wp::vec_t<3,wp::float32>* var_11;
        wp::vec_t<3,wp::float32> var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32>* var_14;
        wp::vec_t<3,wp::float32> var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::float32* var_17;
        wp::float32 var_18;
        wp::float32 var_19;
        wp::float32* var_20;
        wp::float32 var_21;
        wp::float32 var_22;
        wp::float32 var_23;
        wp::float32 var_24;
        wp::hash_grid_query_t var_25;
        wp::int32 var_26;
        const wp::float32 var_27 = 0.0;
        wp::vec_t<3,wp::float32> var_28;
        bool var_29;
        wp::uint32* var_30;
        wp::uint32 var_31;
        wp::uint32 var_32;
        bool var_33;
        bool var_34;
        bool var_35;
        wp::vec_t<3,wp::float32>* var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::float32 var_39;
        wp::float32 var_40;
        wp::float32* var_41;
        wp::float32 var_42;
        wp::float32 var_43;
        wp::float32* var_44;
        wp::float32 var_45;
        wp::float32 var_46;
        wp::float32 var_47;
        bool var_48;
        bool var_49;
        bool var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32>* var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::float32 var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::float32 var_57;
        wp::vec_t<3,wp::float32> var_58;
        wp::vec_t<3,wp::float32> var_59;
        wp::float32 var_60;
        wp::float32 var_61;
        wp::float32 var_62;
        wp::float32 var_63;
        wp::float32 var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::vec_t<3,wp::float32> var_68;
        wp::vec_t<3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::vec_t<3,wp::float32> var_73;
        wp::vec_t<3,wp::float32> var_74;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        bool adj_4 = {};
        wp::uint32 adj_5 = {};
        wp::uint32 adj_6 = {};
        wp::uint32 adj_7 = {};
        wp::uint32 adj_8 = {};
        wp::int32 adj_9 = {};
        bool adj_10 = {};
        wp::vec_t<3,wp::float32> adj_11 = {};
        wp::vec_t<3,wp::float32> adj_12 = {};
        wp::vec_t<3,wp::float32> adj_13 = {};
        wp::vec_t<3,wp::float32> adj_14 = {};
        wp::vec_t<3,wp::float32> adj_15 = {};
        wp::vec_t<3,wp::float32> adj_16 = {};
        wp::float32 adj_17 = {};
        wp::float32 adj_18 = {};
        wp::float32 adj_19 = {};
        wp::float32 adj_20 = {};
        wp::float32 adj_21 = {};
        wp::float32 adj_22 = {};
        wp::float32 adj_23 = {};
        wp::float32 adj_24 = {};
        wp::hash_grid_query_t adj_25 = {};
        wp::int32 adj_26 = {};
        wp::float32 adj_27 = {};
        wp::vec_t<3,wp::float32> adj_28 = {};
        bool adj_29 = {};
        wp::uint32 adj_30 = {};
        wp::uint32 adj_31 = {};
        wp::uint32 adj_32 = {};
        bool adj_33 = {};
        bool adj_34 = {};
        bool adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::vec_t<3,wp::float32> adj_37 = {};
        wp::vec_t<3,wp::float32> adj_38 = {};
        wp::float32 adj_39 = {};
        wp::float32 adj_40 = {};
        wp::float32 adj_41 = {};
        wp::float32 adj_42 = {};
        wp::float32 adj_43 = {};
        wp::float32 adj_44 = {};
        wp::float32 adj_45 = {};
        wp::float32 adj_46 = {};
        wp::float32 adj_47 = {};
        bool adj_48 = {};
        bool adj_49 = {};
        bool adj_50 = {};
        wp::vec_t<3,wp::float32> adj_51 = {};
        wp::vec_t<3,wp::float32> adj_52 = {};
        wp::vec_t<3,wp::float32> adj_53 = {};
        wp::vec_t<3,wp::float32> adj_54 = {};
        wp::float32 adj_55 = {};
        wp::vec_t<3,wp::float32> adj_56 = {};
        wp::float32 adj_57 = {};
        wp::vec_t<3,wp::float32> adj_58 = {};
        wp::vec_t<3,wp::float32> adj_59 = {};
        wp::float32 adj_60 = {};
        wp::float32 adj_61 = {};
        wp::float32 adj_62 = {};
        wp::float32 adj_63 = {};
        wp::float32 adj_64 = {};
        wp::vec_t<3,wp::float32> adj_65 = {};
        wp::vec_t<3,wp::float32> adj_66 = {};
        wp::vec_t<3,wp::float32> adj_67 = {};
        wp::vec_t<3,wp::float32> adj_68 = {};
        wp::vec_t<3,wp::float32> adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::vec_t<3,wp::float32> adj_71 = {};
        wp::vec_t<3,wp::float32> adj_72 = {};
        wp::vec_t<3,wp::float32> adj_73 = {};
        wp::vec_t<3,wp::float32> adj_74 = {};
        //---------
        // forward
        // def solve_particle_particle_contacts(                                                  <L 220>
        // tid = wp.tid()                                                                         <L 235>
        var_0 = builtin_tid1d();
        // i = wp.hash_grid_point_id(grid, tid)                                                   <L 238>
        var_1 = wp::hash_grid_point_id(var_grid, var_0);
        // if i == -1:                                                                            <L 239>
        var_3 = wp::neg(var_2);
        var_4 = (var_1 == var_3);
        if (var_4) {
            // return                                                                             <L 241>
            goto label0;
        }
        // if (particle_flags[i] & PARTICLE_FLAG_ACTIVE) == 0:                                    <L 242>
        var_5 = wp::address(var_particle_flags, var_1);
        var_7 = wp::load(var_5);
        var_8 = wp::bit_and(var_7, var_6);
        var_10 = (var_8 == var_9);
        if (var_10) {
            // return                                                                             <L 243>
            goto label1;
        }
        // x = particle_x[i]                                                                      <L 245>
        var_11 = wp::address(var_particle_x, var_1);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // v = particle_v[i]                                                                      <L 246>
        var_14 = wp::address(var_particle_v, var_1);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // radius = particle_radius[i]                                                            <L 247>
        var_17 = wp::address(var_particle_radius, var_1);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // w1 = particle_invmass[i]                                                               <L 248>
        var_20 = wp::address(var_particle_invmass, var_1);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // query = wp.hash_grid_query(grid, x, radius + max_radius + k_cohesion)                  <L 251>
        var_23 = wp::add(var_19, var_max_radius);
        var_24 = wp::add(var_23, var_k_cohesion);
        var_25 = wp::hash_grid_query(var_grid, var_13, var_24);
        // index = int(0)                                                                         <L 252>
        var_26 = wp::int(var_9);
        // delta = wp.vec3(0.0)                                                                   <L 254>
        var_28 = wp::vec_t<3,wp::float32>(var_27);
        // while wp.hash_grid_query_next(query, index):                                           <L 256>
        // wp.atomic_add(deltas, i, delta * relaxation)                                           <L 283>
        var_73 = wp::mul(var_28, var_relaxation);
        // var_74 = wp::atomic_add(var_deltas, var_1, var_73);
        //---------
        // reverse
        wp::adj_atomic_add(var_deltas, var_1, var_73, adj_deltas, adj_1, adj_73, adj_74);
        wp::adj_mul(var_28, var_relaxation, adj_28, adj_relaxation, adj_73);
        // adj: wp.atomic_add(deltas, i, delta * relaxation)                                      <L 283>
        start_while_2:;
        var_29 = wp::hash_grid_query_next(var_25, var_26);
        if ((var_29) == false) goto end_while_2;
        adj_30 = {};
        adj_31 = {};
        adj_32 = {};
        adj_33 = {};
        adj_34 = {};
        adj_35 = {};
        adj_36 = {};
        adj_37 = {};
        adj_38 = {};
        adj_39 = {};
        adj_40 = {};
        adj_41 = {};
        adj_42 = {};
        adj_43 = {};
        adj_44 = {};
        adj_45 = {};
        adj_46 = {};
        adj_47 = {};
        adj_48 = {};
        adj_49 = {};
        adj_50 = {};
        adj_51 = {};
        adj_52 = {};
        adj_53 = {};
        adj_54 = {};
        adj_55 = {};
        adj_56 = {};
        adj_57 = {};
        adj_58 = {};
        adj_59 = {};
        adj_60 = {};
        adj_61 = {};
        adj_62 = {};
        adj_63 = {};
        adj_64 = {};
        adj_65 = {};
        adj_66 = {};
        adj_67 = {};
        adj_68 = {};
        adj_69 = {};
        adj_70 = {};
        adj_71 = {};
        adj_72 = {};
            // if (particle_flags[index] & PARTICLE_FLAG_ACTIVE) != 0 and index != i:             <L 257>
            var_30 = wp::address(var_particle_flags, var_26);
            var_31 = wp::load(var_30);
            var_32 = wp::bit_and(var_31, var_6);
            var_33 = (var_32 != var_9);
            var_34 = (var_26 != var_1);
            var_35 = var_33 && var_34;
            if (var_35) {
                // n = x - particle_x[index]                                                      <L 259>
                var_36 = wp::address(var_particle_x, var_26);
                var_37 = wp::load(var_36);
                var_38 = wp::sub(var_13, var_37);
                // d = wp.length(n)                                                               <L 260>
                var_39 = wp::length(var_38);
                // err = d - radius - particle_radius[index]                                      <L 261>
                var_40 = wp::sub(var_39, var_19);
                var_41 = wp::address(var_particle_radius, var_26);
                var_42 = wp::load(var_41);
                var_43 = wp::sub(var_40, var_42);
                // w2 = particle_invmass[index]                                                   <L 264>
                var_44 = wp::address(var_particle_invmass, var_26);
                var_45 = wp::load(var_44);
                var_46 = wp::copy(var_45);
                // denom = w1 + w2                                                                <L 265>
                var_47 = wp::add(var_22, var_46);
                // if err <= k_cohesion and denom > 0.0:                                          <L 267>
                var_48 = (var_43 <= var_k_cohesion);
                var_49 = (var_47 > var_27);
                var_50 = var_48 && var_49;
                if (var_50) {
                    // n = n / d                                                                  <L 268>
                    var_51 = wp::div(var_38, var_39);
                    // vrel = v - particle_v[index]                                               <L 269>
                    var_52 = wp::address(var_particle_v, var_26);
                    var_53 = wp::load(var_52);
                    var_54 = wp::sub(var_16, var_53);
                    // lambda_n = err                                                             <L 272>
                    var_55 = wp::copy(var_43);
                    // delta_n = n * lambda_n                                                     <L 273>
                    var_56 = wp::mul(var_51, var_55);
                    // vn = wp.dot(n, vrel)                                                       <L 276>
                    var_57 = wp::dot(var_51, var_54);
                    // vt = v - n * vn                                                            <L 277>
                    var_58 = wp::mul(var_51, var_57);
                    var_59 = wp::sub(var_16, var_58);
                    // lambda_f = wp.max(k_mu * lambda_n, -wp.length(vt) * dt)                    <L 279>
                    var_60 = wp::mul(var_k_mu, var_55);
                    var_61 = wp::length(var_59);
                    var_62 = wp::neg(var_61);
                    var_63 = wp::mul(var_62, var_dt);
                    var_64 = wp::max(var_60, var_63);
                    // delta_f = wp.normalize(vt) * lambda_f                                      <L 280>
                    var_65 = wp::normalize(var_59);
                    var_66 = wp::mul(var_65, var_64);
                    // delta += (delta_f - delta_n) / denom                                       <L 281>
                    var_67 = wp::sub(var_66, var_56);
                    var_68 = wp::div(var_67, var_47);
                    var_69 = wp::add(var_28, var_68);
                }
                var_70 = wp::select(var_50, var_28, var_69);
                var_71 = wp::select(var_50, var_38, var_51);
            }
            var_72 = wp::select(var_35, var_28, var_70);
            wp::assign(var_28, var_72);
            wp::adj_assign(var_28, var_72, adj_28, adj_72);
            wp::adj_select(var_35, var_28, var_70, adj_35, adj_28, adj_70, adj_72);
            if (var_35) {
                wp::adj_select(var_50, var_38, var_51, adj_50, adj_38, adj_51, adj_71);
                wp::adj_select(var_50, var_28, var_69, adj_50, adj_28, adj_69, adj_70);
                if (var_50) {
                    wp::adj_add(var_28, var_68, adj_28, adj_68, adj_69);
                    wp::adj_div(var_67, var_47, adj_67, adj_47, adj_68);
                    wp::adj_sub(var_66, var_56, adj_66, adj_56, adj_67);
                    // adj: delta += (delta_f - delta_n) / denom                                  <L 281>
                    wp::adj_mul(var_65, var_64, adj_65, adj_64, adj_66);
                    wp::adj_normalize(var_59, var_65, adj_59, adj_65);
                    // adj: delta_f = wp.normalize(vt) * lambda_f                                 <L 280>
                    wp::adj_max(var_60, var_63, adj_60, adj_63, adj_64);
                    wp::adj_mul(var_62, var_dt, adj_62, adj_dt, adj_63);
                    wp::adj_neg(var_61, adj_61, adj_62);
                    wp::adj_length(var_59, var_61, adj_59, adj_61);
                    wp::adj_mul(var_k_mu, var_55, adj_k_mu, adj_55, adj_60);
                    // adj: lambda_f = wp.max(k_mu * lambda_n, -wp.length(vt) * dt)               <L 279>
                    wp::adj_sub(var_16, var_58, adj_16, adj_58, adj_59);
                    wp::adj_mul(var_51, var_57, adj_51, adj_57, adj_58);
                    // adj: vt = v - n * vn                                                       <L 277>
                    wp::adj_dot(var_51, var_54, adj_51, adj_54, adj_57);
                    // adj: vn = wp.dot(n, vrel)                                                  <L 276>
                    wp::adj_mul(var_51, var_55, adj_51, adj_55, adj_56);
                    // adj: delta_n = n * lambda_n                                                <L 273>
                    wp::adj_copy(var_43, adj_43, adj_55);
                    // adj: lambda_n = err                                                        <L 272>
                    wp::adj_sub(var_16, var_53, adj_16, adj_52, adj_54);
                    wp::adj_load(var_52, adj_52, adj_53);
                    wp::adj_address(var_particle_v, var_26, adj_particle_v, adj_26, adj_52);
                    // adj: vrel = v - particle_v[index]                                          <L 269>
                    wp::adj_div(var_38, var_39, adj_38, adj_39, adj_51);
                    // adj: n = n / d                                                             <L 268>
                }
                // adj: if err <= k_cohesion and denom > 0.0:                                     <L 267>
                wp::adj_add(var_22, var_46, adj_22, adj_46, adj_47);
                // adj: denom = w1 + w2                                                           <L 265>
                wp::adj_copy(var_45, adj_44, adj_46);
                wp::adj_load(var_44, adj_44, adj_45);
                wp::adj_address(var_particle_invmass, var_26, adj_particle_invmass, adj_26, adj_44);
                // adj: w2 = particle_invmass[index]                                              <L 264>
                wp::adj_sub(var_40, var_42, adj_40, adj_41, adj_43);
                wp::adj_load(var_41, adj_41, adj_42);
                wp::adj_address(var_particle_radius, var_26, adj_particle_radius, adj_26, adj_41);
                wp::adj_sub(var_39, var_19, adj_39, adj_19, adj_40);
                // adj: err = d - radius - particle_radius[index]                                 <L 261>
                wp::adj_length(var_38, var_39, adj_38, adj_39);
                // adj: d = wp.length(n)                                                          <L 260>
                wp::adj_sub(var_13, var_37, adj_13, adj_36, adj_38);
                wp::adj_load(var_36, adj_36, adj_37);
                wp::adj_address(var_particle_x, var_26, adj_particle_x, adj_26, adj_36);
                // adj: n = x - particle_x[index]                                                 <L 259>
            }
            wp::adj_bit_and(var_31, var_6, adj_30, adj_6, adj_32);
            wp::adj_load(var_30, adj_30, adj_31);
            wp::adj_address(var_particle_flags, var_26, adj_particle_flags, adj_26, adj_30);
            // adj: if (particle_flags[index] & PARTICLE_FLAG_ACTIVE) != 0 and index != i:        <L 257>
        goto start_while_2;
        end_while_2:;
        // adj: while wp.hash_grid_query_next(query, index):                                      <L 256>
        wp::adj_vec_t(var_27, adj_27, adj_28);
        // adj: delta = wp.vec3(0.0)                                                              <L 254>
        wp::adj_int(var_9, adj_9, adj_26);
        // adj: index = int(0)                                                                    <L 252>
        wp::adj_hash_grid_query(var_grid, var_13, var_24, adj_grid, adj_13, adj_24, adj_25);
        wp::adj_add(var_23, var_k_cohesion, adj_23, adj_k_cohesion, adj_24);
        wp::adj_add(var_19, var_max_radius, adj_19, adj_max_radius, adj_23);
        // adj: query = wp.hash_grid_query(grid, x, radius + max_radius + k_cohesion)             <L 251>
        wp::adj_copy(var_21, adj_20, adj_22);
        wp::adj_load(var_20, adj_20, adj_21);
        wp::adj_address(var_particle_invmass, var_1, adj_particle_invmass, adj_1, adj_20);
        // adj: w1 = particle_invmass[i]                                                          <L 248>
        wp::adj_copy(var_18, adj_17, adj_19);
        wp::adj_load(var_17, adj_17, adj_18);
        wp::adj_address(var_particle_radius, var_1, adj_particle_radius, adj_1, adj_17);
        // adj: radius = particle_radius[i]                                                       <L 247>
        wp::adj_copy(var_15, adj_14, adj_16);
        wp::adj_load(var_14, adj_14, adj_15);
        wp::adj_address(var_particle_v, var_1, adj_particle_v, adj_1, adj_14);
        // adj: v = particle_v[i]                                                                 <L 246>
        wp::adj_copy(var_12, adj_11, adj_13);
        wp::adj_load(var_11, adj_11, adj_12);
        wp::adj_address(var_particle_x, var_1, adj_particle_x, adj_1, adj_11);
        // adj: x = particle_x[i]                                                                 <L 245>
        if (var_10) {
            label1:;
            // adj: return                                                                        <L 243>
        }
        wp::adj_bit_and(var_7, var_6, adj_5, adj_6, adj_8);
        wp::adj_load(var_5, adj_5, adj_7);
        wp::adj_address(var_particle_flags, var_1, adj_particle_flags, adj_1, adj_5);
        // adj: if (particle_flags[i] & PARTICLE_FLAG_ACTIVE) == 0:                               <L 242>
        if (var_4) {
            label0:;
            // adj: return                                                                        <L 241>
        }
        wp::adj_neg(var_2, adj_2, adj_3);
        // adj: if i == -1:                                                                       <L 239>
        wp::adj_hash_grid_point_id(var_grid, var_0, adj_grid, adj_0, adj_1);
        // adj: i = wp.hash_grid_point_id(grid, tid)                                              <L 238>
        // adj: tid = wp.tid()                                                                    <L 235>
        // adj: def solve_particle_particle_contacts(                                             <L 220>
        continue;
    }
}



extern "C" __global__ void solve_springs_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_v,
    wp::array_t<wp::float32> var_invmass,
    wp::array_t<wp::int32> var_spring_indices,
    wp::array_t<wp::float32> var_spring_rest_lengths,
    wp::array_t<wp::float32> var_spring_stiffness,
    wp::array_t<wp::float32> var_spring_damping,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 2;
        wp::int32 var_2;
        const wp::int32 var_3 = 0;
        wp::int32 var_4;
        wp::int32* var_5;
        wp::int32 var_6;
        wp::int32 var_7;
        wp::int32 var_8;
        const wp::int32 var_9 = 1;
        wp::int32 var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::float32* var_14;
        wp::float32 var_15;
        wp::float32 var_16;
        wp::float32* var_17;
        wp::float32 var_18;
        wp::float32 var_19;
        wp::float32* var_20;
        wp::float32 var_21;
        wp::float32 var_22;
        wp::vec_t<3,wp::float32>* var_23;
        wp::vec_t<3,wp::float32> var_24;
        wp::vec_t<3,wp::float32> var_25;
        wp::vec_t<3,wp::float32>* var_26;
        wp::vec_t<3,wp::float32> var_27;
        wp::vec_t<3,wp::float32> var_28;
        wp::vec_t<3,wp::float32>* var_29;
        wp::vec_t<3,wp::float32> var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32>* var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::float32 var_37;
        const wp::float32 var_38 = 1.0;
        wp::float32 var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::float32 var_41;
        wp::float32 var_42;
        wp::float32* var_43;
        wp::float32 var_44;
        wp::float32 var_45;
        wp::float32* var_46;
        wp::float32 var_47;
        wp::float32 var_48;
        wp::float32 var_49;
        wp::float32 var_50;
        wp::float32 var_51;
        wp::float32 var_52;
        wp::float32 var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::vec_t<3,wp::float32> var_57;
        wp::vec_t<3,wp::float32> var_58;
        //---------
        // forward
        // def solve_springs(                                                                     <L 287>
        // tid = wp.tid()                                                                         <L 298>
        var_0 = builtin_tid1d();
        // i = spring_indices[tid * 2 + 0]                                                        <L 300>
        var_2 = wp::mul(var_0, var_1);
        var_4 = wp::add(var_2, var_3);
        var_5 = wp::address(var_spring_indices, var_4);
        var_6 = wp::load(var_5);
        var_7 = wp::copy(var_6);
        // j = spring_indices[tid * 2 + 1]                                                        <L 301>
        var_8 = wp::mul(var_0, var_1);
        var_10 = wp::add(var_8, var_9);
        var_11 = wp::address(var_spring_indices, var_10);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // ke = spring_stiffness[tid]                                                             <L 303>
        var_14 = wp::address(var_spring_stiffness, var_0);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // kd = spring_damping[tid]                                                               <L 304>
        var_17 = wp::address(var_spring_damping, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // rest = spring_rest_lengths[tid]                                                        <L 305>
        var_20 = wp::address(var_spring_rest_lengths, var_0);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // xi = x[i]                                                                              <L 307>
        var_23 = wp::address(var_x, var_7);
        var_24 = wp::load(var_23);
        var_25 = wp::copy(var_24);
        // xj = x[j]                                                                              <L 308>
        var_26 = wp::address(var_x, var_13);
        var_27 = wp::load(var_26);
        var_28 = wp::copy(var_27);
        // vi = v[i]                                                                              <L 310>
        var_29 = wp::address(var_v, var_7);
        var_30 = wp::load(var_29);
        var_31 = wp::copy(var_30);
        // vj = v[j]                                                                              <L 311>
        var_32 = wp::address(var_v, var_13);
        var_33 = wp::load(var_32);
        var_34 = wp::copy(var_33);
        // xij = xi - xj                                                                          <L 313>
        var_35 = wp::sub(var_25, var_28);
        // vij = vi - vj                                                                          <L 314>
        var_36 = wp::sub(var_31, var_34);
        // l = wp.length(xij)                                                                     <L 316>
        var_37 = wp::length(var_35);
        // l_inv = 1.0 / l                                                                        <L 317>
        var_39 = wp::div(var_38, var_37);
        // dir = xij * l_inv                                                                      <L 320>
        var_40 = wp::mul(var_35, var_39);
        // c = l - rest                                                                           <L 322>
        var_41 = wp::sub(var_37, var_22);
        // dcdt = wp.dot(dir, vij)                                                                <L 323>
        var_42 = wp::dot(var_40, var_36);
        // wi = invmass[i]                                                                        <L 328>
        var_43 = wp::address(var_invmass, var_7);
        var_44 = wp::load(var_43);
        var_45 = wp::copy(var_44);
        // wj = invmass[j]                                                                        <L 329>
        var_46 = wp::address(var_invmass, var_13);
        var_47 = wp::load(var_46);
        var_48 = wp::copy(var_47);
        // denom = wi + wj                                                                        <L 331>
        var_49 = wp::add(var_45, var_48);
        // alpha = 1.0 / (ke * dt * dt)                                                           <L 332>
        var_50 = wp::mul(var_16, var_dt);
        var_51 = wp::mul(var_50, var_dt);
        var_52 = wp::div(var_38, var_51);
        // multiplier = c / (denom)  # + alpha)                                                   <L 334>
        var_53 = wp::div(var_41, var_49);
        // xd = dir * multiplier                                                                  <L 336>
        var_54 = wp::mul(var_40, var_53);
        // wp.atomic_sub(delta, i, xd * wi)                                                       <L 338>
        var_55 = wp::mul(var_54, var_45);
        var_56 = wp::atomic_sub(var_delta, var_7, var_55);
        // wp.atomic_add(delta, j, xd * wj)                                                       <L 339>
        var_57 = wp::mul(var_54, var_48);
        var_58 = wp::atomic_add(var_delta, var_13, var_57);
    }
}

extern "C" __global__ void solve_springs_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_v,
    wp::array_t<wp::float32> var_invmass,
    wp::array_t<wp::int32> var_spring_indices,
    wp::array_t<wp::float32> var_spring_rest_lengths,
    wp::array_t<wp::float32> var_spring_stiffness,
    wp::array_t<wp::float32> var_spring_damping,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_x,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_v,
    wp::array_t<wp::float32> adj_invmass,
    wp::array_t<wp::int32> adj_spring_indices,
    wp::array_t<wp::float32> adj_spring_rest_lengths,
    wp::array_t<wp::float32> adj_spring_stiffness,
    wp::array_t<wp::float32> adj_spring_damping,
    wp::float32 adj_dt,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 2;
        wp::int32 var_2;
        const wp::int32 var_3 = 0;
        wp::int32 var_4;
        wp::int32* var_5;
        wp::int32 var_6;
        wp::int32 var_7;
        wp::int32 var_8;
        const wp::int32 var_9 = 1;
        wp::int32 var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::float32* var_14;
        wp::float32 var_15;
        wp::float32 var_16;
        wp::float32* var_17;
        wp::float32 var_18;
        wp::float32 var_19;
        wp::float32* var_20;
        wp::float32 var_21;
        wp::float32 var_22;
        wp::vec_t<3,wp::float32>* var_23;
        wp::vec_t<3,wp::float32> var_24;
        wp::vec_t<3,wp::float32> var_25;
        wp::vec_t<3,wp::float32>* var_26;
        wp::vec_t<3,wp::float32> var_27;
        wp::vec_t<3,wp::float32> var_28;
        wp::vec_t<3,wp::float32>* var_29;
        wp::vec_t<3,wp::float32> var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32>* var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::float32 var_37;
        const wp::float32 var_38 = 1.0;
        wp::float32 var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::float32 var_41;
        wp::float32 var_42;
        wp::float32* var_43;
        wp::float32 var_44;
        wp::float32 var_45;
        wp::float32* var_46;
        wp::float32 var_47;
        wp::float32 var_48;
        wp::float32 var_49;
        wp::float32 var_50;
        wp::float32 var_51;
        wp::float32 var_52;
        wp::float32 var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::vec_t<3,wp::float32> var_57;
        wp::vec_t<3,wp::float32> var_58;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::float32 adj_14 = {};
        wp::float32 adj_15 = {};
        wp::float32 adj_16 = {};
        wp::float32 adj_17 = {};
        wp::float32 adj_18 = {};
        wp::float32 adj_19 = {};
        wp::float32 adj_20 = {};
        wp::float32 adj_21 = {};
        wp::float32 adj_22 = {};
        wp::vec_t<3,wp::float32> adj_23 = {};
        wp::vec_t<3,wp::float32> adj_24 = {};
        wp::vec_t<3,wp::float32> adj_25 = {};
        wp::vec_t<3,wp::float32> adj_26 = {};
        wp::vec_t<3,wp::float32> adj_27 = {};
        wp::vec_t<3,wp::float32> adj_28 = {};
        wp::vec_t<3,wp::float32> adj_29 = {};
        wp::vec_t<3,wp::float32> adj_30 = {};
        wp::vec_t<3,wp::float32> adj_31 = {};
        wp::vec_t<3,wp::float32> adj_32 = {};
        wp::vec_t<3,wp::float32> adj_33 = {};
        wp::vec_t<3,wp::float32> adj_34 = {};
        wp::vec_t<3,wp::float32> adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::float32 adj_37 = {};
        wp::float32 adj_38 = {};
        wp::float32 adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::float32 adj_41 = {};
        wp::float32 adj_42 = {};
        wp::float32 adj_43 = {};
        wp::float32 adj_44 = {};
        wp::float32 adj_45 = {};
        wp::float32 adj_46 = {};
        wp::float32 adj_47 = {};
        wp::float32 adj_48 = {};
        wp::float32 adj_49 = {};
        wp::float32 adj_50 = {};
        wp::float32 adj_51 = {};
        wp::float32 adj_52 = {};
        wp::float32 adj_53 = {};
        wp::vec_t<3,wp::float32> adj_54 = {};
        wp::vec_t<3,wp::float32> adj_55 = {};
        wp::vec_t<3,wp::float32> adj_56 = {};
        wp::vec_t<3,wp::float32> adj_57 = {};
        wp::vec_t<3,wp::float32> adj_58 = {};
        //---------
        // forward
        // def solve_springs(                                                                     <L 287>
        // tid = wp.tid()                                                                         <L 298>
        var_0 = builtin_tid1d();
        // i = spring_indices[tid * 2 + 0]                                                        <L 300>
        var_2 = wp::mul(var_0, var_1);
        var_4 = wp::add(var_2, var_3);
        var_5 = wp::address(var_spring_indices, var_4);
        var_6 = wp::load(var_5);
        var_7 = wp::copy(var_6);
        // j = spring_indices[tid * 2 + 1]                                                        <L 301>
        var_8 = wp::mul(var_0, var_1);
        var_10 = wp::add(var_8, var_9);
        var_11 = wp::address(var_spring_indices, var_10);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // ke = spring_stiffness[tid]                                                             <L 303>
        var_14 = wp::address(var_spring_stiffness, var_0);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // kd = spring_damping[tid]                                                               <L 304>
        var_17 = wp::address(var_spring_damping, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // rest = spring_rest_lengths[tid]                                                        <L 305>
        var_20 = wp::address(var_spring_rest_lengths, var_0);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // xi = x[i]                                                                              <L 307>
        var_23 = wp::address(var_x, var_7);
        var_24 = wp::load(var_23);
        var_25 = wp::copy(var_24);
        // xj = x[j]                                                                              <L 308>
        var_26 = wp::address(var_x, var_13);
        var_27 = wp::load(var_26);
        var_28 = wp::copy(var_27);
        // vi = v[i]                                                                              <L 310>
        var_29 = wp::address(var_v, var_7);
        var_30 = wp::load(var_29);
        var_31 = wp::copy(var_30);
        // vj = v[j]                                                                              <L 311>
        var_32 = wp::address(var_v, var_13);
        var_33 = wp::load(var_32);
        var_34 = wp::copy(var_33);
        // xij = xi - xj                                                                          <L 313>
        var_35 = wp::sub(var_25, var_28);
        // vij = vi - vj                                                                          <L 314>
        var_36 = wp::sub(var_31, var_34);
        // l = wp.length(xij)                                                                     <L 316>
        var_37 = wp::length(var_35);
        // l_inv = 1.0 / l                                                                        <L 317>
        var_39 = wp::div(var_38, var_37);
        // dir = xij * l_inv                                                                      <L 320>
        var_40 = wp::mul(var_35, var_39);
        // c = l - rest                                                                           <L 322>
        var_41 = wp::sub(var_37, var_22);
        // dcdt = wp.dot(dir, vij)                                                                <L 323>
        var_42 = wp::dot(var_40, var_36);
        // wi = invmass[i]                                                                        <L 328>
        var_43 = wp::address(var_invmass, var_7);
        var_44 = wp::load(var_43);
        var_45 = wp::copy(var_44);
        // wj = invmass[j]                                                                        <L 329>
        var_46 = wp::address(var_invmass, var_13);
        var_47 = wp::load(var_46);
        var_48 = wp::copy(var_47);
        // denom = wi + wj                                                                        <L 331>
        var_49 = wp::add(var_45, var_48);
        // alpha = 1.0 / (ke * dt * dt)                                                           <L 332>
        var_50 = wp::mul(var_16, var_dt);
        var_51 = wp::mul(var_50, var_dt);
        var_52 = wp::div(var_38, var_51);
        // multiplier = c / (denom)  # + alpha)                                                   <L 334>
        var_53 = wp::div(var_41, var_49);
        // xd = dir * multiplier                                                                  <L 336>
        var_54 = wp::mul(var_40, var_53);
        // wp.atomic_sub(delta, i, xd * wi)                                                       <L 338>
        var_55 = wp::mul(var_54, var_45);
        // var_56 = wp::atomic_sub(var_delta, var_7, var_55);
        // wp.atomic_add(delta, j, xd * wj)                                                       <L 339>
        var_57 = wp::mul(var_54, var_48);
        // var_58 = wp::atomic_add(var_delta, var_13, var_57);
        //---------
        // reverse
        wp::adj_atomic_add(var_delta, var_13, var_57, adj_delta, adj_13, adj_57, adj_58);
        wp::adj_mul(var_54, var_48, adj_54, adj_48, adj_57);
        // adj: wp.atomic_add(delta, j, xd * wj)                                                  <L 339>
        wp::adj_atomic_sub(var_delta, var_7, var_55, adj_delta, adj_7, adj_55, adj_56);
        wp::adj_mul(var_54, var_45, adj_54, adj_45, adj_55);
        // adj: wp.atomic_sub(delta, i, xd * wi)                                                  <L 338>
        wp::adj_mul(var_40, var_53, adj_40, adj_53, adj_54);
        // adj: xd = dir * multiplier                                                             <L 336>
        wp::adj_div(var_41, var_49, var_53, adj_41, adj_49, adj_53);
        // adj: multiplier = c / (denom)  # + alpha)                                              <L 334>
        wp::adj_div(var_38, var_51, var_52, adj_38, adj_51, adj_52);
        wp::adj_mul(var_50, var_dt, adj_50, adj_dt, adj_51);
        wp::adj_mul(var_16, var_dt, adj_16, adj_dt, adj_50);
        // adj: alpha = 1.0 / (ke * dt * dt)                                                      <L 332>
        wp::adj_add(var_45, var_48, adj_45, adj_48, adj_49);
        // adj: denom = wi + wj                                                                   <L 331>
        wp::adj_copy(var_47, adj_46, adj_48);
        wp::adj_load(var_46, adj_46, adj_47);
        wp::adj_address(var_invmass, var_13, adj_invmass, adj_13, adj_46);
        // adj: wj = invmass[j]                                                                   <L 329>
        wp::adj_copy(var_44, adj_43, adj_45);
        wp::adj_load(var_43, adj_43, adj_44);
        wp::adj_address(var_invmass, var_7, adj_invmass, adj_7, adj_43);
        // adj: wi = invmass[i]                                                                   <L 328>
        wp::adj_dot(var_40, var_36, adj_40, adj_36, adj_42);
        // adj: dcdt = wp.dot(dir, vij)                                                           <L 323>
        wp::adj_sub(var_37, var_22, adj_37, adj_22, adj_41);
        // adj: c = l - rest                                                                      <L 322>
        wp::adj_mul(var_35, var_39, adj_35, adj_39, adj_40);
        // adj: dir = xij * l_inv                                                                 <L 320>
        wp::adj_div(var_38, var_37, var_39, adj_38, adj_37, adj_39);
        // adj: l_inv = 1.0 / l                                                                   <L 317>
        wp::adj_length(var_35, var_37, adj_35, adj_37);
        // adj: l = wp.length(xij)                                                                <L 316>
        wp::adj_sub(var_31, var_34, adj_31, adj_34, adj_36);
        // adj: vij = vi - vj                                                                     <L 314>
        wp::adj_sub(var_25, var_28, adj_25, adj_28, adj_35);
        // adj: xij = xi - xj                                                                     <L 313>
        wp::adj_copy(var_33, adj_32, adj_34);
        wp::adj_load(var_32, adj_32, adj_33);
        wp::adj_address(var_v, var_13, adj_v, adj_13, adj_32);
        // adj: vj = v[j]                                                                         <L 311>
        wp::adj_copy(var_30, adj_29, adj_31);
        wp::adj_load(var_29, adj_29, adj_30);
        wp::adj_address(var_v, var_7, adj_v, adj_7, adj_29);
        // adj: vi = v[i]                                                                         <L 310>
        wp::adj_copy(var_27, adj_26, adj_28);
        wp::adj_load(var_26, adj_26, adj_27);
        wp::adj_address(var_x, var_13, adj_x, adj_13, adj_26);
        // adj: xj = x[j]                                                                         <L 308>
        wp::adj_copy(var_24, adj_23, adj_25);
        wp::adj_load(var_23, adj_23, adj_24);
        wp::adj_address(var_x, var_7, adj_x, adj_7, adj_23);
        // adj: xi = x[i]                                                                         <L 307>
        wp::adj_copy(var_21, adj_20, adj_22);
        wp::adj_load(var_20, adj_20, adj_21);
        wp::adj_address(var_spring_rest_lengths, var_0, adj_spring_rest_lengths, adj_0, adj_20);
        // adj: rest = spring_rest_lengths[tid]                                                   <L 305>
        wp::adj_copy(var_18, adj_17, adj_19);
        wp::adj_load(var_17, adj_17, adj_18);
        wp::adj_address(var_spring_damping, var_0, adj_spring_damping, adj_0, adj_17);
        // adj: kd = spring_damping[tid]                                                          <L 304>
        wp::adj_copy(var_15, adj_14, adj_16);
        wp::adj_load(var_14, adj_14, adj_15);
        wp::adj_address(var_spring_stiffness, var_0, adj_spring_stiffness, adj_0, adj_14);
        // adj: ke = spring_stiffness[tid]                                                        <L 303>
        wp::adj_copy(var_12, adj_11, adj_13);
        wp::adj_load(var_11, adj_11, adj_12);
        wp::adj_address(var_spring_indices, var_10, adj_spring_indices, adj_10, adj_11);
        wp::adj_add(var_8, var_9, adj_8, adj_9, adj_10);
        wp::adj_mul(var_0, var_1, adj_0, adj_1, adj_8);
        // adj: j = spring_indices[tid * 2 + 1]                                                   <L 301>
        wp::adj_copy(var_6, adj_5, adj_7);
        wp::adj_load(var_5, adj_5, adj_6);
        wp::adj_address(var_spring_indices, var_4, adj_spring_indices, adj_4, adj_5);
        wp::adj_add(var_2, var_3, adj_2, adj_3, adj_4);
        wp::adj_mul(var_0, var_1, adj_0, adj_1, adj_2);
        // adj: i = spring_indices[tid * 2 + 0]                                                   <L 300>
        // adj: tid = wp.tid()                                                                    <L 298>
        // adj: def solve_springs(                                                                <L 287>
        continue;
    }
}



extern "C" __global__ void solve_tetrahedra_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_v,
    wp::array_t<wp::float32> var_inv_mass,
    wp::array_t<wp::int32> var_indices,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_pose,
    wp::array_t<wp::float32> var_activation,
    wp::array_t<wp::float32> var_materials,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::int32* var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        const wp::int32 var_5 = 1;
        wp::int32* var_6;
        wp::int32 var_7;
        wp::int32 var_8;
        const wp::int32 var_9 = 2;
        wp::int32* var_10;
        wp::int32 var_11;
        wp::int32 var_12;
        const wp::int32 var_13 = 3;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::float32* var_17;
        wp::float32 var_18;
        wp::float32 var_19;
        wp::float32* var_20;
        wp::float32 var_21;
        wp::float32 var_22;
        wp::float32* var_23;
        wp::float32 var_24;
        wp::float32 var_25;
        wp::float32* var_26;
        wp::float32 var_27;
        wp::float32 var_28;
        wp::vec_t<3,wp::float32>* var_29;
        wp::vec_t<3,wp::float32> var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32>* var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32>* var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::vec_t<3,wp::float32>* var_38;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32>* var_41;
        wp::vec_t<3,wp::float32> var_42;
        wp::vec_t<3,wp::float32> var_43;
        wp::vec_t<3,wp::float32>* var_44;
        wp::vec_t<3,wp::float32> var_45;
        wp::vec_t<3,wp::float32> var_46;
        wp::vec_t<3,wp::float32>* var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32>* var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::float32* var_53;
        wp::float32 var_54;
        wp::float32 var_55;
        wp::float32* var_56;
        wp::float32 var_57;
        wp::float32 var_58;
        wp::float32* var_59;
        wp::float32 var_60;
        wp::float32 var_61;
        wp::float32* var_62;
        wp::float32 var_63;
        wp::float32 var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::vec_t<3,wp::float32> var_68;
        wp::vec_t<3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::mat_t<3,3,wp::float32> var_71;
        wp::mat_t<3,3,wp::float32>* var_72;
        wp::mat_t<3,3,wp::float32> var_73;
        wp::mat_t<3,3,wp::float32> var_74;
        wp::float32 var_75;
        const wp::float32 var_76 = 6.0;
        wp::float32 var_77;
        const wp::float32 var_78 = 1.0;
        wp::float32 var_79;
        wp::mat_t<3,3,wp::float32> var_80;
        wp::float32 var_81;
        wp::float32 var_82;
        wp::float32 var_83;
        wp::vec_t<3,wp::float32> var_84;
        wp::float32 var_85;
        wp::float32 var_86;
        wp::float32 var_87;
        wp::vec_t<3,wp::float32> var_88;
        wp::float32 var_89;
        wp::float32 var_90;
        wp::float32 var_91;
        wp::vec_t<3,wp::float32> var_92;
        wp::float32 var_93;
        wp::float32 var_94;
        wp::float32 var_95;
        wp::float32 var_96;
        wp::float32 var_97;
        wp::float32 var_98;
        const wp::float32 var_99 = 0.0;
        bool var_100;
        wp::float32 var_101;
        wp::float32 var_102;
        wp::mat_t<3,3,wp::float32> var_103;
        wp::mat_t<3,3,wp::float32> var_104;
        wp::mat_t<3,3,wp::float32> var_105;
        wp::float32 var_106;
        wp::float32 var_107;
        wp::float32 var_108;
        wp::float32 var_109;
        wp::float32 var_110;
        wp::vec_t<3,wp::float32> var_111;
        wp::float32 var_112;
        wp::float32 var_113;
        wp::float32 var_114;
        wp::vec_t<3,wp::float32> var_115;
        wp::float32 var_116;
        wp::float32 var_117;
        wp::float32 var_118;
        wp::vec_t<3,wp::float32> var_119;
        wp::vec_t<3,wp::float32> var_120;
        wp::vec_t<3,wp::float32> var_121;
        wp::float32 var_122;
        wp::vec_t<3,wp::float32> var_123;
        wp::float32 var_124;
        wp::float32 var_125;
        wp::float32 var_126;
        wp::float32 var_127;
        wp::float32 var_128;
        wp::float32 var_129;
        wp::float32 var_130;
        wp::float32 var_131;
        wp::float32 var_132;
        wp::float32 var_133;
        wp::float32 var_134;
        wp::float32 var_135;
        wp::float32 var_136;
        wp::float32 var_137;
        wp::float32 var_138;
        wp::float32 var_139;
        wp::float32 var_140;
        wp::vec_t<3,wp::float32> var_141;
        wp::vec_t<3,wp::float32> var_142;
        wp::vec_t<3,wp::float32> var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::float32 var_145;
        wp::float32 var_146;
        wp::float32 var_147;
        wp::vec_t<3,wp::float32> var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::vec_t<3,wp::float32> var_150;
        wp::vec_t<3,wp::float32> var_151;
        wp::vec_t<3,wp::float32> var_152;
        wp::vec_t<3,wp::float32> var_153;
        wp::vec_t<3,wp::float32> var_154;
        wp::vec_t<3,wp::float32> var_155;
        wp::vec_t<3,wp::float32> var_156;
        wp::float32 var_157;
        wp::float32 var_158;
        wp::float32 var_159;
        wp::float32 var_160;
        wp::float32 var_161;
        wp::float32 var_162;
        wp::float32 var_163;
        wp::float32 var_164;
        wp::float32 var_165;
        wp::float32 var_166;
        wp::float32 var_167;
        wp::float32 var_168;
        wp::float32 var_169;
        wp::float32 var_170;
        wp::float32 var_171;
        wp::float32 var_172;
        wp::float32 var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<3,wp::float32> var_176;
        wp::vec_t<3,wp::float32> var_177;
        wp::vec_t<3,wp::float32> var_178;
        wp::vec_t<3,wp::float32> var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::vec_t<3,wp::float32> var_182;
        wp::vec_t<3,wp::float32> var_183;
        wp::vec_t<3,wp::float32> var_184;
        wp::vec_t<3,wp::float32> var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::vec_t<3,wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::vec_t<3,wp::float32> var_191;
        wp::vec_t<3,wp::float32> var_192;
        wp::vec_t<3,wp::float32> var_193;
        //---------
        // forward
        // def solve_tetrahedra(                                                                  <L 343>
        // tid = wp.tid()                                                                         <L 355>
        var_0 = builtin_tid1d();
        // i = indices[tid, 0]                                                                    <L 357>
        var_2 = wp::address(var_indices, var_0, var_1);
        var_3 = wp::load(var_2);
        var_4 = wp::copy(var_3);
        // j = indices[tid, 1]                                                                    <L 358>
        var_6 = wp::address(var_indices, var_0, var_5);
        var_7 = wp::load(var_6);
        var_8 = wp::copy(var_7);
        // k = indices[tid, 2]                                                                    <L 359>
        var_10 = wp::address(var_indices, var_0, var_9);
        var_11 = wp::load(var_10);
        var_12 = wp::copy(var_11);
        // l = indices[tid, 3]                                                                    <L 360>
        var_14 = wp::address(var_indices, var_0, var_13);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // act = activation[tid]                                                                  <L 362>
        var_17 = wp::address(var_activation, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // k_mu = materials[tid, 0]                                                               <L 364>
        var_20 = wp::address(var_materials, var_0, var_1);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // k_lambda = materials[tid, 1]                                                           <L 365>
        var_23 = wp::address(var_materials, var_0, var_5);
        var_24 = wp::load(var_23);
        var_25 = wp::copy(var_24);
        // k_damp = materials[tid, 2]                                                             <L 366>
        var_26 = wp::address(var_materials, var_0, var_9);
        var_27 = wp::load(var_26);
        var_28 = wp::copy(var_27);
        // x0 = x[i]                                                                              <L 368>
        var_29 = wp::address(var_x, var_4);
        var_30 = wp::load(var_29);
        var_31 = wp::copy(var_30);
        // x1 = x[j]                                                                              <L 369>
        var_32 = wp::address(var_x, var_8);
        var_33 = wp::load(var_32);
        var_34 = wp::copy(var_33);
        // x2 = x[k]                                                                              <L 370>
        var_35 = wp::address(var_x, var_12);
        var_36 = wp::load(var_35);
        var_37 = wp::copy(var_36);
        // x3 = x[l]                                                                              <L 371>
        var_38 = wp::address(var_x, var_16);
        var_39 = wp::load(var_38);
        var_40 = wp::copy(var_39);
        // v0 = v[i]                                                                              <L 373>
        var_41 = wp::address(var_v, var_4);
        var_42 = wp::load(var_41);
        var_43 = wp::copy(var_42);
        // v1 = v[j]                                                                              <L 374>
        var_44 = wp::address(var_v, var_8);
        var_45 = wp::load(var_44);
        var_46 = wp::copy(var_45);
        // v2 = v[k]                                                                              <L 375>
        var_47 = wp::address(var_v, var_12);
        var_48 = wp::load(var_47);
        var_49 = wp::copy(var_48);
        // v3 = v[l]                                                                              <L 376>
        var_50 = wp::address(var_v, var_16);
        var_51 = wp::load(var_50);
        var_52 = wp::copy(var_51);
        // w0 = inv_mass[i]                                                                       <L 378>
        var_53 = wp::address(var_inv_mass, var_4);
        var_54 = wp::load(var_53);
        var_55 = wp::copy(var_54);
        // w1 = inv_mass[j]                                                                       <L 379>
        var_56 = wp::address(var_inv_mass, var_8);
        var_57 = wp::load(var_56);
        var_58 = wp::copy(var_57);
        // w2 = inv_mass[k]                                                                       <L 380>
        var_59 = wp::address(var_inv_mass, var_12);
        var_60 = wp::load(var_59);
        var_61 = wp::copy(var_60);
        // w3 = inv_mass[l]                                                                       <L 381>
        var_62 = wp::address(var_inv_mass, var_16);
        var_63 = wp::load(var_62);
        var_64 = wp::copy(var_63);
        // x10 = x1 - x0                                                                          <L 383>
        var_65 = wp::sub(var_34, var_31);
        // x20 = x2 - x0                                                                          <L 384>
        var_66 = wp::sub(var_37, var_31);
        // x30 = x3 - x0                                                                          <L 385>
        var_67 = wp::sub(var_40, var_31);
        // v10 = v1 - v0                                                                          <L 387>
        var_68 = wp::sub(var_46, var_43);
        // v20 = v2 - v0                                                                          <L 388>
        var_69 = wp::sub(var_49, var_43);
        // v30 = v3 - v0                                                                          <L 389>
        var_70 = wp::sub(var_52, var_43);
        // Ds = wp.mat33(x10, x20, x30)                                                           <L 391>
        var_71 = wp::mat_t<3,3,wp::float32>(var_65, var_66, var_67);
        // Dm = pose[tid]                                                                         <L 392>
        var_72 = wp::address(var_pose, var_0);
        var_73 = wp::load(var_72);
        var_74 = wp::copy(var_73);
        // inv_rest_volume = wp.determinant(Dm) * 6.0                                             <L 394>
        var_75 = wp::determinant(var_74);
        var_77 = wp::mul(var_75, var_76);
        // rest_volume = 1.0 / inv_rest_volume                                                    <L 395>
        var_79 = wp::div(var_78, var_77);
        // F = Ds * Dm                                                                            <L 398>
        var_80 = wp::mul(var_71, var_74);
        // f1 = wp.vec3(F[0, 0], F[1, 0], F[2, 0])                                                <L 400>
        var_81 = wp::extract(var_80, var_1, var_1);
        var_82 = wp::extract(var_80, var_5, var_1);
        var_83 = wp::extract(var_80, var_9, var_1);
        var_84 = wp::vec_t<3,wp::float32>(var_81, var_82, var_83);
        // f2 = wp.vec3(F[0, 1], F[1, 1], F[2, 1])                                                <L 401>
        var_85 = wp::extract(var_80, var_1, var_5);
        var_86 = wp::extract(var_80, var_5, var_5);
        var_87 = wp::extract(var_80, var_9, var_5);
        var_88 = wp::vec_t<3,wp::float32>(var_85, var_86, var_87);
        // f3 = wp.vec3(F[0, 2], F[1, 2], F[2, 2])                                                <L 402>
        var_89 = wp::extract(var_80, var_1, var_9);
        var_90 = wp::extract(var_80, var_5, var_9);
        var_91 = wp::extract(var_80, var_9, var_9);
        var_92 = wp::vec_t<3,wp::float32>(var_89, var_90, var_91);
        // r_s = wp.sqrt(wp.dot(f1, f1) + wp.dot(f2, f2) + wp.dot(f3, f3))                        <L 419>
        var_93 = wp::dot(var_84, var_84);
        var_94 = wp::dot(var_88, var_88);
        var_95 = wp::add(var_93, var_94);
        var_96 = wp::dot(var_92, var_92);
        var_97 = wp::add(var_95, var_96);
        var_98 = wp::sqrt(var_97);
        // if r_s == 0.0:                                                                         <L 420>
        var_100 = (var_98 == var_99);
        if (var_100) {
            // return                                                                             <L 421>
            return;
        }
        // r_s_inv = 1.0 / r_s                                                                    <L 425>
        var_101 = wp::div(var_78, var_98);
        // C = r_s                                                                                <L 426>
        var_102 = wp::copy(var_98);
        // dCdx = F * wp.transpose(Dm) * r_s_inv                                                  <L 427>
        var_103 = wp::transpose(var_74);
        var_104 = wp::mul(var_80, var_103);
        var_105 = wp::mul(var_104, var_101);
        // alpha = 1.0 + k_mu / k_lambda                                                          <L 428>
        var_106 = wp::div(var_22, var_25);
        var_107 = wp::add(var_78, var_106);
        // grad1 = wp.vec3(dCdx[0, 0], dCdx[1, 0], dCdx[2, 0])                                    <L 443>
        var_108 = wp::extract(var_105, var_1, var_1);
        var_109 = wp::extract(var_105, var_5, var_1);
        var_110 = wp::extract(var_105, var_9, var_1);
        var_111 = wp::vec_t<3,wp::float32>(var_108, var_109, var_110);
        // grad2 = wp.vec3(dCdx[0, 1], dCdx[1, 1], dCdx[2, 1])                                    <L 444>
        var_112 = wp::extract(var_105, var_1, var_5);
        var_113 = wp::extract(var_105, var_5, var_5);
        var_114 = wp::extract(var_105, var_9, var_5);
        var_115 = wp::vec_t<3,wp::float32>(var_112, var_113, var_114);
        // grad3 = wp.vec3(dCdx[0, 2], dCdx[1, 2], dCdx[2, 2])                                    <L 445>
        var_116 = wp::extract(var_105, var_1, var_9);
        var_117 = wp::extract(var_105, var_5, var_9);
        var_118 = wp::extract(var_105, var_9, var_9);
        var_119 = wp::vec_t<3,wp::float32>(var_116, var_117, var_118);
        // grad0 = (grad1 + grad2 + grad3) * (0.0 - 1.0)                                          <L 446>
        var_120 = wp::add(var_111, var_115);
        var_121 = wp::add(var_120, var_119);
        var_122 = wp::sub(var_99, var_78);
        var_123 = wp::mul(var_121, var_122);
        // denom = (                                                                              <L 448>
        // wp.dot(grad0, grad0) * w0 + wp.dot(grad1, grad1) * w1 + wp.dot(grad2, grad2) * w2 + wp.dot(grad3, grad3) * w3       <L 449>
        var_124 = wp::dot(var_123, var_123);
        var_125 = wp::mul(var_124, var_55);
        var_126 = wp::dot(var_111, var_111);
        var_127 = wp::mul(var_126, var_58);
        var_128 = wp::add(var_125, var_127);
        var_129 = wp::dot(var_115, var_115);
        var_130 = wp::mul(var_129, var_61);
        var_131 = wp::add(var_128, var_130);
        var_132 = wp::dot(var_119, var_119);
        var_133 = wp::mul(var_132, var_64);
        var_134 = wp::add(var_131, var_133);
        // multiplier = C / (denom + 1.0 / (k_mu * dt * dt * rest_volume))                        <L 451>
        var_135 = wp::mul(var_22, var_dt);
        var_136 = wp::mul(var_135, var_dt);
        var_137 = wp::mul(var_136, var_79);
        var_138 = wp::div(var_78, var_137);
        var_139 = wp::add(var_134, var_138);
        var_140 = wp::div(var_102, var_139);
        // delta0 = grad0 * multiplier                                                            <L 453>
        var_141 = wp::mul(var_123, var_140);
        // delta1 = grad1 * multiplier                                                            <L 454>
        var_142 = wp::mul(var_111, var_140);
        // delta2 = grad2 * multiplier                                                            <L 455>
        var_143 = wp::mul(var_115, var_140);
        // delta3 = grad3 * multiplier                                                            <L 456>
        var_144 = wp::mul(var_119, var_140);
        // J = wp.determinant(F)                                                                  <L 459>
        var_145 = wp::determinant(var_80);
        // C_vol = J - alpha                                                                      <L 461>
        var_146 = wp::sub(var_145, var_107);
        // s = inv_rest_volume / 6.0                                                              <L 469>
        var_147 = wp::div(var_77, var_76);
        // grad1 = wp.cross(x20, x30) * s                                                         <L 470>
        var_148 = wp::cross(var_66, var_67);
        var_149 = wp::mul(var_148, var_147);
        // grad2 = wp.cross(x30, x10) * s                                                         <L 471>
        var_150 = wp::cross(var_67, var_65);
        var_151 = wp::mul(var_150, var_147);
        // grad3 = wp.cross(x10, x20) * s                                                         <L 472>
        var_152 = wp::cross(var_65, var_66);
        var_153 = wp::mul(var_152, var_147);
        // grad0 = -(grad1 + grad2 + grad3)                                                       <L 473>
        var_154 = wp::add(var_149, var_151);
        var_155 = wp::add(var_154, var_153);
        var_156 = wp::neg(var_155);
        // denom = (                                                                              <L 475>
        // wp.dot(grad0, grad0) * w0 + wp.dot(grad1, grad1) * w1 + wp.dot(grad2, grad2) * w2 + wp.dot(grad3, grad3) * w3       <L 476>
        var_157 = wp::dot(var_156, var_156);
        var_158 = wp::mul(var_157, var_55);
        var_159 = wp::dot(var_149, var_149);
        var_160 = wp::mul(var_159, var_58);
        var_161 = wp::add(var_158, var_160);
        var_162 = wp::dot(var_151, var_151);
        var_163 = wp::mul(var_162, var_61);
        var_164 = wp::add(var_161, var_163);
        var_165 = wp::dot(var_153, var_153);
        var_166 = wp::mul(var_165, var_64);
        var_167 = wp::add(var_164, var_166);
        // multiplier = C_vol / (denom + 1.0 / (k_lambda * dt * dt * rest_volume))                <L 478>
        var_168 = wp::mul(var_25, var_dt);
        var_169 = wp::mul(var_168, var_dt);
        var_170 = wp::mul(var_169, var_79);
        var_171 = wp::div(var_78, var_170);
        var_172 = wp::add(var_167, var_171);
        var_173 = wp::div(var_146, var_172);
        // delta0 += grad0 * multiplier                                                           <L 480>
        var_174 = wp::mul(var_156, var_173);
        var_175 = wp::add(var_141, var_174);
        // delta1 += grad1 * multiplier                                                           <L 481>
        var_176 = wp::mul(var_149, var_173);
        var_177 = wp::add(var_142, var_176);
        // delta2 += grad2 * multiplier                                                           <L 482>
        var_178 = wp::mul(var_151, var_173);
        var_179 = wp::add(var_143, var_178);
        // delta3 += grad3 * multiplier                                                           <L 483>
        var_180 = wp::mul(var_153, var_173);
        var_181 = wp::add(var_144, var_180);
        // wp.atomic_sub(delta, i, delta0 * w0 * relaxation)                                      <L 486>
        var_182 = wp::mul(var_175, var_55);
        var_183 = wp::mul(var_182, var_relaxation);
        var_184 = wp::atomic_sub(var_delta, var_4, var_183);
        // wp.atomic_sub(delta, j, delta1 * w1 * relaxation)                                      <L 487>
        var_185 = wp::mul(var_177, var_58);
        var_186 = wp::mul(var_185, var_relaxation);
        var_187 = wp::atomic_sub(var_delta, var_8, var_186);
        // wp.atomic_sub(delta, k, delta2 * w2 * relaxation)                                      <L 488>
        var_188 = wp::mul(var_179, var_61);
        var_189 = wp::mul(var_188, var_relaxation);
        var_190 = wp::atomic_sub(var_delta, var_12, var_189);
        // wp.atomic_sub(delta, l, delta3 * w3 * relaxation)                                      <L 489>
        var_191 = wp::mul(var_181, var_64);
        var_192 = wp::mul(var_191, var_relaxation);
        var_193 = wp::atomic_sub(var_delta, var_16, var_192);
    }
}

extern "C" __global__ void solve_tetrahedra_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x,
    wp::array_t<wp::vec_t<3,wp::float32>> var_v,
    wp::array_t<wp::float32> var_inv_mass,
    wp::array_t<wp::int32> var_indices,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_pose,
    wp::array_t<wp::float32> var_activation,
    wp::array_t<wp::float32> var_materials,
    wp::float32 var_dt,
    wp::float32 var_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_x,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_v,
    wp::array_t<wp::float32> adj_inv_mass,
    wp::array_t<wp::int32> adj_indices,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_pose,
    wp::array_t<wp::float32> adj_activation,
    wp::array_t<wp::float32> adj_materials,
    wp::float32 adj_dt,
    wp::float32 adj_relaxation,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_delta)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::int32* var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        const wp::int32 var_5 = 1;
        wp::int32* var_6;
        wp::int32 var_7;
        wp::int32 var_8;
        const wp::int32 var_9 = 2;
        wp::int32* var_10;
        wp::int32 var_11;
        wp::int32 var_12;
        const wp::int32 var_13 = 3;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::float32* var_17;
        wp::float32 var_18;
        wp::float32 var_19;
        wp::float32* var_20;
        wp::float32 var_21;
        wp::float32 var_22;
        wp::float32* var_23;
        wp::float32 var_24;
        wp::float32 var_25;
        wp::float32* var_26;
        wp::float32 var_27;
        wp::float32 var_28;
        wp::vec_t<3,wp::float32>* var_29;
        wp::vec_t<3,wp::float32> var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32>* var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32>* var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::vec_t<3,wp::float32>* var_38;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32>* var_41;
        wp::vec_t<3,wp::float32> var_42;
        wp::vec_t<3,wp::float32> var_43;
        wp::vec_t<3,wp::float32>* var_44;
        wp::vec_t<3,wp::float32> var_45;
        wp::vec_t<3,wp::float32> var_46;
        wp::vec_t<3,wp::float32>* var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32>* var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::float32* var_53;
        wp::float32 var_54;
        wp::float32 var_55;
        wp::float32* var_56;
        wp::float32 var_57;
        wp::float32 var_58;
        wp::float32* var_59;
        wp::float32 var_60;
        wp::float32 var_61;
        wp::float32* var_62;
        wp::float32 var_63;
        wp::float32 var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::vec_t<3,wp::float32> var_68;
        wp::vec_t<3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::mat_t<3,3,wp::float32> var_71;
        wp::mat_t<3,3,wp::float32>* var_72;
        wp::mat_t<3,3,wp::float32> var_73;
        wp::mat_t<3,3,wp::float32> var_74;
        wp::float32 var_75;
        const wp::float32 var_76 = 6.0;
        wp::float32 var_77;
        const wp::float32 var_78 = 1.0;
        wp::float32 var_79;
        wp::mat_t<3,3,wp::float32> var_80;
        wp::float32 var_81;
        wp::float32 var_82;
        wp::float32 var_83;
        wp::vec_t<3,wp::float32> var_84;
        wp::float32 var_85;
        wp::float32 var_86;
        wp::float32 var_87;
        wp::vec_t<3,wp::float32> var_88;
        wp::float32 var_89;
        wp::float32 var_90;
        wp::float32 var_91;
        wp::vec_t<3,wp::float32> var_92;
        wp::float32 var_93;
        wp::float32 var_94;
        wp::float32 var_95;
        wp::float32 var_96;
        wp::float32 var_97;
        wp::float32 var_98;
        const wp::float32 var_99 = 0.0;
        bool var_100;
        wp::float32 var_101;
        wp::float32 var_102;
        wp::mat_t<3,3,wp::float32> var_103;
        wp::mat_t<3,3,wp::float32> var_104;
        wp::mat_t<3,3,wp::float32> var_105;
        wp::float32 var_106;
        wp::float32 var_107;
        wp::float32 var_108;
        wp::float32 var_109;
        wp::float32 var_110;
        wp::vec_t<3,wp::float32> var_111;
        wp::float32 var_112;
        wp::float32 var_113;
        wp::float32 var_114;
        wp::vec_t<3,wp::float32> var_115;
        wp::float32 var_116;
        wp::float32 var_117;
        wp::float32 var_118;
        wp::vec_t<3,wp::float32> var_119;
        wp::vec_t<3,wp::float32> var_120;
        wp::vec_t<3,wp::float32> var_121;
        wp::float32 var_122;
        wp::vec_t<3,wp::float32> var_123;
        wp::float32 var_124;
        wp::float32 var_125;
        wp::float32 var_126;
        wp::float32 var_127;
        wp::float32 var_128;
        wp::float32 var_129;
        wp::float32 var_130;
        wp::float32 var_131;
        wp::float32 var_132;
        wp::float32 var_133;
        wp::float32 var_134;
        wp::float32 var_135;
        wp::float32 var_136;
        wp::float32 var_137;
        wp::float32 var_138;
        wp::float32 var_139;
        wp::float32 var_140;
        wp::vec_t<3,wp::float32> var_141;
        wp::vec_t<3,wp::float32> var_142;
        wp::vec_t<3,wp::float32> var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::float32 var_145;
        wp::float32 var_146;
        wp::float32 var_147;
        wp::vec_t<3,wp::float32> var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::vec_t<3,wp::float32> var_150;
        wp::vec_t<3,wp::float32> var_151;
        wp::vec_t<3,wp::float32> var_152;
        wp::vec_t<3,wp::float32> var_153;
        wp::vec_t<3,wp::float32> var_154;
        wp::vec_t<3,wp::float32> var_155;
        wp::vec_t<3,wp::float32> var_156;
        wp::float32 var_157;
        wp::float32 var_158;
        wp::float32 var_159;
        wp::float32 var_160;
        wp::float32 var_161;
        wp::float32 var_162;
        wp::float32 var_163;
        wp::float32 var_164;
        wp::float32 var_165;
        wp::float32 var_166;
        wp::float32 var_167;
        wp::float32 var_168;
        wp::float32 var_169;
        wp::float32 var_170;
        wp::float32 var_171;
        wp::float32 var_172;
        wp::float32 var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<3,wp::float32> var_176;
        wp::vec_t<3,wp::float32> var_177;
        wp::vec_t<3,wp::float32> var_178;
        wp::vec_t<3,wp::float32> var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::vec_t<3,wp::float32> var_182;
        wp::vec_t<3,wp::float32> var_183;
        wp::vec_t<3,wp::float32> var_184;
        wp::vec_t<3,wp::float32> var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::vec_t<3,wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::vec_t<3,wp::float32> var_191;
        wp::vec_t<3,wp::float32> var_192;
        wp::vec_t<3,wp::float32> var_193;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        wp::float32 adj_17 = {};
        wp::float32 adj_18 = {};
        wp::float32 adj_19 = {};
        wp::float32 adj_20 = {};
        wp::float32 adj_21 = {};
        wp::float32 adj_22 = {};
        wp::float32 adj_23 = {};
        wp::float32 adj_24 = {};
        wp::float32 adj_25 = {};
        wp::float32 adj_26 = {};
        wp::float32 adj_27 = {};
        wp::float32 adj_28 = {};
        wp::vec_t<3,wp::float32> adj_29 = {};
        wp::vec_t<3,wp::float32> adj_30 = {};
        wp::vec_t<3,wp::float32> adj_31 = {};
        wp::vec_t<3,wp::float32> adj_32 = {};
        wp::vec_t<3,wp::float32> adj_33 = {};
        wp::vec_t<3,wp::float32> adj_34 = {};
        wp::vec_t<3,wp::float32> adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::vec_t<3,wp::float32> adj_37 = {};
        wp::vec_t<3,wp::float32> adj_38 = {};
        wp::vec_t<3,wp::float32> adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::vec_t<3,wp::float32> adj_41 = {};
        wp::vec_t<3,wp::float32> adj_42 = {};
        wp::vec_t<3,wp::float32> adj_43 = {};
        wp::vec_t<3,wp::float32> adj_44 = {};
        wp::vec_t<3,wp::float32> adj_45 = {};
        wp::vec_t<3,wp::float32> adj_46 = {};
        wp::vec_t<3,wp::float32> adj_47 = {};
        wp::vec_t<3,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        wp::vec_t<3,wp::float32> adj_51 = {};
        wp::vec_t<3,wp::float32> adj_52 = {};
        wp::float32 adj_53 = {};
        wp::float32 adj_54 = {};
        wp::float32 adj_55 = {};
        wp::float32 adj_56 = {};
        wp::float32 adj_57 = {};
        wp::float32 adj_58 = {};
        wp::float32 adj_59 = {};
        wp::float32 adj_60 = {};
        wp::float32 adj_61 = {};
        wp::float32 adj_62 = {};
        wp::float32 adj_63 = {};
        wp::float32 adj_64 = {};
        wp::vec_t<3,wp::float32> adj_65 = {};
        wp::vec_t<3,wp::float32> adj_66 = {};
        wp::vec_t<3,wp::float32> adj_67 = {};
        wp::vec_t<3,wp::float32> adj_68 = {};
        wp::vec_t<3,wp::float32> adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::mat_t<3,3,wp::float32> adj_71 = {};
        wp::mat_t<3,3,wp::float32> adj_72 = {};
        wp::mat_t<3,3,wp::float32> adj_73 = {};
        wp::mat_t<3,3,wp::float32> adj_74 = {};
        wp::float32 adj_75 = {};
        wp::float32 adj_76 = {};
        wp::float32 adj_77 = {};
        wp::float32 adj_78 = {};
        wp::float32 adj_79 = {};
        wp::mat_t<3,3,wp::float32> adj_80 = {};
        wp::float32 adj_81 = {};
        wp::float32 adj_82 = {};
        wp::float32 adj_83 = {};
        wp::vec_t<3,wp::float32> adj_84 = {};
        wp::float32 adj_85 = {};
        wp::float32 adj_86 = {};
        wp::float32 adj_87 = {};
        wp::vec_t<3,wp::float32> adj_88 = {};
        wp::float32 adj_89 = {};
        wp::float32 adj_90 = {};
        wp::float32 adj_91 = {};
        wp::vec_t<3,wp::float32> adj_92 = {};
        wp::float32 adj_93 = {};
        wp::float32 adj_94 = {};
        wp::float32 adj_95 = {};
        wp::float32 adj_96 = {};
        wp::float32 adj_97 = {};
        wp::float32 adj_98 = {};
        wp::float32 adj_99 = {};
        bool adj_100 = {};
        wp::float32 adj_101 = {};
        wp::float32 adj_102 = {};
        wp::mat_t<3,3,wp::float32> adj_103 = {};
        wp::mat_t<3,3,wp::float32> adj_104 = {};
        wp::mat_t<3,3,wp::float32> adj_105 = {};
        wp::float32 adj_106 = {};
        wp::float32 adj_107 = {};
        wp::float32 adj_108 = {};
        wp::float32 adj_109 = {};
        wp::float32 adj_110 = {};
        wp::vec_t<3,wp::float32> adj_111 = {};
        wp::float32 adj_112 = {};
        wp::float32 adj_113 = {};
        wp::float32 adj_114 = {};
        wp::vec_t<3,wp::float32> adj_115 = {};
        wp::float32 adj_116 = {};
        wp::float32 adj_117 = {};
        wp::float32 adj_118 = {};
        wp::vec_t<3,wp::float32> adj_119 = {};
        wp::vec_t<3,wp::float32> adj_120 = {};
        wp::vec_t<3,wp::float32> adj_121 = {};
        wp::float32 adj_122 = {};
        wp::vec_t<3,wp::float32> adj_123 = {};
        wp::float32 adj_124 = {};
        wp::float32 adj_125 = {};
        wp::float32 adj_126 = {};
        wp::float32 adj_127 = {};
        wp::float32 adj_128 = {};
        wp::float32 adj_129 = {};
        wp::float32 adj_130 = {};
        wp::float32 adj_131 = {};
        wp::float32 adj_132 = {};
        wp::float32 adj_133 = {};
        wp::float32 adj_134 = {};
        wp::float32 adj_135 = {};
        wp::float32 adj_136 = {};
        wp::float32 adj_137 = {};
        wp::float32 adj_138 = {};
        wp::float32 adj_139 = {};
        wp::float32 adj_140 = {};
        wp::vec_t<3,wp::float32> adj_141 = {};
        wp::vec_t<3,wp::float32> adj_142 = {};
        wp::vec_t<3,wp::float32> adj_143 = {};
        wp::vec_t<3,wp::float32> adj_144 = {};
        wp::float32 adj_145 = {};
        wp::float32 adj_146 = {};
        wp::float32 adj_147 = {};
        wp::vec_t<3,wp::float32> adj_148 = {};
        wp::vec_t<3,wp::float32> adj_149 = {};
        wp::vec_t<3,wp::float32> adj_150 = {};
        wp::vec_t<3,wp::float32> adj_151 = {};
        wp::vec_t<3,wp::float32> adj_152 = {};
        wp::vec_t<3,wp::float32> adj_153 = {};
        wp::vec_t<3,wp::float32> adj_154 = {};
        wp::vec_t<3,wp::float32> adj_155 = {};
        wp::vec_t<3,wp::float32> adj_156 = {};
        wp::float32 adj_157 = {};
        wp::float32 adj_158 = {};
        wp::float32 adj_159 = {};
        wp::float32 adj_160 = {};
        wp::float32 adj_161 = {};
        wp::float32 adj_162 = {};
        wp::float32 adj_163 = {};
        wp::float32 adj_164 = {};
        wp::float32 adj_165 = {};
        wp::float32 adj_166 = {};
        wp::float32 adj_167 = {};
        wp::float32 adj_168 = {};
        wp::float32 adj_169 = {};
        wp::float32 adj_170 = {};
        wp::float32 adj_171 = {};
        wp::float32 adj_172 = {};
        wp::float32 adj_173 = {};
        wp::vec_t<3,wp::float32> adj_174 = {};
        wp::vec_t<3,wp::float32> adj_175 = {};
        wp::vec_t<3,wp::float32> adj_176 = {};
        wp::vec_t<3,wp::float32> adj_177 = {};
        wp::vec_t<3,wp::float32> adj_178 = {};
        wp::vec_t<3,wp::float32> adj_179 = {};
        wp::vec_t<3,wp::float32> adj_180 = {};
        wp::vec_t<3,wp::float32> adj_181 = {};
        wp::vec_t<3,wp::float32> adj_182 = {};
        wp::vec_t<3,wp::float32> adj_183 = {};
        wp::vec_t<3,wp::float32> adj_184 = {};
        wp::vec_t<3,wp::float32> adj_185 = {};
        wp::vec_t<3,wp::float32> adj_186 = {};
        wp::vec_t<3,wp::float32> adj_187 = {};
        wp::vec_t<3,wp::float32> adj_188 = {};
        wp::vec_t<3,wp::float32> adj_189 = {};
        wp::vec_t<3,wp::float32> adj_190 = {};
        wp::vec_t<3,wp::float32> adj_191 = {};
        wp::vec_t<3,wp::float32> adj_192 = {};
        wp::vec_t<3,wp::float32> adj_193 = {};
        //---------
        // forward
        // def solve_tetrahedra(                                                                  <L 343>
        // tid = wp.tid()                                                                         <L 355>
        var_0 = builtin_tid1d();
        // i = indices[tid, 0]                                                                    <L 357>
        var_2 = wp::address(var_indices, var_0, var_1);
        var_3 = wp::load(var_2);
        var_4 = wp::copy(var_3);
        // j = indices[tid, 1]                                                                    <L 358>
        var_6 = wp::address(var_indices, var_0, var_5);
        var_7 = wp::load(var_6);
        var_8 = wp::copy(var_7);
        // k = indices[tid, 2]                                                                    <L 359>
        var_10 = wp::address(var_indices, var_0, var_9);
        var_11 = wp::load(var_10);
        var_12 = wp::copy(var_11);
        // l = indices[tid, 3]                                                                    <L 360>
        var_14 = wp::address(var_indices, var_0, var_13);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // act = activation[tid]                                                                  <L 362>
        var_17 = wp::address(var_activation, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // k_mu = materials[tid, 0]                                                               <L 364>
        var_20 = wp::address(var_materials, var_0, var_1);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // k_lambda = materials[tid, 1]                                                           <L 365>
        var_23 = wp::address(var_materials, var_0, var_5);
        var_24 = wp::load(var_23);
        var_25 = wp::copy(var_24);
        // k_damp = materials[tid, 2]                                                             <L 366>
        var_26 = wp::address(var_materials, var_0, var_9);
        var_27 = wp::load(var_26);
        var_28 = wp::copy(var_27);
        // x0 = x[i]                                                                              <L 368>
        var_29 = wp::address(var_x, var_4);
        var_30 = wp::load(var_29);
        var_31 = wp::copy(var_30);
        // x1 = x[j]                                                                              <L 369>
        var_32 = wp::address(var_x, var_8);
        var_33 = wp::load(var_32);
        var_34 = wp::copy(var_33);
        // x2 = x[k]                                                                              <L 370>
        var_35 = wp::address(var_x, var_12);
        var_36 = wp::load(var_35);
        var_37 = wp::copy(var_36);
        // x3 = x[l]                                                                              <L 371>
        var_38 = wp::address(var_x, var_16);
        var_39 = wp::load(var_38);
        var_40 = wp::copy(var_39);
        // v0 = v[i]                                                                              <L 373>
        var_41 = wp::address(var_v, var_4);
        var_42 = wp::load(var_41);
        var_43 = wp::copy(var_42);
        // v1 = v[j]                                                                              <L 374>
        var_44 = wp::address(var_v, var_8);
        var_45 = wp::load(var_44);
        var_46 = wp::copy(var_45);
        // v2 = v[k]                                                                              <L 375>
        var_47 = wp::address(var_v, var_12);
        var_48 = wp::load(var_47);
        var_49 = wp::copy(var_48);
        // v3 = v[l]                                                                              <L 376>
        var_50 = wp::address(var_v, var_16);
        var_51 = wp::load(var_50);
        var_52 = wp::copy(var_51);
        // w0 = inv_mass[i]                                                                       <L 378>
        var_53 = wp::address(var_inv_mass, var_4);
        var_54 = wp::load(var_53);
        var_55 = wp::copy(var_54);
        // w1 = inv_mass[j]                                                                       <L 379>
        var_56 = wp::address(var_inv_mass, var_8);
        var_57 = wp::load(var_56);
        var_58 = wp::copy(var_57);
        // w2 = inv_mass[k]                                                                       <L 380>
        var_59 = wp::address(var_inv_mass, var_12);
        var_60 = wp::load(var_59);
        var_61 = wp::copy(var_60);
        // w3 = inv_mass[l]                                                                       <L 381>
        var_62 = wp::address(var_inv_mass, var_16);
        var_63 = wp::load(var_62);
        var_64 = wp::copy(var_63);
        // x10 = x1 - x0                                                                          <L 383>
        var_65 = wp::sub(var_34, var_31);
        // x20 = x2 - x0                                                                          <L 384>
        var_66 = wp::sub(var_37, var_31);
        // x30 = x3 - x0                                                                          <L 385>
        var_67 = wp::sub(var_40, var_31);
        // v10 = v1 - v0                                                                          <L 387>
        var_68 = wp::sub(var_46, var_43);
        // v20 = v2 - v0                                                                          <L 388>
        var_69 = wp::sub(var_49, var_43);
        // v30 = v3 - v0                                                                          <L 389>
        var_70 = wp::sub(var_52, var_43);
        // Ds = wp.mat33(x10, x20, x30)                                                           <L 391>
        var_71 = wp::mat_t<3,3,wp::float32>(var_65, var_66, var_67);
        // Dm = pose[tid]                                                                         <L 392>
        var_72 = wp::address(var_pose, var_0);
        var_73 = wp::load(var_72);
        var_74 = wp::copy(var_73);
        // inv_rest_volume = wp.determinant(Dm) * 6.0                                             <L 394>
        var_75 = wp::determinant(var_74);
        var_77 = wp::mul(var_75, var_76);
        // rest_volume = 1.0 / inv_rest_volume                                                    <L 395>
        var_79 = wp::div(var_78, var_77);
        // F = Ds * Dm                                                                            <L 398>
        var_80 = wp::mul(var_71, var_74);
        // f1 = wp.vec3(F[0, 0], F[1, 0], F[2, 0])                                                <L 400>
        var_81 = wp::extract(var_80, var_1, var_1);
        var_82 = wp::extract(var_80, var_5, var_1);
        var_83 = wp::extract(var_80, var_9, var_1);
        var_84 = wp::vec_t<3,wp::float32>(var_81, var_82, var_83);
        // f2 = wp.vec3(F[0, 1], F[1, 1], F[2, 1])                                                <L 401>
        var_85 = wp::extract(var_80, var_1, var_5);
        var_86 = wp::extract(var_80, var_5, var_5);
        var_87 = wp::extract(var_80, var_9, var_5);
        var_88 = wp::vec_t<3,wp::float32>(var_85, var_86, var_87);
        // f3 = wp.vec3(F[0, 2], F[1, 2], F[2, 2])                                                <L 402>
        var_89 = wp::extract(var_80, var_1, var_9);
        var_90 = wp::extract(var_80, var_5, var_9);
        var_91 = wp::extract(var_80, var_9, var_9);
        var_92 = wp::vec_t<3,wp::float32>(var_89, var_90, var_91);
        // r_s = wp.sqrt(wp.dot(f1, f1) + wp.dot(f2, f2) + wp.dot(f3, f3))                        <L 419>
        var_93 = wp::dot(var_84, var_84);
        var_94 = wp::dot(var_88, var_88);
        var_95 = wp::add(var_93, var_94);
        var_96 = wp::dot(var_92, var_92);
        var_97 = wp::add(var_95, var_96);
        var_98 = wp::sqrt(var_97);
        // if r_s == 0.0:                                                                         <L 420>
        var_100 = (var_98 == var_99);
        if (var_100) {
            // return                                                                             <L 421>
            goto label0;
        }
        // r_s_inv = 1.0 / r_s                                                                    <L 425>
        var_101 = wp::div(var_78, var_98);
        // C = r_s                                                                                <L 426>
        var_102 = wp::copy(var_98);
        // dCdx = F * wp.transpose(Dm) * r_s_inv                                                  <L 427>
        var_103 = wp::transpose(var_74);
        var_104 = wp::mul(var_80, var_103);
        var_105 = wp::mul(var_104, var_101);
        // alpha = 1.0 + k_mu / k_lambda                                                          <L 428>
        var_106 = wp::div(var_22, var_25);
        var_107 = wp::add(var_78, var_106);
        // grad1 = wp.vec3(dCdx[0, 0], dCdx[1, 0], dCdx[2, 0])                                    <L 443>
        var_108 = wp::extract(var_105, var_1, var_1);
        var_109 = wp::extract(var_105, var_5, var_1);
        var_110 = wp::extract(var_105, var_9, var_1);
        var_111 = wp::vec_t<3,wp::float32>(var_108, var_109, var_110);
        // grad2 = wp.vec3(dCdx[0, 1], dCdx[1, 1], dCdx[2, 1])                                    <L 444>
        var_112 = wp::extract(var_105, var_1, var_5);
        var_113 = wp::extract(var_105, var_5, var_5);
        var_114 = wp::extract(var_105, var_9, var_5);
        var_115 = wp::vec_t<3,wp::float32>(var_112, var_113, var_114);
        // grad3 = wp.vec3(dCdx[0, 2], dCdx[1, 2], dCdx[2, 2])                                    <L 445>
        var_116 = wp::extract(var_105, var_1, var_9);
        var_117 = wp::extract(var_105, var_5, var_9);
        var_118 = wp::extract(var_105, var_9, var_9);
        var_119 = wp::vec_t<3,wp::float32>(var_116, var_117, var_118);
        // grad0 = (grad1 + grad2 + grad3) * (0.0 - 1.0)                                          <L 446>
        var_120 = wp::add(var_111, var_115);
        var_121 = wp::add(var_120, var_119);
        var_122 = wp::sub(var_99, var_78);
        var_123 = wp::mul(var_121, var_122);
        // denom = (                                                                              <L 448>
        // wp.dot(grad0, grad0) * w0 + wp.dot(grad1, grad1) * w1 + wp.dot(grad2, grad2) * w2 + wp.dot(grad3, grad3) * w3       <L 449>
        var_124 = wp::dot(var_123, var_123);
        var_125 = wp::mul(var_124, var_55);
        var_126 = wp::dot(var_111, var_111);
        var_127 = wp::mul(var_126, var_58);
        var_128 = wp::add(var_125, var_127);
        var_129 = wp::dot(var_115, var_115);
        var_130 = wp::mul(var_129, var_61);
        var_131 = wp::add(var_128, var_130);
        var_132 = wp::dot(var_119, var_119);
        var_133 = wp::mul(var_132, var_64);
        var_134 = wp::add(var_131, var_133);
        // multiplier = C / (denom + 1.0 / (k_mu * dt * dt * rest_volume))                        <L 451>
        var_135 = wp::mul(var_22, var_dt);
        var_136 = wp::mul(var_135, var_dt);
        var_137 = wp::mul(var_136, var_79);
        var_138 = wp::div(var_78, var_137);
        var_139 = wp::add(var_134, var_138);
        var_140 = wp::div(var_102, var_139);
        // delta0 = grad0 * multiplier                                                            <L 453>
        var_141 = wp::mul(var_123, var_140);
        // delta1 = grad1 * multiplier                                                            <L 454>
        var_142 = wp::mul(var_111, var_140);
        // delta2 = grad2 * multiplier                                                            <L 455>
        var_143 = wp::mul(var_115, var_140);
        // delta3 = grad3 * multiplier                                                            <L 456>
        var_144 = wp::mul(var_119, var_140);
        // J = wp.determinant(F)                                                                  <L 459>
        var_145 = wp::determinant(var_80);
        // C_vol = J - alpha                                                                      <L 461>
        var_146 = wp::sub(var_145, var_107);
        // s = inv_rest_volume / 6.0                                                              <L 469>
        var_147 = wp::div(var_77, var_76);
        // grad1 = wp.cross(x20, x30) * s                                                         <L 470>
        var_148 = wp::cross(var_66, var_67);
        var_149 = wp::mul(var_148, var_147);
        // grad2 = wp.cross(x30, x10) * s                                                         <L 471>
        var_150 = wp::cross(var_67, var_65);
        var_151 = wp::mul(var_150, var_147);
        // grad3 = wp.cross(x10, x20) * s                                                         <L 472>
        var_152 = wp::cross(var_65, var_66);
        var_153 = wp::mul(var_152, var_147);
        // grad0 = -(grad1 + grad2 + grad3)                                                       <L 473>
        var_154 = wp::add(var_149, var_151);
        var_155 = wp::add(var_154, var_153);
        var_156 = wp::neg(var_155);
        // denom = (                                                                              <L 475>
        // wp.dot(grad0, grad0) * w0 + wp.dot(grad1, grad1) * w1 + wp.dot(grad2, grad2) * w2 + wp.dot(grad3, grad3) * w3       <L 476>
        var_157 = wp::dot(var_156, var_156);
        var_158 = wp::mul(var_157, var_55);
        var_159 = wp::dot(var_149, var_149);
        var_160 = wp::mul(var_159, var_58);
        var_161 = wp::add(var_158, var_160);
        var_162 = wp::dot(var_151, var_151);
        var_163 = wp::mul(var_162, var_61);
        var_164 = wp::add(var_161, var_163);
        var_165 = wp::dot(var_153, var_153);
        var_166 = wp::mul(var_165, var_64);
        var_167 = wp::add(var_164, var_166);
        // multiplier = C_vol / (denom + 1.0 / (k_lambda * dt * dt * rest_volume))                <L 478>
        var_168 = wp::mul(var_25, var_dt);
        var_169 = wp::mul(var_168, var_dt);
        var_170 = wp::mul(var_169, var_79);
        var_171 = wp::div(var_78, var_170);
        var_172 = wp::add(var_167, var_171);
        var_173 = wp::div(var_146, var_172);
        // delta0 += grad0 * multiplier                                                           <L 480>
        var_174 = wp::mul(var_156, var_173);
        var_175 = wp::add(var_141, var_174);
        // delta1 += grad1 * multiplier                                                           <L 481>
        var_176 = wp::mul(var_149, var_173);
        var_177 = wp::add(var_142, var_176);
        // delta2 += grad2 * multiplier                                                           <L 482>
        var_178 = wp::mul(var_151, var_173);
        var_179 = wp::add(var_143, var_178);
        // delta3 += grad3 * multiplier                                                           <L 483>
        var_180 = wp::mul(var_153, var_173);
        var_181 = wp::add(var_144, var_180);
        // wp.atomic_sub(delta, i, delta0 * w0 * relaxation)                                      <L 486>
        var_182 = wp::mul(var_175, var_55);
        var_183 = wp::mul(var_182, var_relaxation);
        // var_184 = wp::atomic_sub(var_delta, var_4, var_183);
        // wp.atomic_sub(delta, j, delta1 * w1 * relaxation)                                      <L 487>
        var_185 = wp::mul(var_177, var_58);
        var_186 = wp::mul(var_185, var_relaxation);
        // var_187 = wp::atomic_sub(var_delta, var_8, var_186);
        // wp.atomic_sub(delta, k, delta2 * w2 * relaxation)                                      <L 488>
        var_188 = wp::mul(var_179, var_61);
        var_189 = wp::mul(var_188, var_relaxation);
        // var_190 = wp::atomic_sub(var_delta, var_12, var_189);
        // wp.atomic_sub(delta, l, delta3 * w3 * relaxation)                                      <L 489>
        var_191 = wp::mul(var_181, var_64);
        var_192 = wp::mul(var_191, var_relaxation);
        // var_193 = wp::atomic_sub(var_delta, var_16, var_192);
        //---------
        // reverse
        wp::adj_atomic_sub(var_delta, var_16, var_192, adj_delta, adj_16, adj_192, adj_193);
        wp::adj_mul(var_191, var_relaxation, adj_191, adj_relaxation, adj_192);
        wp::adj_mul(var_181, var_64, adj_181, adj_64, adj_191);
        // adj: wp.atomic_sub(delta, l, delta3 * w3 * relaxation)                                 <L 489>
        wp::adj_atomic_sub(var_delta, var_12, var_189, adj_delta, adj_12, adj_189, adj_190);
        wp::adj_mul(var_188, var_relaxation, adj_188, adj_relaxation, adj_189);
        wp::adj_mul(var_179, var_61, adj_179, adj_61, adj_188);
        // adj: wp.atomic_sub(delta, k, delta2 * w2 * relaxation)                                 <L 488>
        wp::adj_atomic_sub(var_delta, var_8, var_186, adj_delta, adj_8, adj_186, adj_187);
        wp::adj_mul(var_185, var_relaxation, adj_185, adj_relaxation, adj_186);
        wp::adj_mul(var_177, var_58, adj_177, adj_58, adj_185);
        // adj: wp.atomic_sub(delta, j, delta1 * w1 * relaxation)                                 <L 487>
        wp::adj_atomic_sub(var_delta, var_4, var_183, adj_delta, adj_4, adj_183, adj_184);
        wp::adj_mul(var_182, var_relaxation, adj_182, adj_relaxation, adj_183);
        wp::adj_mul(var_175, var_55, adj_175, adj_55, adj_182);
        // adj: wp.atomic_sub(delta, i, delta0 * w0 * relaxation)                                 <L 486>
        wp::adj_add(var_144, var_180, adj_144, adj_180, adj_181);
        wp::adj_mul(var_153, var_173, adj_153, adj_173, adj_180);
        // adj: delta3 += grad3 * multiplier                                                      <L 483>
        wp::adj_add(var_143, var_178, adj_143, adj_178, adj_179);
        wp::adj_mul(var_151, var_173, adj_151, adj_173, adj_178);
        // adj: delta2 += grad2 * multiplier                                                      <L 482>
        wp::adj_add(var_142, var_176, adj_142, adj_176, adj_177);
        wp::adj_mul(var_149, var_173, adj_149, adj_173, adj_176);
        // adj: delta1 += grad1 * multiplier                                                      <L 481>
        wp::adj_add(var_141, var_174, adj_141, adj_174, adj_175);
        wp::adj_mul(var_156, var_173, adj_156, adj_173, adj_174);
        // adj: delta0 += grad0 * multiplier                                                      <L 480>
        wp::adj_div(var_146, var_172, var_173, adj_146, adj_172, adj_173);
        wp::adj_add(var_167, var_171, adj_167, adj_171, adj_172);
        wp::adj_div(var_78, var_170, var_171, adj_78, adj_170, adj_171);
        wp::adj_mul(var_169, var_79, adj_169, adj_79, adj_170);
        wp::adj_mul(var_168, var_dt, adj_168, adj_dt, adj_169);
        wp::adj_mul(var_25, var_dt, adj_25, adj_dt, adj_168);
        // adj: multiplier = C_vol / (denom + 1.0 / (k_lambda * dt * dt * rest_volume))           <L 478>
        wp::adj_add(var_164, var_166, adj_164, adj_166, adj_167);
        wp::adj_mul(var_165, var_64, adj_165, adj_64, adj_166);
        wp::adj_dot(var_153, var_153, adj_153, adj_153, adj_165);
        wp::adj_add(var_161, var_163, adj_161, adj_163, adj_164);
        wp::adj_mul(var_162, var_61, adj_162, adj_61, adj_163);
        wp::adj_dot(var_151, var_151, adj_151, adj_151, adj_162);
        wp::adj_add(var_158, var_160, adj_158, adj_160, adj_161);
        wp::adj_mul(var_159, var_58, adj_159, adj_58, adj_160);
        wp::adj_dot(var_149, var_149, adj_149, adj_149, adj_159);
        wp::adj_mul(var_157, var_55, adj_157, adj_55, adj_158);
        wp::adj_dot(var_156, var_156, adj_156, adj_156, adj_157);
        // adj: wp.dot(grad0, grad0) * w0 + wp.dot(grad1, grad1) * w1 + wp.dot(grad2, grad2) * w2 + wp.dot(grad3, grad3) * w3  <L 476>
        // adj: denom = (                                                                         <L 475>
        wp::adj_neg(var_155, adj_155, adj_156);
        wp::adj_add(var_154, var_153, adj_154, adj_153, adj_155);
        wp::adj_add(var_149, var_151, adj_149, adj_151, adj_154);
        // adj: grad0 = -(grad1 + grad2 + grad3)                                                  <L 473>
        wp::adj_mul(var_152, var_147, adj_152, adj_147, adj_153);
        wp::adj_cross(var_65, var_66, adj_65, adj_66, adj_152);
        // adj: grad3 = wp.cross(x10, x20) * s                                                    <L 472>
        wp::adj_mul(var_150, var_147, adj_150, adj_147, adj_151);
        wp::adj_cross(var_67, var_65, adj_67, adj_65, adj_150);
        // adj: grad2 = wp.cross(x30, x10) * s                                                    <L 471>
        wp::adj_mul(var_148, var_147, adj_148, adj_147, adj_149);
        wp::adj_cross(var_66, var_67, adj_66, adj_67, adj_148);
        // adj: grad1 = wp.cross(x20, x30) * s                                                    <L 470>
        wp::adj_div(var_77, var_76, var_147, adj_77, adj_76, adj_147);
        // adj: s = inv_rest_volume / 6.0                                                         <L 469>
        wp::adj_sub(var_145, var_107, adj_145, adj_107, adj_146);
        // adj: C_vol = J - alpha                                                                 <L 461>
        wp::adj_determinant(var_80, adj_80, adj_145);
        // adj: J = wp.determinant(F)                                                             <L 459>
        wp::adj_mul(var_119, var_140, adj_119, adj_140, adj_144);
        // adj: delta3 = grad3 * multiplier                                                       <L 456>
        wp::adj_mul(var_115, var_140, adj_115, adj_140, adj_143);
        // adj: delta2 = grad2 * multiplier                                                       <L 455>
        wp::adj_mul(var_111, var_140, adj_111, adj_140, adj_142);
        // adj: delta1 = grad1 * multiplier                                                       <L 454>
        wp::adj_mul(var_123, var_140, adj_123, adj_140, adj_141);
        // adj: delta0 = grad0 * multiplier                                                       <L 453>
        wp::adj_div(var_102, var_139, var_140, adj_102, adj_139, adj_140);
        wp::adj_add(var_134, var_138, adj_134, adj_138, adj_139);
        wp::adj_div(var_78, var_137, var_138, adj_78, adj_137, adj_138);
        wp::adj_mul(var_136, var_79, adj_136, adj_79, adj_137);
        wp::adj_mul(var_135, var_dt, adj_135, adj_dt, adj_136);
        wp::adj_mul(var_22, var_dt, adj_22, adj_dt, adj_135);
        // adj: multiplier = C / (denom + 1.0 / (k_mu * dt * dt * rest_volume))                   <L 451>
        wp::adj_add(var_131, var_133, adj_131, adj_133, adj_134);
        wp::adj_mul(var_132, var_64, adj_132, adj_64, adj_133);
        wp::adj_dot(var_119, var_119, adj_119, adj_119, adj_132);
        wp::adj_add(var_128, var_130, adj_128, adj_130, adj_131);
        wp::adj_mul(var_129, var_61, adj_129, adj_61, adj_130);
        wp::adj_dot(var_115, var_115, adj_115, adj_115, adj_129);
        wp::adj_add(var_125, var_127, adj_125, adj_127, adj_128);
        wp::adj_mul(var_126, var_58, adj_126, adj_58, adj_127);
        wp::adj_dot(var_111, var_111, adj_111, adj_111, adj_126);
        wp::adj_mul(var_124, var_55, adj_124, adj_55, adj_125);
        wp::adj_dot(var_123, var_123, adj_123, adj_123, adj_124);
        // adj: wp.dot(grad0, grad0) * w0 + wp.dot(grad1, grad1) * w1 + wp.dot(grad2, grad2) * w2 + wp.dot(grad3, grad3) * w3  <L 449>
        // adj: denom = (                                                                         <L 448>
        wp::adj_mul(var_121, var_122, adj_121, adj_122, adj_123);
        wp::adj_sub(var_99, var_78, adj_99, adj_78, adj_122);
        wp::adj_add(var_120, var_119, adj_120, adj_119, adj_121);
        wp::adj_add(var_111, var_115, adj_111, adj_115, adj_120);
        // adj: grad0 = (grad1 + grad2 + grad3) * (0.0 - 1.0)                                     <L 446>
        wp::adj_vec_t(var_116, var_117, var_118, adj_116, adj_117, adj_118, adj_119);
        wp::adj_extract(var_105, var_9, var_9, adj_105, adj_9, adj_9, adj_118);
        wp::adj_extract(var_105, var_5, var_9, adj_105, adj_5, adj_9, adj_117);
        wp::adj_extract(var_105, var_1, var_9, adj_105, adj_1, adj_9, adj_116);
        // adj: grad3 = wp.vec3(dCdx[0, 2], dCdx[1, 2], dCdx[2, 2])                               <L 445>
        wp::adj_vec_t(var_112, var_113, var_114, adj_112, adj_113, adj_114, adj_115);
        wp::adj_extract(var_105, var_9, var_5, adj_105, adj_9, adj_5, adj_114);
        wp::adj_extract(var_105, var_5, var_5, adj_105, adj_5, adj_5, adj_113);
        wp::adj_extract(var_105, var_1, var_5, adj_105, adj_1, adj_5, adj_112);
        // adj: grad2 = wp.vec3(dCdx[0, 1], dCdx[1, 1], dCdx[2, 1])                               <L 444>
        wp::adj_vec_t(var_108, var_109, var_110, adj_108, adj_109, adj_110, adj_111);
        wp::adj_extract(var_105, var_9, var_1, adj_105, adj_9, adj_1, adj_110);
        wp::adj_extract(var_105, var_5, var_1, adj_105, adj_5, adj_1, adj_109);
        wp::adj_extract(var_105, var_1, var_1, adj_105, adj_1, adj_1, adj_108);
        // adj: grad1 = wp.vec3(dCdx[0, 0], dCdx[1, 0], dCdx[2, 0])                               <L 443>
        wp::adj_add(var_78, var_106, adj_78, adj_106, adj_107);
        wp::adj_div(var_22, var_25, var_106, adj_22, adj_25, adj_106);
        // adj: alpha = 1.0 + k_mu / k_lambda                                                     <L 428>
        wp::adj_mul(var_104, var_101, adj_104, adj_101, adj_105);
        wp::adj_mul(var_80, var_103, adj_80, adj_103, adj_104);
        wp::adj_transpose(var_74, adj_74, adj_103);
        // adj: dCdx = F * wp.transpose(Dm) * r_s_inv                                             <L 427>
        wp::adj_copy(var_98, adj_98, adj_102);
        // adj: C = r_s                                                                           <L 426>
        wp::adj_div(var_78, var_98, var_101, adj_78, adj_98, adj_101);
        // adj: r_s_inv = 1.0 / r_s                                                               <L 425>
        if (var_100) {
            label0:;
            // adj: return                                                                        <L 421>
        }
        // adj: if r_s == 0.0:                                                                    <L 420>
        wp::adj_sqrt(var_97, var_98, adj_97, adj_98);
        wp::adj_add(var_95, var_96, adj_95, adj_96, adj_97);
        wp::adj_dot(var_92, var_92, adj_92, adj_92, adj_96);
        wp::adj_add(var_93, var_94, adj_93, adj_94, adj_95);
        wp::adj_dot(var_88, var_88, adj_88, adj_88, adj_94);
        wp::adj_dot(var_84, var_84, adj_84, adj_84, adj_93);
        // adj: r_s = wp.sqrt(wp.dot(f1, f1) + wp.dot(f2, f2) + wp.dot(f3, f3))                   <L 419>
        wp::adj_vec_t(var_89, var_90, var_91, adj_89, adj_90, adj_91, adj_92);
        wp::adj_extract(var_80, var_9, var_9, adj_80, adj_9, adj_9, adj_91);
        wp::adj_extract(var_80, var_5, var_9, adj_80, adj_5, adj_9, adj_90);
        wp::adj_extract(var_80, var_1, var_9, adj_80, adj_1, adj_9, adj_89);
        // adj: f3 = wp.vec3(F[0, 2], F[1, 2], F[2, 2])                                           <L 402>
        wp::adj_vec_t(var_85, var_86, var_87, adj_85, adj_86, adj_87, adj_88);
        wp::adj_extract(var_80, var_9, var_5, adj_80, adj_9, adj_5, adj_87);
        wp::adj_extract(var_80, var_5, var_5, adj_80, adj_5, adj_5, adj_86);
        wp::adj_extract(var_80, var_1, var_5, adj_80, adj_1, adj_5, adj_85);
        // adj: f2 = wp.vec3(F[0, 1], F[1, 1], F[2, 1])                                           <L 401>
        wp::adj_vec_t(var_81, var_82, var_83, adj_81, adj_82, adj_83, adj_84);
        wp::adj_extract(var_80, var_9, var_1, adj_80, adj_9, adj_1, adj_83);
        wp::adj_extract(var_80, var_5, var_1, adj_80, adj_5, adj_1, adj_82);
        wp::adj_extract(var_80, var_1, var_1, adj_80, adj_1, adj_1, adj_81);
        // adj: f1 = wp.vec3(F[0, 0], F[1, 0], F[2, 0])                                           <L 400>
        wp::adj_mul(var_71, var_74, adj_71, adj_74, adj_80);
        // adj: F = Ds * Dm                                                                       <L 398>
        wp::adj_div(var_78, var_77, var_79, adj_78, adj_77, adj_79);
        // adj: rest_volume = 1.0 / inv_rest_volume                                               <L 395>
        wp::adj_mul(var_75, var_76, adj_75, adj_76, adj_77);
        wp::adj_determinant(var_74, adj_74, adj_75);
        // adj: inv_rest_volume = wp.determinant(Dm) * 6.0                                        <L 394>
        wp::adj_copy(var_73, adj_72, adj_74);
        wp::adj_load(var_72, adj_72, adj_73);
        wp::adj_address(var_pose, var_0, adj_pose, adj_0, adj_72);
        // adj: Dm = pose[tid]                                                                    <L 392>
        wp::adj_mat_t(var_65, var_66, var_67, adj_65, adj_66, adj_67, adj_71);
        // adj: Ds = wp.mat33(x10, x20, x30)                                                      <L 391>
        wp::adj_sub(var_52, var_43, adj_52, adj_43, adj_70);
        // adj: v30 = v3 - v0                                                                     <L 389>
        wp::adj_sub(var_49, var_43, adj_49, adj_43, adj_69);
        // adj: v20 = v2 - v0                                                                     <L 388>
        wp::adj_sub(var_46, var_43, adj_46, adj_43, adj_68);
        // adj: v10 = v1 - v0                                                                     <L 387>
        wp::adj_sub(var_40, var_31, adj_40, adj_31, adj_67);
        // adj: x30 = x3 - x0                                                                     <L 385>
        wp::adj_sub(var_37, var_31, adj_37, adj_31, adj_66);
        // adj: x20 = x2 - x0                                                                     <L 384>
        wp::adj_sub(var_34, var_31, adj_34, adj_31, adj_65);
        // adj: x10 = x1 - x0                                                                     <L 383>
        wp::adj_copy(var_63, adj_62, adj_64);
        wp::adj_load(var_62, adj_62, adj_63);
        wp::adj_address(var_inv_mass, var_16, adj_inv_mass, adj_16, adj_62);
        // adj: w3 = inv_mass[l]                                                                  <L 381>
        wp::adj_copy(var_60, adj_59, adj_61);
        wp::adj_load(var_59, adj_59, adj_60);
        wp::adj_address(var_inv_mass, var_12, adj_inv_mass, adj_12, adj_59);
        // adj: w2 = inv_mass[k]                                                                  <L 380>
        wp::adj_copy(var_57, adj_56, adj_58);
        wp::adj_load(var_56, adj_56, adj_57);
        wp::adj_address(var_inv_mass, var_8, adj_inv_mass, adj_8, adj_56);
        // adj: w1 = inv_mass[j]                                                                  <L 379>
        wp::adj_copy(var_54, adj_53, adj_55);
        wp::adj_load(var_53, adj_53, adj_54);
        wp::adj_address(var_inv_mass, var_4, adj_inv_mass, adj_4, adj_53);
        // adj: w0 = inv_mass[i]                                                                  <L 378>
        wp::adj_copy(var_51, adj_50, adj_52);
        wp::adj_load(var_50, adj_50, adj_51);
        wp::adj_address(var_v, var_16, adj_v, adj_16, adj_50);
        // adj: v3 = v[l]                                                                         <L 376>
        wp::adj_copy(var_48, adj_47, adj_49);
        wp::adj_load(var_47, adj_47, adj_48);
        wp::adj_address(var_v, var_12, adj_v, adj_12, adj_47);
        // adj: v2 = v[k]                                                                         <L 375>
        wp::adj_copy(var_45, adj_44, adj_46);
        wp::adj_load(var_44, adj_44, adj_45);
        wp::adj_address(var_v, var_8, adj_v, adj_8, adj_44);
        // adj: v1 = v[j]                                                                         <L 374>
        wp::adj_copy(var_42, adj_41, adj_43);
        wp::adj_load(var_41, adj_41, adj_42);
        wp::adj_address(var_v, var_4, adj_v, adj_4, adj_41);
        // adj: v0 = v[i]                                                                         <L 373>
        wp::adj_copy(var_39, adj_38, adj_40);
        wp::adj_load(var_38, adj_38, adj_39);
        wp::adj_address(var_x, var_16, adj_x, adj_16, adj_38);
        // adj: x3 = x[l]                                                                         <L 371>
        wp::adj_copy(var_36, adj_35, adj_37);
        wp::adj_load(var_35, adj_35, adj_36);
        wp::adj_address(var_x, var_12, adj_x, adj_12, adj_35);
        // adj: x2 = x[k]                                                                         <L 370>
        wp::adj_copy(var_33, adj_32, adj_34);
        wp::adj_load(var_32, adj_32, adj_33);
        wp::adj_address(var_x, var_8, adj_x, adj_8, adj_32);
        // adj: x1 = x[j]                                                                         <L 369>
        wp::adj_copy(var_30, adj_29, adj_31);
        wp::adj_load(var_29, adj_29, adj_30);
        wp::adj_address(var_x, var_4, adj_x, adj_4, adj_29);
        // adj: x0 = x[i]                                                                         <L 368>
        wp::adj_copy(var_27, adj_26, adj_28);
        wp::adj_load(var_26, adj_26, adj_27);
        wp::adj_address(var_materials, var_0, var_9, adj_materials, adj_0, adj_9, adj_26);
        // adj: k_damp = materials[tid, 2]                                                        <L 366>
        wp::adj_copy(var_24, adj_23, adj_25);
        wp::adj_load(var_23, adj_23, adj_24);
        wp::adj_address(var_materials, var_0, var_5, adj_materials, adj_0, adj_5, adj_23);
        // adj: k_lambda = materials[tid, 1]                                                      <L 365>
        wp::adj_copy(var_21, adj_20, adj_22);
        wp::adj_load(var_20, adj_20, adj_21);
        wp::adj_address(var_materials, var_0, var_1, adj_materials, adj_0, adj_1, adj_20);
        // adj: k_mu = materials[tid, 0]                                                          <L 364>
        wp::adj_copy(var_18, adj_17, adj_19);
        wp::adj_load(var_17, adj_17, adj_18);
        wp::adj_address(var_activation, var_0, adj_activation, adj_0, adj_17);
        // adj: act = activation[tid]                                                             <L 362>
        wp::adj_copy(var_15, adj_14, adj_16);
        wp::adj_load(var_14, adj_14, adj_15);
        wp::adj_address(var_indices, var_0, var_13, adj_indices, adj_0, adj_13, adj_14);
        // adj: l = indices[tid, 3]                                                               <L 360>
        wp::adj_copy(var_11, adj_10, adj_12);
        wp::adj_load(var_10, adj_10, adj_11);
        wp::adj_address(var_indices, var_0, var_9, adj_indices, adj_0, adj_9, adj_10);
        // adj: k = indices[tid, 2]                                                               <L 359>
        wp::adj_copy(var_7, adj_6, adj_8);
        wp::adj_load(var_6, adj_6, adj_7);
        wp::adj_address(var_indices, var_0, var_5, adj_indices, adj_0, adj_5, adj_6);
        // adj: j = indices[tid, 1]                                                               <L 358>
        wp::adj_copy(var_3, adj_2, adj_4);
        wp::adj_load(var_2, adj_2, adj_3);
        wp::adj_address(var_indices, var_0, var_1, adj_indices, adj_0, adj_1, adj_2);
        // adj: i = indices[tid, 0]                                                               <L 357>
        // adj: tid = wp.tid()                                                                    <L 355>
        // adj: def solve_tetrahedra(                                                             <L 343>
        continue;
    }
}



extern "C" __global__ void apply_particle_deltas_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x_orig,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x_pred,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x_out,
    wp::array_t<wp::vec_t<3,wp::float32>> var_v_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::vec_t<3,wp::float32>* var_7;
        wp::vec_t<3,wp::float32> var_8;
        wp::vec_t<3,wp::float32> var_9;
        wp::vec_t<3,wp::float32>* var_10;
        wp::vec_t<3,wp::float32> var_11;
        wp::vec_t<3,wp::float32> var_12;
        wp::vec_t<3,wp::float32>* var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32> var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::vec_t<3,wp::float32> var_18;
        //---------
        // forward
        // def apply_particle_deltas(                                                             <L 493>
        // tid = wp.tid()                                                                         <L 502>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 503>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 504>
            return;
        }
        // x0 = x_orig[tid]                                                                       <L 506>
        var_7 = wp::address(var_x_orig, var_0);
        var_8 = wp::load(var_7);
        var_9 = wp::copy(var_8);
        // xp = x_pred[tid]                                                                       <L 507>
        var_10 = wp::address(var_x_pred, var_0);
        var_11 = wp::load(var_10);
        var_12 = wp::copy(var_11);
        // d = delta[tid]                                                                         <L 510>
        var_13 = wp::address(var_delta, var_0);
        var_14 = wp::load(var_13);
        var_15 = wp::copy(var_14);
        // x_new = xp + d                                                                         <L 512>
        var_16 = wp::add(var_12, var_15);
        // v_new = (x_new - x0) / dt                                                              <L 513>
        var_17 = wp::sub(var_16, var_9);
        var_18 = wp::div(var_17, var_dt);
        // x_out[tid] = x_new                                                                     <L 515>
        wp::array_store(var_x_out, var_0, var_16);
        // v_out[tid] = v_new                                                                     <L 516>
        wp::array_store(var_v_out, var_0, var_18);
    }
}

extern "C" __global__ void apply_particle_deltas_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x_orig,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x_pred,
    wp::array_t<wp::uint32> var_particle_flags,
    wp::array_t<wp::vec_t<3,wp::float32>> var_delta,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<3,wp::float32>> var_x_out,
    wp::array_t<wp::vec_t<3,wp::float32>> var_v_out,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_x_orig,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_x_pred,
    wp::array_t<wp::uint32> adj_particle_flags,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_delta,
    wp::float32 adj_dt,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_x_out,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_v_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::uint32* var_1;
        const wp::uint32 var_2 = 1;
        wp::uint32 var_3;
        wp::uint32 var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::vec_t<3,wp::float32>* var_7;
        wp::vec_t<3,wp::float32> var_8;
        wp::vec_t<3,wp::float32> var_9;
        wp::vec_t<3,wp::float32>* var_10;
        wp::vec_t<3,wp::float32> var_11;
        wp::vec_t<3,wp::float32> var_12;
        wp::vec_t<3,wp::float32>* var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32> var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::vec_t<3,wp::float32> var_18;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::uint32 adj_1 = {};
        wp::uint32 adj_2 = {};
        wp::uint32 adj_3 = {};
        wp::uint32 adj_4 = {};
        wp::int32 adj_5 = {};
        bool adj_6 = {};
        wp::vec_t<3,wp::float32> adj_7 = {};
        wp::vec_t<3,wp::float32> adj_8 = {};
        wp::vec_t<3,wp::float32> adj_9 = {};
        wp::vec_t<3,wp::float32> adj_10 = {};
        wp::vec_t<3,wp::float32> adj_11 = {};
        wp::vec_t<3,wp::float32> adj_12 = {};
        wp::vec_t<3,wp::float32> adj_13 = {};
        wp::vec_t<3,wp::float32> adj_14 = {};
        wp::vec_t<3,wp::float32> adj_15 = {};
        wp::vec_t<3,wp::float32> adj_16 = {};
        wp::vec_t<3,wp::float32> adj_17 = {};
        wp::vec_t<3,wp::float32> adj_18 = {};
        //---------
        // forward
        // def apply_particle_deltas(                                                             <L 493>
        // tid = wp.tid()                                                                         <L 502>
        var_0 = builtin_tid1d();
        // if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                                  <L 503>
        var_1 = wp::address(var_particle_flags, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::bit_and(var_3, var_2);
        var_6 = (var_4 == var_5);
        if (var_6) {
            // return                                                                             <L 504>
            goto label0;
        }
        // x0 = x_orig[tid]                                                                       <L 506>
        var_7 = wp::address(var_x_orig, var_0);
        var_8 = wp::load(var_7);
        var_9 = wp::copy(var_8);
        // xp = x_pred[tid]                                                                       <L 507>
        var_10 = wp::address(var_x_pred, var_0);
        var_11 = wp::load(var_10);
        var_12 = wp::copy(var_11);
        // d = delta[tid]                                                                         <L 510>
        var_13 = wp::address(var_delta, var_0);
        var_14 = wp::load(var_13);
        var_15 = wp::copy(var_14);
        // x_new = xp + d                                                                         <L 512>
        var_16 = wp::add(var_12, var_15);
        // v_new = (x_new - x0) / dt                                                              <L 513>
        var_17 = wp::sub(var_16, var_9);
        var_18 = wp::div(var_17, var_dt);
        // x_out[tid] = x_new                                                                     <L 515>
        // wp::array_store(var_x_out, var_0, var_16);
        // v_out[tid] = v_new                                                                     <L 516>
        // wp::array_store(var_v_out, var_0, var_18);
        //---------
        // reverse
        wp::adj_array_store(var_v_out, var_0, var_18, adj_v_out, adj_0, adj_18);
        // adj: v_out[tid] = v_new                                                                <L 516>
        wp::adj_array_store(var_x_out, var_0, var_16, adj_x_out, adj_0, adj_16);
        // adj: x_out[tid] = x_new                                                                <L 515>
        wp::adj_div(var_17, var_dt, adj_17, adj_dt, adj_18);
        wp::adj_sub(var_16, var_9, adj_16, adj_9, adj_17);
        // adj: v_new = (x_new - x0) / dt                                                         <L 513>
        wp::adj_add(var_12, var_15, adj_12, adj_15, adj_16);
        // adj: x_new = xp + d                                                                    <L 512>
        wp::adj_copy(var_14, adj_13, adj_15);
        wp::adj_load(var_13, adj_13, adj_14);
        wp::adj_address(var_delta, var_0, adj_delta, adj_0, adj_13);
        // adj: d = delta[tid]                                                                    <L 510>
        wp::adj_copy(var_11, adj_10, adj_12);
        wp::adj_load(var_10, adj_10, adj_11);
        wp::adj_address(var_x_pred, var_0, adj_x_pred, adj_0, adj_10);
        // adj: xp = x_pred[tid]                                                                  <L 507>
        wp::adj_copy(var_8, adj_7, adj_9);
        wp::adj_load(var_7, adj_7, adj_8);
        wp::adj_address(var_x_orig, var_0, adj_x_orig, adj_0, adj_7);
        // adj: x0 = x_orig[tid]                                                                  <L 506>
        if (var_6) {
            label0:;
            // adj: return                                                                        <L 504>
        }
        wp::adj_bit_and(var_3, var_2, adj_1, adj_2, adj_4);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_particle_flags, var_0, adj_particle_flags, adj_0, adj_1);
        // adj: if (particle_flags[tid] & PARTICLE_FLAG_ACTIVE) == 0:                             <L 503>
        // adj: tid = wp.tid()                                                                    <L 502>
        // adj: def apply_particle_deltas(                                                        <L 493>
        continue;
    }
}



extern "C" __global__ void apply_body_deltas_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_q_in,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_in,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I,
    wp::array_t<wp::float32> var_body_inv_m,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_inv_I,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::float32> var_constraint_inv_weights,
    wp::float32 var_dt,
    wp::array_t<wp::transform_t<wp::float32>> var_q_out,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::float32* var_1;
        wp::float32 var_2;
        wp::float32 var_3;
        const wp::float32 var_4 = 0.0;
        bool var_5;
        wp::transform_t<wp::float32>* var_6;
        wp::transform_t<wp::float32> var_7;
        wp::vec_t<6,wp::float32>* var_8;
        wp::vec_t<6,wp::float32> var_9;
        wp::mat_t<3,3,wp::float32>* var_10;
        wp::mat_t<3,3,wp::float32> var_11;
        wp::mat_t<3,3,wp::float32> var_12;
        wp::transform_t<wp::float32>* var_13;
        wp::transform_t<wp::float32> var_14;
        wp::transform_t<wp::float32> var_15;
        wp::vec_t<6,wp::float32>* var_16;
        wp::vec_t<6,wp::float32> var_17;
        wp::vec_t<6,wp::float32> var_18;
        wp::vec_t<3,wp::float32> var_19;
        wp::quat_t<wp::float32> var_20;
        const wp::float32 var_21 = 1.0;
        wp::float32* var_22;
        bool var_23;
        wp::float32 var_24;
        wp::float32* var_25;
        wp::float32 var_26;
        wp::float32 var_27;
        wp::float32 var_28;
        wp::float32 var_29;
        wp::vec_t<3,wp::float32> var_30;
        wp::float32 var_31;
        wp::vec_t<3,wp::float32> var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32> var_37;
        const wp::float32 var_38 = 0.5;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::quat_t<wp::float32> var_41;
        wp::quat_t<wp::float32> var_42;
        wp::quat_t<wp::float32> var_43;
        wp::quat_t<wp::float32> var_44;
        wp::quat_t<wp::float32> var_45;
        wp::vec_t<3,wp::float32>* var_46;
        wp::vec_t<3,wp::float32> var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        wp::transform_t<wp::float32> var_56;
        wp::vec_t<6,wp::float32>* var_57;
        wp::vec_t<6,wp::float32> var_58;
        wp::vec_t<3,wp::float32> var_59;
        wp::vec_t<6,wp::float32>* var_60;
        wp::vec_t<6,wp::float32> var_61;
        wp::vec_t<3,wp::float32> var_62;
        wp::vec_t<3,wp::float32> var_63;
        wp::vec_t<3,wp::float32> var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::mat_t<3,3,wp::float32>* var_68;
        wp::mat_t<3,3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::vec_t<3,wp::float32> var_73;
        wp::vec_t<3,wp::float32> var_74;
        wp::vec_t<3,wp::float32> var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::vec_t<6,wp::float32> var_77;
        //---------
        // forward
        // def apply_body_deltas(                                                                 <L 520>
        // tid = wp.tid()                                                                         <L 534>
        var_0 = builtin_tid1d();
        // inv_m = body_inv_m[tid]                                                                <L 535>
        var_1 = wp::address(var_body_inv_m, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // if inv_m == 0.0:                                                                       <L 536>
        var_5 = (var_3 == var_4);
        if (var_5) {
            // q_out[tid] = q_in[tid]                                                             <L 537>
            var_6 = wp::address(var_q_in, var_0);
            var_7 = wp::load(var_6);
            wp::array_store(var_q_out, var_0, var_7);
            // qd_out[tid] = qd_in[tid]                                                           <L 538>
            var_8 = wp::address(var_qd_in, var_0);
            var_9 = wp::load(var_8);
            wp::array_store(var_qd_out, var_0, var_9);
            // return                                                                             <L 539>
            return;
        }
        // inv_I = body_inv_I[tid]                                                                <L 540>
        var_10 = wp::address(var_body_inv_I, var_0);
        var_11 = wp::load(var_10);
        var_12 = wp::copy(var_11);
        // tf = q_in[tid]                                                                         <L 542>
        var_13 = wp::address(var_q_in, var_0);
        var_14 = wp::load(var_13);
        var_15 = wp::copy(var_14);
        // delta = deltas[tid]                                                                    <L 543>
        var_16 = wp::address(var_deltas, var_0);
        var_17 = wp::load(var_16);
        var_18 = wp::copy(var_17);
        // p0 = wp.transform_get_translation(tf)                                                  <L 545>
        var_19 = wp::transform_get_translation(var_15);
        // q0 = wp.transform_get_rotation(tf)                                                     <L 546>
        var_20 = wp::transform_get_rotation(var_15);
        // weight = 1.0                                                                           <L 548>
        // if constraint_inv_weights:                                                             <L 549>
        if (var_constraint_inv_weights) {
            // if constraint_inv_weights[tid] > 0.0:                                              <L 550>
            var_22 = wp::address(var_constraint_inv_weights, var_0);
            var_24 = wp::load(var_22);
            var_23 = (var_24 > var_4);
            if (var_23) {
                // weight = 1.0 / constraint_inv_weights[tid]                                     <L 551>
                var_25 = wp::address(var_constraint_inv_weights, var_0);
                var_26 = wp::load(var_25);
                var_27 = wp::div(var_21, var_26);
            }
            var_28 = wp::select(var_23, var_21, var_27);
        }
        var_29 = wp::select(var_constraint_inv_weights, var_21, var_28);
        // dp = wp.spatial_bottom(delta) * (inv_m * weight)                                       <L 553>
        var_30 = wp::spatial_bottom(var_18);
        var_31 = wp::mul(var_3, var_29);
        var_32 = wp::mul(var_30, var_31);
        // dq = wp.spatial_top(delta) * weight                                                    <L 554>
        var_33 = wp::spatial_top(var_18);
        var_34 = wp::mul(var_33, var_29);
        // dq = wp.quat_rotate(q0, inv_I * wp.quat_rotate_inv(q0, dq))                            <L 555>
        var_35 = wp::quat_rotate_inv(var_20, var_34);
        var_36 = wp::mul(var_12, var_35);
        var_37 = wp::quat_rotate(var_20, var_36);
        // q1 = q0 + 0.5 * wp.quat(dq * dt * dt, 0.0) * q0                                        <L 558>
        var_39 = wp::mul(var_37, var_dt);
        var_40 = wp::mul(var_39, var_dt);
        var_41 = wp::quat_t<wp::float32>(var_40, var_4);
        var_42 = wp::mul(var_38, var_41);
        var_43 = wp::mul(var_42, var_20);
        var_44 = wp::add(var_20, var_43);
        // q1 = wp.normalize(q1)                                                                  <L 559>
        var_45 = wp::normalize(var_44);
        // com = body_com[tid]                                                                    <L 562>
        var_46 = wp::address(var_body_com, var_0);
        var_47 = wp::load(var_46);
        var_48 = wp::copy(var_47);
        // x_com = p0 + wp.quat_rotate(q0, com)                                                   <L 563>
        var_49 = wp::quat_rotate(var_20, var_48);
        var_50 = wp::add(var_19, var_49);
        // p1 = x_com + dp * dt * dt                                                              <L 564>
        var_51 = wp::mul(var_32, var_dt);
        var_52 = wp::mul(var_51, var_dt);
        var_53 = wp::add(var_50, var_52);
        // p1 -= wp.quat_rotate(q1, com)                                                          <L 565>
        var_54 = wp::quat_rotate(var_45, var_48);
        var_55 = wp::sub(var_53, var_54);
        // q_out[tid] = wp.transform(p1, q1)                                                      <L 567>
        var_56 = wp::transform_t<wp::float32>(var_55, var_45);
        wp::array_store(var_q_out, var_0, var_56);
        // v0 = wp.spatial_bottom(qd_in[tid])                                                     <L 569>
        var_57 = wp::address(var_qd_in, var_0);
        var_58 = wp::load(var_57);
        var_59 = wp::spatial_bottom(var_58);
        // w0 = wp.spatial_top(qd_in[tid])                                                        <L 570>
        var_60 = wp::address(var_qd_in, var_0);
        var_61 = wp::load(var_60);
        var_62 = wp::spatial_top(var_61);
        // v1 = v0 + dp * dt                                                                      <L 573>
        var_63 = wp::mul(var_32, var_dt);
        var_64 = wp::add(var_59, var_63);
        // wb = wp.quat_rotate_inv(q0, w0 + dq * dt)                                              <L 575>
        var_65 = wp::mul(var_37, var_dt);
        var_66 = wp::add(var_62, var_65);
        var_67 = wp::quat_rotate_inv(var_20, var_66);
        // tb = -wp.cross(wb, body_I[tid] * wb)  # coriolis forces                                <L 576>
        var_68 = wp::address(var_body_I, var_0);
        var_69 = wp::load(var_68);
        var_70 = wp::mul(var_69, var_67);
        var_71 = wp::cross(var_67, var_70);
        var_72 = wp::neg(var_71);
        // w1 = wp.quat_rotate(q0, wb + inv_I * tb * dt)                                          <L 577>
        var_73 = wp::mul(var_12, var_72);
        var_74 = wp::mul(var_73, var_dt);
        var_75 = wp::add(var_67, var_74);
        var_76 = wp::quat_rotate(var_20, var_75);
        // qd_out[tid] = wp.spatial_vector(w1, v1)                                                <L 579>
        var_77 = wp::vec_t<6,wp::float32>(var_76, var_64);
        wp::array_store(var_qd_out, var_0, var_77);
    }
}

extern "C" __global__ void apply_body_deltas_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_q_in,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_in,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I,
    wp::array_t<wp::float32> var_body_inv_m,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_inv_I,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::float32> var_constraint_inv_weights,
    wp::float32 var_dt,
    wp::array_t<wp::transform_t<wp::float32>> var_q_out,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_out,
    wp::array_t<wp::transform_t<wp::float32>> adj_q_in,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_qd_in,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_body_I,
    wp::array_t<wp::float32> adj_body_inv_m,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_body_inv_I,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_deltas,
    wp::array_t<wp::float32> adj_constraint_inv_weights,
    wp::float32 adj_dt,
    wp::array_t<wp::transform_t<wp::float32>> adj_q_out,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_qd_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::float32* var_1;
        wp::float32 var_2;
        wp::float32 var_3;
        const wp::float32 var_4 = 0.0;
        bool var_5;
        wp::transform_t<wp::float32>* var_6;
        wp::transform_t<wp::float32> var_7;
        wp::vec_t<6,wp::float32>* var_8;
        wp::vec_t<6,wp::float32> var_9;
        wp::mat_t<3,3,wp::float32>* var_10;
        wp::mat_t<3,3,wp::float32> var_11;
        wp::mat_t<3,3,wp::float32> var_12;
        wp::transform_t<wp::float32>* var_13;
        wp::transform_t<wp::float32> var_14;
        wp::transform_t<wp::float32> var_15;
        wp::vec_t<6,wp::float32>* var_16;
        wp::vec_t<6,wp::float32> var_17;
        wp::vec_t<6,wp::float32> var_18;
        wp::vec_t<3,wp::float32> var_19;
        wp::quat_t<wp::float32> var_20;
        const wp::float32 var_21 = 1.0;
        wp::float32* var_22;
        bool var_23;
        wp::float32 var_24;
        wp::float32* var_25;
        wp::float32 var_26;
        wp::float32 var_27;
        wp::float32 var_28;
        wp::float32 var_29;
        wp::vec_t<3,wp::float32> var_30;
        wp::float32 var_31;
        wp::vec_t<3,wp::float32> var_32;
        wp::vec_t<3,wp::float32> var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32> var_37;
        const wp::float32 var_38 = 0.5;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::quat_t<wp::float32> var_41;
        wp::quat_t<wp::float32> var_42;
        wp::quat_t<wp::float32> var_43;
        wp::quat_t<wp::float32> var_44;
        wp::quat_t<wp::float32> var_45;
        wp::vec_t<3,wp::float32>* var_46;
        wp::vec_t<3,wp::float32> var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        wp::transform_t<wp::float32> var_56;
        wp::vec_t<6,wp::float32>* var_57;
        wp::vec_t<6,wp::float32> var_58;
        wp::vec_t<3,wp::float32> var_59;
        wp::vec_t<6,wp::float32>* var_60;
        wp::vec_t<6,wp::float32> var_61;
        wp::vec_t<3,wp::float32> var_62;
        wp::vec_t<3,wp::float32> var_63;
        wp::vec_t<3,wp::float32> var_64;
        wp::vec_t<3,wp::float32> var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::mat_t<3,3,wp::float32>* var_68;
        wp::mat_t<3,3,wp::float32> var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::vec_t<3,wp::float32> var_73;
        wp::vec_t<3,wp::float32> var_74;
        wp::vec_t<3,wp::float32> var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::vec_t<6,wp::float32> var_77;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::float32 adj_1 = {};
        wp::float32 adj_2 = {};
        wp::float32 adj_3 = {};
        wp::float32 adj_4 = {};
        bool adj_5 = {};
        wp::transform_t<wp::float32> adj_6 = {};
        wp::transform_t<wp::float32> adj_7 = {};
        wp::vec_t<6,wp::float32> adj_8 = {};
        wp::vec_t<6,wp::float32> adj_9 = {};
        wp::mat_t<3,3,wp::float32> adj_10 = {};
        wp::mat_t<3,3,wp::float32> adj_11 = {};
        wp::mat_t<3,3,wp::float32> adj_12 = {};
        wp::transform_t<wp::float32> adj_13 = {};
        wp::transform_t<wp::float32> adj_14 = {};
        wp::transform_t<wp::float32> adj_15 = {};
        wp::vec_t<6,wp::float32> adj_16 = {};
        wp::vec_t<6,wp::float32> adj_17 = {};
        wp::vec_t<6,wp::float32> adj_18 = {};
        wp::vec_t<3,wp::float32> adj_19 = {};
        wp::quat_t<wp::float32> adj_20 = {};
        wp::float32 adj_21 = {};
        wp::float32 adj_22 = {};
        bool adj_23 = {};
        wp::float32 adj_24 = {};
        wp::float32 adj_25 = {};
        wp::float32 adj_26 = {};
        wp::float32 adj_27 = {};
        wp::float32 adj_28 = {};
        wp::float32 adj_29 = {};
        wp::vec_t<3,wp::float32> adj_30 = {};
        wp::float32 adj_31 = {};
        wp::vec_t<3,wp::float32> adj_32 = {};
        wp::vec_t<3,wp::float32> adj_33 = {};
        wp::vec_t<3,wp::float32> adj_34 = {};
        wp::vec_t<3,wp::float32> adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::vec_t<3,wp::float32> adj_37 = {};
        wp::float32 adj_38 = {};
        wp::vec_t<3,wp::float32> adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::quat_t<wp::float32> adj_41 = {};
        wp::quat_t<wp::float32> adj_42 = {};
        wp::quat_t<wp::float32> adj_43 = {};
        wp::quat_t<wp::float32> adj_44 = {};
        wp::quat_t<wp::float32> adj_45 = {};
        wp::vec_t<3,wp::float32> adj_46 = {};
        wp::vec_t<3,wp::float32> adj_47 = {};
        wp::vec_t<3,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        wp::vec_t<3,wp::float32> adj_51 = {};
        wp::vec_t<3,wp::float32> adj_52 = {};
        wp::vec_t<3,wp::float32> adj_53 = {};
        wp::vec_t<3,wp::float32> adj_54 = {};
        wp::vec_t<3,wp::float32> adj_55 = {};
        wp::transform_t<wp::float32> adj_56 = {};
        wp::vec_t<6,wp::float32> adj_57 = {};
        wp::vec_t<6,wp::float32> adj_58 = {};
        wp::vec_t<3,wp::float32> adj_59 = {};
        wp::vec_t<6,wp::float32> adj_60 = {};
        wp::vec_t<6,wp::float32> adj_61 = {};
        wp::vec_t<3,wp::float32> adj_62 = {};
        wp::vec_t<3,wp::float32> adj_63 = {};
        wp::vec_t<3,wp::float32> adj_64 = {};
        wp::vec_t<3,wp::float32> adj_65 = {};
        wp::vec_t<3,wp::float32> adj_66 = {};
        wp::vec_t<3,wp::float32> adj_67 = {};
        wp::mat_t<3,3,wp::float32> adj_68 = {};
        wp::mat_t<3,3,wp::float32> adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::vec_t<3,wp::float32> adj_71 = {};
        wp::vec_t<3,wp::float32> adj_72 = {};
        wp::vec_t<3,wp::float32> adj_73 = {};
        wp::vec_t<3,wp::float32> adj_74 = {};
        wp::vec_t<3,wp::float32> adj_75 = {};
        wp::vec_t<3,wp::float32> adj_76 = {};
        wp::vec_t<6,wp::float32> adj_77 = {};
        //---------
        // forward
        // def apply_body_deltas(                                                                 <L 520>
        // tid = wp.tid()                                                                         <L 534>
        var_0 = builtin_tid1d();
        // inv_m = body_inv_m[tid]                                                                <L 535>
        var_1 = wp::address(var_body_inv_m, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // if inv_m == 0.0:                                                                       <L 536>
        var_5 = (var_3 == var_4);
        if (var_5) {
            // q_out[tid] = q_in[tid]                                                             <L 537>
            var_6 = wp::address(var_q_in, var_0);
            var_7 = wp::load(var_6);
            // wp::array_store(var_q_out, var_0, var_7);
            // qd_out[tid] = qd_in[tid]                                                           <L 538>
            var_8 = wp::address(var_qd_in, var_0);
            var_9 = wp::load(var_8);
            // wp::array_store(var_qd_out, var_0, var_9);
            // return                                                                             <L 539>
            goto label0;
        }
        // inv_I = body_inv_I[tid]                                                                <L 540>
        var_10 = wp::address(var_body_inv_I, var_0);
        var_11 = wp::load(var_10);
        var_12 = wp::copy(var_11);
        // tf = q_in[tid]                                                                         <L 542>
        var_13 = wp::address(var_q_in, var_0);
        var_14 = wp::load(var_13);
        var_15 = wp::copy(var_14);
        // delta = deltas[tid]                                                                    <L 543>
        var_16 = wp::address(var_deltas, var_0);
        var_17 = wp::load(var_16);
        var_18 = wp::copy(var_17);
        // p0 = wp.transform_get_translation(tf)                                                  <L 545>
        var_19 = wp::transform_get_translation(var_15);
        // q0 = wp.transform_get_rotation(tf)                                                     <L 546>
        var_20 = wp::transform_get_rotation(var_15);
        // weight = 1.0                                                                           <L 548>
        // if constraint_inv_weights:                                                             <L 549>
        if (var_constraint_inv_weights) {
            // if constraint_inv_weights[tid] > 0.0:                                              <L 550>
            var_22 = wp::address(var_constraint_inv_weights, var_0);
            var_24 = wp::load(var_22);
            var_23 = (var_24 > var_4);
            if (var_23) {
                // weight = 1.0 / constraint_inv_weights[tid]                                     <L 551>
                var_25 = wp::address(var_constraint_inv_weights, var_0);
                var_26 = wp::load(var_25);
                var_27 = wp::div(var_21, var_26);
            }
            var_28 = wp::select(var_23, var_21, var_27);
        }
        var_29 = wp::select(var_constraint_inv_weights, var_21, var_28);
        // dp = wp.spatial_bottom(delta) * (inv_m * weight)                                       <L 553>
        var_30 = wp::spatial_bottom(var_18);
        var_31 = wp::mul(var_3, var_29);
        var_32 = wp::mul(var_30, var_31);
        // dq = wp.spatial_top(delta) * weight                                                    <L 554>
        var_33 = wp::spatial_top(var_18);
        var_34 = wp::mul(var_33, var_29);
        // dq = wp.quat_rotate(q0, inv_I * wp.quat_rotate_inv(q0, dq))                            <L 555>
        var_35 = wp::quat_rotate_inv(var_20, var_34);
        var_36 = wp::mul(var_12, var_35);
        var_37 = wp::quat_rotate(var_20, var_36);
        // q1 = q0 + 0.5 * wp.quat(dq * dt * dt, 0.0) * q0                                        <L 558>
        var_39 = wp::mul(var_37, var_dt);
        var_40 = wp::mul(var_39, var_dt);
        var_41 = wp::quat_t<wp::float32>(var_40, var_4);
        var_42 = wp::mul(var_38, var_41);
        var_43 = wp::mul(var_42, var_20);
        var_44 = wp::add(var_20, var_43);
        // q1 = wp.normalize(q1)                                                                  <L 559>
        var_45 = wp::normalize(var_44);
        // com = body_com[tid]                                                                    <L 562>
        var_46 = wp::address(var_body_com, var_0);
        var_47 = wp::load(var_46);
        var_48 = wp::copy(var_47);
        // x_com = p0 + wp.quat_rotate(q0, com)                                                   <L 563>
        var_49 = wp::quat_rotate(var_20, var_48);
        var_50 = wp::add(var_19, var_49);
        // p1 = x_com + dp * dt * dt                                                              <L 564>
        var_51 = wp::mul(var_32, var_dt);
        var_52 = wp::mul(var_51, var_dt);
        var_53 = wp::add(var_50, var_52);
        // p1 -= wp.quat_rotate(q1, com)                                                          <L 565>
        var_54 = wp::quat_rotate(var_45, var_48);
        var_55 = wp::sub(var_53, var_54);
        // q_out[tid] = wp.transform(p1, q1)                                                      <L 567>
        var_56 = wp::transform_t<wp::float32>(var_55, var_45);
        // wp::array_store(var_q_out, var_0, var_56);
        // v0 = wp.spatial_bottom(qd_in[tid])                                                     <L 569>
        var_57 = wp::address(var_qd_in, var_0);
        var_58 = wp::load(var_57);
        var_59 = wp::spatial_bottom(var_58);
        // w0 = wp.spatial_top(qd_in[tid])                                                        <L 570>
        var_60 = wp::address(var_qd_in, var_0);
        var_61 = wp::load(var_60);
        var_62 = wp::spatial_top(var_61);
        // v1 = v0 + dp * dt                                                                      <L 573>
        var_63 = wp::mul(var_32, var_dt);
        var_64 = wp::add(var_59, var_63);
        // wb = wp.quat_rotate_inv(q0, w0 + dq * dt)                                              <L 575>
        var_65 = wp::mul(var_37, var_dt);
        var_66 = wp::add(var_62, var_65);
        var_67 = wp::quat_rotate_inv(var_20, var_66);
        // tb = -wp.cross(wb, body_I[tid] * wb)  # coriolis forces                                <L 576>
        var_68 = wp::address(var_body_I, var_0);
        var_69 = wp::load(var_68);
        var_70 = wp::mul(var_69, var_67);
        var_71 = wp::cross(var_67, var_70);
        var_72 = wp::neg(var_71);
        // w1 = wp.quat_rotate(q0, wb + inv_I * tb * dt)                                          <L 577>
        var_73 = wp::mul(var_12, var_72);
        var_74 = wp::mul(var_73, var_dt);
        var_75 = wp::add(var_67, var_74);
        var_76 = wp::quat_rotate(var_20, var_75);
        // qd_out[tid] = wp.spatial_vector(w1, v1)                                                <L 579>
        var_77 = wp::vec_t<6,wp::float32>(var_76, var_64);
        // wp::array_store(var_qd_out, var_0, var_77);
        //---------
        // reverse
        wp::adj_array_store(var_qd_out, var_0, var_77, adj_qd_out, adj_0, adj_77);
        wp::adj_vec_t(var_76, var_64, adj_76, adj_64, adj_77);
        // adj: qd_out[tid] = wp.spatial_vector(w1, v1)                                           <L 579>
        wp::adj_quat_rotate(var_20, var_75, adj_20, adj_75, adj_76);
        wp::adj_add(var_67, var_74, adj_67, adj_74, adj_75);
        wp::adj_mul(var_73, var_dt, adj_73, adj_dt, adj_74);
        wp::adj_mul(var_12, var_72, adj_12, adj_72, adj_73);
        // adj: w1 = wp.quat_rotate(q0, wb + inv_I * tb * dt)                                     <L 577>
        wp::adj_neg(var_71, adj_71, adj_72);
        wp::adj_cross(var_67, var_70, adj_67, adj_70, adj_71);
        wp::adj_mul(var_69, var_67, adj_68, adj_67, adj_70);
        wp::adj_load(var_68, adj_68, adj_69);
        wp::adj_address(var_body_I, var_0, adj_body_I, adj_0, adj_68);
        // adj: tb = -wp.cross(wb, body_I[tid] * wb)  # coriolis forces                           <L 576>
        wp::adj_quat_rotate_inv(var_20, var_66, adj_20, adj_66, adj_67);
        wp::adj_add(var_62, var_65, adj_62, adj_65, adj_66);
        wp::adj_mul(var_37, var_dt, adj_37, adj_dt, adj_65);
        // adj: wb = wp.quat_rotate_inv(q0, w0 + dq * dt)                                         <L 575>
        wp::adj_add(var_59, var_63, adj_59, adj_63, adj_64);
        wp::adj_mul(var_32, var_dt, adj_32, adj_dt, adj_63);
        // adj: v1 = v0 + dp * dt                                                                 <L 573>
        wp::adj_spatial_top(var_61, adj_60, adj_62);
        wp::adj_load(var_60, adj_60, adj_61);
        wp::adj_address(var_qd_in, var_0, adj_qd_in, adj_0, adj_60);
        // adj: w0 = wp.spatial_top(qd_in[tid])                                                   <L 570>
        wp::adj_spatial_bottom(var_58, adj_57, adj_59);
        wp::adj_load(var_57, adj_57, adj_58);
        wp::adj_address(var_qd_in, var_0, adj_qd_in, adj_0, adj_57);
        // adj: v0 = wp.spatial_bottom(qd_in[tid])                                                <L 569>
        wp::adj_array_store(var_q_out, var_0, var_56, adj_q_out, adj_0, adj_56);
        wp::adj_transform_t(var_55, var_45, adj_55, adj_45, adj_56);
        // adj: q_out[tid] = wp.transform(p1, q1)                                                 <L 567>
        wp::adj_sub(var_53, var_54, adj_53, adj_54, adj_55);
        wp::adj_quat_rotate(var_45, var_48, adj_45, adj_48, adj_54);
        // adj: p1 -= wp.quat_rotate(q1, com)                                                     <L 565>
        wp::adj_add(var_50, var_52, adj_50, adj_52, adj_53);
        wp::adj_mul(var_51, var_dt, adj_51, adj_dt, adj_52);
        wp::adj_mul(var_32, var_dt, adj_32, adj_dt, adj_51);
        // adj: p1 = x_com + dp * dt * dt                                                         <L 564>
        wp::adj_add(var_19, var_49, adj_19, adj_49, adj_50);
        wp::adj_quat_rotate(var_20, var_48, adj_20, adj_48, adj_49);
        // adj: x_com = p0 + wp.quat_rotate(q0, com)                                              <L 563>
        wp::adj_copy(var_47, adj_46, adj_48);
        wp::adj_load(var_46, adj_46, adj_47);
        wp::adj_address(var_body_com, var_0, adj_body_com, adj_0, adj_46);
        // adj: com = body_com[tid]                                                               <L 562>
        wp::adj_normalize(var_44, adj_44, adj_45);
        // adj: q1 = wp.normalize(q1)                                                             <L 559>
        wp::adj_add(var_20, var_43, adj_20, adj_43, adj_44);
        wp::adj_mul(var_42, var_20, adj_42, adj_20, adj_43);
        wp::adj_mul(var_38, var_41, adj_38, adj_41, adj_42);
        wp::adj_quat_t(var_40, var_4, adj_40, adj_4, adj_41);
        wp::adj_mul(var_39, var_dt, adj_39, adj_dt, adj_40);
        wp::adj_mul(var_37, var_dt, adj_37, adj_dt, adj_39);
        // adj: q1 = q0 + 0.5 * wp.quat(dq * dt * dt, 0.0) * q0                                   <L 558>
        wp::adj_quat_rotate(var_20, var_36, adj_20, adj_36, adj_37);
        wp::adj_mul(var_12, var_35, adj_12, adj_35, adj_36);
        wp::adj_quat_rotate_inv(var_20, var_34, adj_20, adj_34, adj_35);
        // adj: dq = wp.quat_rotate(q0, inv_I * wp.quat_rotate_inv(q0, dq))                       <L 555>
        wp::adj_mul(var_33, var_29, adj_33, adj_29, adj_34);
        wp::adj_spatial_top(var_18, adj_18, adj_33);
        // adj: dq = wp.spatial_top(delta) * weight                                               <L 554>
        wp::adj_mul(var_30, var_31, adj_30, adj_31, adj_32);
        wp::adj_mul(var_3, var_29, adj_3, adj_29, adj_31);
        wp::adj_spatial_bottom(var_18, adj_18, adj_30);
        // adj: dp = wp.spatial_bottom(delta) * (inv_m * weight)                                  <L 553>
        wp::adj_select(var_constraint_inv_weights, var_21, var_28, adj_constraint_inv_weights, adj_21, adj_28, adj_29);
        if (var_constraint_inv_weights) {
            wp::adj_select(var_23, var_21, var_27, adj_23, adj_21, adj_27, adj_28);
            if (var_23) {
                wp::adj_div(var_21, var_26, var_27, adj_21, adj_25, adj_27);
                wp::adj_load(var_25, adj_25, adj_26);
                wp::adj_address(var_constraint_inv_weights, var_0, adj_constraint_inv_weights, adj_0, adj_25);
                // adj: weight = 1.0 / constraint_inv_weights[tid]                                <L 551>
            }
            wp::adj_load(var_22, adj_22, adj_24);
            wp::adj_address(var_constraint_inv_weights, var_0, adj_constraint_inv_weights, adj_0, adj_22);
            // adj: if constraint_inv_weights[tid] > 0.0:                                         <L 550>
        }
        // adj: if constraint_inv_weights:                                                        <L 549>
        // adj: weight = 1.0                                                                      <L 548>
        wp::adj_transform_get_rotation(var_15, adj_15, adj_20);
        // adj: q0 = wp.transform_get_rotation(tf)                                                <L 546>
        wp::adj_transform_get_translation(var_15, adj_15, adj_19);
        // adj: p0 = wp.transform_get_translation(tf)                                             <L 545>
        wp::adj_copy(var_17, adj_16, adj_18);
        wp::adj_load(var_16, adj_16, adj_17);
        wp::adj_address(var_deltas, var_0, adj_deltas, adj_0, adj_16);
        // adj: delta = deltas[tid]                                                               <L 543>
        wp::adj_copy(var_14, adj_13, adj_15);
        wp::adj_load(var_13, adj_13, adj_14);
        wp::adj_address(var_q_in, var_0, adj_q_in, adj_0, adj_13);
        // adj: tf = q_in[tid]                                                                    <L 542>
        wp::adj_copy(var_11, adj_10, adj_12);
        wp::adj_load(var_10, adj_10, adj_11);
        wp::adj_address(var_body_inv_I, var_0, adj_body_inv_I, adj_0, adj_10);
        // adj: inv_I = body_inv_I[tid]                                                           <L 540>
        if (var_5) {
            label0:;
            // adj: return                                                                        <L 539>
            wp::adj_array_store(var_qd_out, var_0, var_9, adj_qd_out, adj_0, adj_8);
            wp::adj_load(var_8, adj_8, adj_9);
            wp::adj_address(var_qd_in, var_0, adj_qd_in, adj_0, adj_8);
            // adj: qd_out[tid] = qd_in[tid]                                                      <L 538>
            wp::adj_array_store(var_q_out, var_0, var_7, adj_q_out, adj_0, adj_6);
            wp::adj_load(var_6, adj_6, adj_7);
            wp::adj_address(var_q_in, var_0, adj_q_in, adj_0, adj_6);
            // adj: q_out[tid] = q_in[tid]                                                        <L 537>
        }
        // adj: if inv_m == 0.0:                                                                  <L 536>
        wp::adj_copy(var_2, adj_1, adj_3);
        wp::adj_load(var_1, adj_1, adj_2);
        wp::adj_address(var_body_inv_m, var_0, adj_body_inv_m, adj_0, adj_1);
        // adj: inv_m = body_inv_m[tid]                                                           <L 535>
        // adj: tid = wp.tid()                                                                    <L 534>
        // adj: def apply_body_deltas(                                                            <L 520>
        continue;
    }
}



extern "C" __global__ void apply_body_delta_velocities_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_in,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::vec_t<6,wp::float32>* var_1;
        wp::vec_t<6,wp::float32>* var_2;
        wp::vec_t<6,wp::float32> var_3;
        wp::vec_t<6,wp::float32> var_4;
        wp::vec_t<6,wp::float32> var_5;
        //---------
        // forward
        // def apply_body_delta_velocities(                                                       <L 583>
        // tid = wp.tid()                                                                         <L 588>
        var_0 = builtin_tid1d();
        // qd_out[tid] = qd_in[tid] + deltas[tid]                                                 <L 589>
        var_1 = wp::address(var_qd_in, var_0);
        var_2 = wp::address(var_deltas, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::load(var_2);
        var_5 = wp::add(var_3, var_4);
        wp::array_store(var_qd_out, var_0, var_5);
    }
}

extern "C" __global__ void apply_body_delta_velocities_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_in,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_out,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_qd_in,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_deltas,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_qd_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::vec_t<6,wp::float32>* var_1;
        wp::vec_t<6,wp::float32>* var_2;
        wp::vec_t<6,wp::float32> var_3;
        wp::vec_t<6,wp::float32> var_4;
        wp::vec_t<6,wp::float32> var_5;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::vec_t<6,wp::float32> adj_1 = {};
        wp::vec_t<6,wp::float32> adj_2 = {};
        wp::vec_t<6,wp::float32> adj_3 = {};
        wp::vec_t<6,wp::float32> adj_4 = {};
        wp::vec_t<6,wp::float32> adj_5 = {};
        //---------
        // forward
        // def apply_body_delta_velocities(                                                       <L 583>
        // tid = wp.tid()                                                                         <L 588>
        var_0 = builtin_tid1d();
        // qd_out[tid] = qd_in[tid] + deltas[tid]                                                 <L 589>
        var_1 = wp::address(var_qd_in, var_0);
        var_2 = wp::address(var_deltas, var_0);
        var_3 = wp::load(var_1);
        var_4 = wp::load(var_2);
        var_5 = wp::add(var_3, var_4);
        // wp::array_store(var_qd_out, var_0, var_5);
        //---------
        // reverse
        wp::adj_array_store(var_qd_out, var_0, var_5, adj_qd_out, adj_0, adj_5);
        wp::adj_add(var_3, var_4, adj_1, adj_2, adj_5);
        wp::adj_load(var_2, adj_2, adj_4);
        wp::adj_load(var_1, adj_1, adj_3);
        wp::adj_address(var_deltas, var_0, adj_deltas, adj_0, adj_2);
        wp::adj_address(var_qd_in, var_0, adj_qd_in, adj_0, adj_1);
        // adj: qd_out[tid] = qd_in[tid] + deltas[tid]                                            <L 589>
        // adj: tid = wp.tid()                                                                    <L 588>
        // adj: def apply_body_delta_velocities(                                                  <L 583>
        continue;
    }
}



extern "C" __global__ void apply_joint_torques_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::int32> var_joint_q_start,
    wp::array_t<wp::int32> var_joint_qd_start,
    wp::array_t<wp::int32> var_joint_type,
    wp::array_t<wp::int32> var_joint_parent,
    wp::array_t<wp::int32> var_joint_child,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_p,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_c,
    wp::array_t<wp::int32> var_joint_axis_start,
    wp::array_t<wp::int32> var_joint_axis_dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_joint_axis,
    wp::array_t<wp::float32> var_joint_act,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_f)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        const wp::int32 var_4 = 3;
        bool var_5;
        const wp::int32 var_6 = 4;
        bool var_7;
        const wp::int32 var_8 = 7;
        bool var_9;
        const wp::int32 var_10 = 2;
        bool var_11;
        wp::int32* var_12;
        wp::int32 var_13;
        wp::int32 var_14;
        wp::int32* var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::transform_t<wp::float32>* var_18;
        wp::transform_t<wp::float32> var_19;
        wp::transform_t<wp::float32> var_20;
        wp::transform_t<wp::float32>* var_21;
        wp::transform_t<wp::float32> var_22;
        wp::transform_t<wp::float32> var_23;
        wp::transform_t<wp::float32> var_24;
        wp::transform_t<wp::float32> var_25;
        const wp::float32 var_26 = 0.0;
        wp::vec_t<3,wp::float32> var_27;
        const wp::int32 var_28 = 0;
        bool var_29;
        wp::transform_t<wp::float32>* var_30;
        wp::transform_t<wp::float32> var_31;
        wp::transform_t<wp::float32> var_32;
        wp::transform_t<wp::float32> var_33;
        wp::vec_t<3,wp::float32>* var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::transform_t<wp::float32> var_37;
        wp::transform_t<wp::float32> var_38;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::vec_t<3,wp::float32> var_42;
        wp::transform_t<wp::float32>* var_43;
        wp::transform_t<wp::float32> var_44;
        wp::transform_t<wp::float32> var_45;
        wp::transform_t<wp::float32> var_46;
        wp::vec_t<3,wp::float32>* var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::quat_t<wp::float32> var_53;
        wp::quat_t<wp::float32> var_54;
        wp::int32* var_55;
        wp::int32 var_56;
        wp::int32 var_57;
        wp::int32* var_58;
        wp::int32 var_59;
        wp::int32 var_60;
        wp::int32* var_61;
        wp::int32 var_62;
        wp::int32 var_63;
        wp::int32* var_64;
        wp::int32 var_65;
        wp::int32 var_66;
        const wp::int32 var_67 = 1;
        wp::int32* var_68;
        wp::int32 var_69;
        wp::int32 var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        const wp::int32 var_73 = 1;
        bool var_74;
        wp::vec_t<3,wp::float32>* var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::vec_t<3,wp::float32> var_77;
        wp::float32* var_78;
        wp::float32 var_79;
        wp::float32 var_80;
        wp::vec_t<3,wp::float32> var_81;
        wp::vec_t<3,wp::float32> var_82;
        wp::vec_t<3,wp::float32> var_83;
        wp::vec_t<3,wp::float32> var_84;
        const wp::int32 var_85 = 0;
        bool var_86;
        wp::vec_t<3,wp::float32>* var_87;
        wp::vec_t<3,wp::float32> var_88;
        wp::vec_t<3,wp::float32> var_89;
        wp::float32* var_90;
        wp::float32 var_91;
        wp::float32 var_92;
        wp::vec_t<3,wp::float32> var_93;
        wp::vec_t<3,wp::float32> var_94;
        wp::vec_t<3,wp::float32> var_95;
        wp::vec_t<3,wp::float32> var_96;
        wp::vec_t<3,wp::float32> var_97;
        wp::float32 var_98;
        wp::vec_t<3,wp::float32> var_99;
        const wp::int32 var_100 = 5;
        bool var_101;
        wp::int32 var_102;
        wp::vec_t<3,wp::float32>* var_103;
        wp::vec_t<3,wp::float32> var_104;
        wp::vec_t<3,wp::float32> var_105;
        wp::int32 var_106;
        wp::vec_t<3,wp::float32>* var_107;
        wp::vec_t<3,wp::float32> var_108;
        wp::vec_t<3,wp::float32> var_109;
        const wp::int32 var_110 = 2;
        wp::int32 var_111;
        wp::vec_t<3,wp::float32>* var_112;
        wp::vec_t<3,wp::float32> var_113;
        wp::vec_t<3,wp::float32> var_114;
        wp::int32 var_115;
        wp::float32* var_116;
        wp::vec_t<3,wp::float32> var_117;
        wp::float32 var_118;
        wp::vec_t<3,wp::float32> var_119;
        wp::vec_t<3,wp::float32> var_120;
        wp::int32 var_121;
        wp::float32* var_122;
        wp::vec_t<3,wp::float32> var_123;
        wp::float32 var_124;
        wp::vec_t<3,wp::float32> var_125;
        wp::vec_t<3,wp::float32> var_126;
        wp::int32 var_127;
        wp::float32* var_128;
        wp::vec_t<3,wp::float32> var_129;
        wp::float32 var_130;
        wp::vec_t<3,wp::float32> var_131;
        wp::vec_t<3,wp::float32> var_132;
        wp::vec_t<3,wp::float32> var_133;
        const wp::int32 var_134 = 6;
        bool var_135;
        wp::int32 var_136;
        wp::vec_t<3,wp::float32>* var_137;
        wp::vec_t<3,wp::float32> var_138;
        wp::vec_t<3,wp::float32> var_139;
        wp::int32 var_140;
        wp::vec_t<3,wp::float32>* var_141;
        wp::vec_t<3,wp::float32> var_142;
        wp::vec_t<3,wp::float32> var_143;
        wp::int32 var_144;
        wp::float32* var_145;
        wp::vec_t<3,wp::float32> var_146;
        wp::float32 var_147;
        wp::vec_t<3,wp::float32> var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::int32 var_150;
        wp::float32* var_151;
        wp::vec_t<3,wp::float32> var_152;
        wp::float32 var_153;
        wp::vec_t<3,wp::float32> var_154;
        wp::vec_t<3,wp::float32> var_155;
        wp::vec_t<3,wp::float32> var_156;
        wp::vec_t<3,wp::float32> var_157;
        wp::vec_t<3,wp::float32> var_158;
        const wp::int32 var_159 = 8;
        bool var_160;
        bool var_161;
        wp::int32 var_162;
        wp::vec_t<3,wp::float32>* var_163;
        wp::vec_t<3,wp::float32> var_164;
        wp::vec_t<3,wp::float32> var_165;
        wp::int32 var_166;
        wp::float32* var_167;
        wp::float32 var_168;
        wp::float32 var_169;
        wp::vec_t<3,wp::float32> var_170;
        wp::vec_t<3,wp::float32> var_171;
        wp::vec_t<3,wp::float32> var_172;
        wp::vec_t<3,wp::float32> var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::float32 var_175;
        wp::vec_t<3,wp::float32> var_176;
        bool var_177;
        wp::int32 var_178;
        wp::vec_t<3,wp::float32>* var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::int32 var_182;
        wp::float32* var_183;
        wp::float32 var_184;
        wp::float32 var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::vec_t<3,wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::float32 var_191;
        wp::vec_t<3,wp::float32> var_192;
        bool var_193;
        wp::int32 var_194;
        wp::vec_t<3,wp::float32>* var_195;
        wp::vec_t<3,wp::float32> var_196;
        wp::vec_t<3,wp::float32> var_197;
        wp::int32 var_198;
        wp::float32* var_199;
        wp::float32 var_200;
        wp::float32 var_201;
        wp::vec_t<3,wp::float32> var_202;
        wp::vec_t<3,wp::float32> var_203;
        wp::vec_t<3,wp::float32> var_204;
        wp::vec_t<3,wp::float32> var_205;
        wp::vec_t<3,wp::float32> var_206;
        wp::float32 var_207;
        wp::vec_t<3,wp::float32> var_208;
        bool var_209;
        wp::int32 var_210;
        wp::int32 var_211;
        wp::vec_t<3,wp::float32>* var_212;
        wp::vec_t<3,wp::float32> var_213;
        wp::vec_t<3,wp::float32> var_214;
        wp::int32 var_215;
        wp::int32 var_216;
        wp::float32* var_217;
        wp::float32 var_218;
        wp::float32 var_219;
        wp::vec_t<3,wp::float32> var_220;
        wp::vec_t<3,wp::float32> var_221;
        wp::vec_t<3,wp::float32> var_222;
        wp::vec_t<3,wp::float32> var_223;
        wp::vec_t<3,wp::float32> var_224;
        wp::float32 var_225;
        wp::vec_t<3,wp::float32> var_226;
        bool var_227;
        wp::int32 var_228;
        wp::int32 var_229;
        wp::vec_t<3,wp::float32>* var_230;
        wp::vec_t<3,wp::float32> var_231;
        wp::vec_t<3,wp::float32> var_232;
        wp::int32 var_233;
        wp::int32 var_234;
        wp::float32* var_235;
        wp::float32 var_236;
        wp::float32 var_237;
        wp::vec_t<3,wp::float32> var_238;
        wp::vec_t<3,wp::float32> var_239;
        wp::vec_t<3,wp::float32> var_240;
        wp::vec_t<3,wp::float32> var_241;
        wp::vec_t<3,wp::float32> var_242;
        wp::float32 var_243;
        wp::vec_t<3,wp::float32> var_244;
        bool var_245;
        wp::int32 var_246;
        wp::int32 var_247;
        wp::vec_t<3,wp::float32>* var_248;
        wp::vec_t<3,wp::float32> var_249;
        wp::vec_t<3,wp::float32> var_250;
        wp::int32 var_251;
        wp::int32 var_252;
        wp::float32* var_253;
        wp::float32 var_254;
        wp::float32 var_255;
        wp::vec_t<3,wp::float32> var_256;
        wp::vec_t<3,wp::float32> var_257;
        wp::vec_t<3,wp::float32> var_258;
        wp::vec_t<3,wp::float32> var_259;
        wp::vec_t<3,wp::float32> var_260;
        wp::float32 var_261;
        wp::vec_t<3,wp::float32> var_262;
        wp::vec_t<3,wp::float32> var_263;
        wp::vec_t<3,wp::float32> var_264;
        wp::vec_t<3,wp::float32> var_265;
        wp::float32 var_266;
        wp::vec_t<3,wp::float32> var_267;
        const wp::str var_268 = "joint type not handled in apply_joint_torques";
        wp::vec_t<3,wp::float32> var_269;
        wp::vec_t<3,wp::float32> var_270;
        wp::vec_t<3,wp::float32> var_271;
        wp::float32 var_272;
        wp::vec_t<3,wp::float32> var_273;
        wp::vec_t<3,wp::float32> var_274;
        wp::vec_t<3,wp::float32> var_275;
        wp::vec_t<3,wp::float32> var_276;
        wp::float32 var_277;
        wp::vec_t<3,wp::float32> var_278;
        wp::vec_t<3,wp::float32> var_279;
        wp::vec_t<3,wp::float32> var_280;
        wp::vec_t<3,wp::float32> var_281;
        wp::vec_t<3,wp::float32> var_282;
        wp::vec_t<3,wp::float32> var_283;
        wp::float32 var_284;
        wp::vec_t<3,wp::float32> var_285;
        wp::vec_t<3,wp::float32> var_286;
        wp::vec_t<3,wp::float32> var_287;
        wp::vec_t<3,wp::float32> var_288;
        wp::float32 var_289;
        wp::vec_t<3,wp::float32> var_290;
        bool var_291;
        wp::vec_t<3,wp::float32> var_292;
        wp::vec_t<3,wp::float32> var_293;
        wp::vec_t<6,wp::float32> var_294;
        wp::vec_t<6,wp::float32> var_295;
        wp::vec_t<3,wp::float32> var_296;
        wp::vec_t<3,wp::float32> var_297;
        wp::vec_t<6,wp::float32> var_298;
        wp::vec_t<6,wp::float32> var_299;
        //---------
        // forward
        // def apply_joint_torques(                                                               <L 593>
        // tid = wp.tid()                                                                         <L 609>
        var_0 = builtin_tid1d();
        // type = joint_type[tid]                                                                 <L 610>
        var_1 = wp::address(var_joint_type, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // if type == fs5Model.JOINT_FIXED:                                                       <L 611>
        var_5 = (var_3 == var_4);
        if (var_5) {
            // return                                                                             <L 612>
            return;
        }
        // if type == fs5Model.JOINT_FREE:                                                        <L 613>
        var_7 = (var_3 == var_6);
        if (var_7) {
            // return                                                                             <L 614>
            return;
        }
        // if type == fs5Model.JOINT_DISTANCE:                                                    <L 615>
        var_9 = (var_3 == var_8);
        if (var_9) {
            // return                                                                             <L 616>
            return;
        }
        // if type == fs5Model.JOINT_BALL:                                                        <L 617>
        var_11 = (var_3 == var_10);
        if (var_11) {
            // return                                                                             <L 618>
            return;
        }
        // id_c = joint_child[tid]                                                                <L 621>
        var_12 = wp::address(var_joint_child, var_0);
        var_13 = wp::load(var_12);
        var_14 = wp::copy(var_13);
        // id_p = joint_parent[tid]                                                               <L 622>
        var_15 = wp::address(var_joint_parent, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::copy(var_16);
        // X_pj = joint_X_p[tid]                                                                  <L 624>
        var_18 = wp::address(var_joint_X_p, var_0);
        var_19 = wp::load(var_18);
        var_20 = wp::copy(var_19);
        // X_cj = joint_X_c[tid]                                                                  <L 625>
        var_21 = wp::address(var_joint_X_c, var_0);
        var_22 = wp::load(var_21);
        var_23 = wp::copy(var_22);
        // X_wp = X_pj                                                                            <L 627>
        var_24 = wp::copy(var_20);
        // pose_p = X_pj                                                                          <L 628>
        var_25 = wp::copy(var_20);
        // com_p = wp.vec3(0.0)                                                                   <L 629>
        var_27 = wp::vec_t<3,wp::float32>(var_26);
        // if id_p >= 0:                                                                          <L 631>
        var_29 = (var_17 >= var_28);
        if (var_29) {
            // pose_p = body_q[id_p]                                                              <L 632>
            var_30 = wp::address(var_body_q, var_17);
            var_31 = wp::load(var_30);
            var_32 = wp::copy(var_31);
            // X_wp = pose_p * X_wp                                                               <L 633>
            var_33 = wp::mul(var_32, var_24);
            // com_p = body_com[id_p]                                                             <L 634>
            var_34 = wp::address(var_body_com, var_17);
            var_35 = wp::load(var_34);
            var_36 = wp::copy(var_35);
        }
        var_37 = wp::select(var_29, var_24, var_33);
        var_38 = wp::select(var_29, var_25, var_32);
        var_39 = wp::select(var_29, var_27, var_36);
        // r_p = wp.transform_get_translation(X_wp) - wp.transform_point(pose_p, com_p)           <L 635>
        var_40 = wp::transform_get_translation(var_37);
        var_41 = wp::transform_point(var_38, var_39);
        var_42 = wp::sub(var_40, var_41);
        // pose_c = body_q[id_c]                                                                  <L 638>
        var_43 = wp::address(var_body_q, var_14);
        var_44 = wp::load(var_43);
        var_45 = wp::copy(var_44);
        // X_wc = pose_c                                                                          <L 639>
        var_46 = wp::copy(var_45);
        // com_c = body_com[id_c]                                                                 <L 640>
        var_47 = wp::address(var_body_com, var_14);
        var_48 = wp::load(var_47);
        var_49 = wp::copy(var_48);
        // r_c = wp.transform_get_translation(X_wc) - wp.transform_point(pose_c, com_c)           <L 641>
        var_50 = wp::transform_get_translation(var_46);
        var_51 = wp::transform_point(var_45, var_49);
        var_52 = wp::sub(var_50, var_51);
        // q_p = wp.transform_get_rotation(X_wp)                                                  <L 644>
        var_53 = wp::transform_get_rotation(var_37);
        // q_c = wp.transform_get_rotation(X_wc)                                                  <L 645>
        var_54 = wp::transform_get_rotation(var_46);
        // q_start = joint_q_start[tid]                                                           <L 648>
        var_55 = wp::address(var_joint_q_start, var_0);
        var_56 = wp::load(var_55);
        var_57 = wp::copy(var_56);
        // qd_start = joint_qd_start[tid]                                                         <L 649>
        var_58 = wp::address(var_joint_qd_start, var_0);
        var_59 = wp::load(var_58);
        var_60 = wp::copy(var_59);
        // axis_start = joint_axis_start[tid]                                                     <L 650>
        var_61 = wp::address(var_joint_axis_start, var_0);
        var_62 = wp::load(var_61);
        var_63 = wp::copy(var_62);
        // lin_axis_count = joint_axis_dim[tid, 0]                                                <L 651>
        var_64 = wp::address(var_joint_axis_dim, var_0, var_28);
        var_65 = wp::load(var_64);
        var_66 = wp::copy(var_65);
        // ang_axis_count = joint_axis_dim[tid, 1]                                                <L 652>
        var_68 = wp::address(var_joint_axis_dim, var_0, var_67);
        var_69 = wp::load(var_68);
        var_70 = wp::copy(var_69);
        // t_total = wp.vec3()                                                                    <L 655>
        var_71 = wp::vec_t<3,wp::float32>();
        // f_total = wp.vec3()                                                                    <L 656>
        var_72 = wp::vec_t<3,wp::float32>();
        // if type == fs5Model.JOINT_REVOLUTE:                                                    <L 659>
        var_74 = (var_3 == var_73);
        if (var_74) {
            // axis = joint_axis[axis_start]                                                      <L 660>
            var_75 = wp::address(var_joint_axis, var_63);
            var_76 = wp::load(var_75);
            var_77 = wp::copy(var_76);
            // act = joint_act[qd_start]                                                          <L 661>
            var_78 = wp::address(var_joint_act, var_60);
            var_79 = wp::load(var_78);
            var_80 = wp::copy(var_79);
            // a_p = wp.transform_vector(X_wp, axis)                                              <L 662>
            var_81 = wp::transform_vector(var_37, var_77);
            // t_total += act * a_p                                                               <L 663>
            var_82 = wp::mul(var_80, var_81);
            var_83 = wp::add(var_71, var_82);
        }
        var_84 = wp::select(var_74, var_71, var_83);
        if (!var_74) {
            // elif type == fs5Model.JOINT_PRISMATIC:                                             <L 664>
            var_86 = (var_3 == var_85);
            if (var_86) {
                // axis = joint_axis[axis_start]                                                  <L 665>
                var_87 = wp::address(var_joint_axis, var_63);
                var_88 = wp::load(var_87);
                var_89 = wp::copy(var_88);
                // act = joint_act[qd_start]                                                      <L 666>
                var_90 = wp::address(var_joint_act, var_60);
                var_91 = wp::load(var_90);
                var_92 = wp::copy(var_91);
                // a_p = wp.transform_vector(X_wp, axis)                                          <L 667>
                var_93 = wp::transform_vector(var_37, var_89);
                // f_total += act * a_p                                                           <L 668>
                var_94 = wp::mul(var_92, var_93);
                var_95 = wp::add(var_72, var_94);
            }
            var_96 = wp::select(var_86, var_72, var_95);
            var_97 = wp::select(var_86, var_77, var_89);
            var_98 = wp::select(var_86, var_80, var_92);
            var_99 = wp::select(var_86, var_81, var_93);
            if (!var_86) {
                // elif type == fs5Model.JOINT_COMPOUND:                                          <L 669>
                var_101 = (var_3 == var_100);
                if (var_101) {
                    // axis_0 = joint_axis[axis_start + 0]                                        <L 689>
                    var_102 = wp::add(var_63, var_28);
                    var_103 = wp::address(var_joint_axis, var_102);
                    var_104 = wp::load(var_103);
                    var_105 = wp::copy(var_104);
                    // axis_1 = joint_axis[axis_start + 1]                                        <L 690>
                    var_106 = wp::add(var_63, var_67);
                    var_107 = wp::address(var_joint_axis, var_106);
                    var_108 = wp::load(var_107);
                    var_109 = wp::copy(var_108);
                    // axis_2 = joint_axis[axis_start + 2]                                        <L 691>
                    var_111 = wp::add(var_63, var_110);
                    var_112 = wp::address(var_joint_axis, var_111);
                    var_113 = wp::load(var_112);
                    var_114 = wp::copy(var_113);
                    // t_total += joint_act[qd_start + 0] * wp.transform_vector(X_wp, axis_0)       <L 692>
                    var_115 = wp::add(var_60, var_28);
                    var_116 = wp::address(var_joint_act, var_115);
                    var_117 = wp::transform_vector(var_37, var_105);
                    var_118 = wp::load(var_116);
                    var_119 = wp::mul(var_118, var_117);
                    var_120 = wp::add(var_84, var_119);
                    // t_total += joint_act[qd_start + 1] * wp.transform_vector(X_wp, axis_1)       <L 693>
                    var_121 = wp::add(var_60, var_67);
                    var_122 = wp::address(var_joint_act, var_121);
                    var_123 = wp::transform_vector(var_37, var_109);
                    var_124 = wp::load(var_122);
                    var_125 = wp::mul(var_124, var_123);
                    var_126 = wp::add(var_120, var_125);
                    // t_total += joint_act[qd_start + 2] * wp.transform_vector(X_wp, axis_2)       <L 694>
                    var_127 = wp::add(var_60, var_110);
                    var_128 = wp::address(var_joint_act, var_127);
                    var_129 = wp::transform_vector(var_37, var_114);
                    var_130 = wp::load(var_128);
                    var_131 = wp::mul(var_130, var_129);
                    var_132 = wp::add(var_126, var_131);
                }
                var_133 = wp::select(var_101, var_84, var_132);
                if (!var_101) {
                    // elif type == fs5Model.JOINT_UNIVERSAL:                                     <L 696>
                    var_135 = (var_3 == var_134);
                    if (var_135) {
                        // axis_0 = joint_axis[axis_start + 0]                                    <L 718>
                        var_136 = wp::add(var_63, var_28);
                        var_137 = wp::address(var_joint_axis, var_136);
                        var_138 = wp::load(var_137);
                        var_139 = wp::copy(var_138);
                        // axis_1 = joint_axis[axis_start + 1]                                    <L 719>
                        var_140 = wp::add(var_63, var_67);
                        var_141 = wp::address(var_joint_axis, var_140);
                        var_142 = wp::load(var_141);
                        var_143 = wp::copy(var_142);
                        // t_total += joint_act[qd_start + 0] * wp.transform_vector(X_wp, axis_0)       <L 720>
                        var_144 = wp::add(var_60, var_28);
                        var_145 = wp::address(var_joint_act, var_144);
                        var_146 = wp::transform_vector(var_37, var_139);
                        var_147 = wp::load(var_145);
                        var_148 = wp::mul(var_147, var_146);
                        var_149 = wp::add(var_133, var_148);
                        // t_total += joint_act[qd_start + 1] * wp.transform_vector(X_wp, axis_1)       <L 721>
                        var_150 = wp::add(var_60, var_67);
                        var_151 = wp::address(var_joint_act, var_150);
                        var_152 = wp::transform_vector(var_37, var_143);
                        var_153 = wp::load(var_151);
                        var_154 = wp::mul(var_153, var_152);
                        var_155 = wp::add(var_149, var_154);
                    }
                    var_156 = wp::select(var_135, var_133, var_155);
                    var_157 = wp::select(var_135, var_105, var_139);
                    var_158 = wp::select(var_135, var_109, var_143);
                    if (!var_135) {
                        // elif type == fs5Model.JOINT_D6:                                        <L 723>
                        var_160 = (var_3 == var_159);
                        if (var_160) {
                            // if lin_axis_count > 0:                                             <L 727>
                            var_161 = (var_66 > var_28);
                            if (var_161) {
                                // axis = joint_axis[axis_start + 0]                              <L 728>
                                var_162 = wp::add(var_63, var_28);
                                var_163 = wp::address(var_joint_axis, var_162);
                                var_164 = wp::load(var_163);
                                var_165 = wp::copy(var_164);
                                // act = joint_act[qd_start + 0]                                  <L 729>
                                var_166 = wp::add(var_60, var_28);
                                var_167 = wp::address(var_joint_act, var_166);
                                var_168 = wp::load(var_167);
                                var_169 = wp::copy(var_168);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 730>
                                var_170 = wp::transform_vector(var_37, var_165);
                                // f_total += act * a_p                                           <L 731>
                                var_171 = wp::mul(var_169, var_170);
                                var_172 = wp::add(var_96, var_171);
                            }
                            var_173 = wp::select(var_161, var_96, var_172);
                            var_174 = wp::select(var_161, var_97, var_165);
                            var_175 = wp::select(var_161, var_98, var_169);
                            var_176 = wp::select(var_161, var_99, var_170);
                            // if lin_axis_count > 1:                                             <L 732>
                            var_177 = (var_66 > var_67);
                            if (var_177) {
                                // axis = joint_axis[axis_start + 1]                              <L 733>
                                var_178 = wp::add(var_63, var_67);
                                var_179 = wp::address(var_joint_axis, var_178);
                                var_180 = wp::load(var_179);
                                var_181 = wp::copy(var_180);
                                // act = joint_act[qd_start + 1]                                  <L 734>
                                var_182 = wp::add(var_60, var_67);
                                var_183 = wp::address(var_joint_act, var_182);
                                var_184 = wp::load(var_183);
                                var_185 = wp::copy(var_184);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 735>
                                var_186 = wp::transform_vector(var_37, var_181);
                                // f_total += act * a_p                                           <L 736>
                                var_187 = wp::mul(var_185, var_186);
                                var_188 = wp::add(var_173, var_187);
                            }
                            var_189 = wp::select(var_177, var_173, var_188);
                            var_190 = wp::select(var_177, var_174, var_181);
                            var_191 = wp::select(var_177, var_175, var_185);
                            var_192 = wp::select(var_177, var_176, var_186);
                            // if lin_axis_count > 2:                                             <L 737>
                            var_193 = (var_66 > var_110);
                            if (var_193) {
                                // axis = joint_axis[axis_start + 2]                              <L 738>
                                var_194 = wp::add(var_63, var_110);
                                var_195 = wp::address(var_joint_axis, var_194);
                                var_196 = wp::load(var_195);
                                var_197 = wp::copy(var_196);
                                // act = joint_act[qd_start + 2]                                  <L 739>
                                var_198 = wp::add(var_60, var_110);
                                var_199 = wp::address(var_joint_act, var_198);
                                var_200 = wp::load(var_199);
                                var_201 = wp::copy(var_200);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 740>
                                var_202 = wp::transform_vector(var_37, var_197);
                                // f_total += act * a_p                                           <L 741>
                                var_203 = wp::mul(var_201, var_202);
                                var_204 = wp::add(var_189, var_203);
                            }
                            var_205 = wp::select(var_193, var_189, var_204);
                            var_206 = wp::select(var_193, var_190, var_197);
                            var_207 = wp::select(var_193, var_191, var_201);
                            var_208 = wp::select(var_193, var_192, var_202);
                            // if ang_axis_count > 0:                                             <L 743>
                            var_209 = (var_70 > var_28);
                            if (var_209) {
                                // axis = joint_axis[axis_start + lin_axis_count + 0]             <L 744>
                                var_210 = wp::add(var_63, var_66);
                                var_211 = wp::add(var_210, var_28);
                                var_212 = wp::address(var_joint_axis, var_211);
                                var_213 = wp::load(var_212);
                                var_214 = wp::copy(var_213);
                                // act = joint_act[qd_start + lin_axis_count + 0]                 <L 745>
                                var_215 = wp::add(var_60, var_66);
                                var_216 = wp::add(var_215, var_28);
                                var_217 = wp::address(var_joint_act, var_216);
                                var_218 = wp::load(var_217);
                                var_219 = wp::copy(var_218);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 746>
                                var_220 = wp::transform_vector(var_37, var_214);
                                // t_total += act * a_p                                           <L 747>
                                var_221 = wp::mul(var_219, var_220);
                                var_222 = wp::add(var_156, var_221);
                            }
                            var_223 = wp::select(var_209, var_156, var_222);
                            var_224 = wp::select(var_209, var_206, var_214);
                            var_225 = wp::select(var_209, var_207, var_219);
                            var_226 = wp::select(var_209, var_208, var_220);
                            // if ang_axis_count > 1:                                             <L 748>
                            var_227 = (var_70 > var_67);
                            if (var_227) {
                                // axis = joint_axis[axis_start + lin_axis_count + 1]             <L 749>
                                var_228 = wp::add(var_63, var_66);
                                var_229 = wp::add(var_228, var_67);
                                var_230 = wp::address(var_joint_axis, var_229);
                                var_231 = wp::load(var_230);
                                var_232 = wp::copy(var_231);
                                // act = joint_act[qd_start + lin_axis_count + 1]                 <L 750>
                                var_233 = wp::add(var_60, var_66);
                                var_234 = wp::add(var_233, var_67);
                                var_235 = wp::address(var_joint_act, var_234);
                                var_236 = wp::load(var_235);
                                var_237 = wp::copy(var_236);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 751>
                                var_238 = wp::transform_vector(var_37, var_232);
                                // t_total += act * a_p                                           <L 752>
                                var_239 = wp::mul(var_237, var_238);
                                var_240 = wp::add(var_223, var_239);
                            }
                            var_241 = wp::select(var_227, var_223, var_240);
                            var_242 = wp::select(var_227, var_224, var_232);
                            var_243 = wp::select(var_227, var_225, var_237);
                            var_244 = wp::select(var_227, var_226, var_238);
                            // if ang_axis_count > 2:                                             <L 753>
                            var_245 = (var_70 > var_110);
                            if (var_245) {
                                // axis = joint_axis[axis_start + lin_axis_count + 2]             <L 754>
                                var_246 = wp::add(var_63, var_66);
                                var_247 = wp::add(var_246, var_110);
                                var_248 = wp::address(var_joint_axis, var_247);
                                var_249 = wp::load(var_248);
                                var_250 = wp::copy(var_249);
                                // act = joint_act[qd_start + lin_axis_count + 2]                 <L 755>
                                var_251 = wp::add(var_60, var_66);
                                var_252 = wp::add(var_251, var_110);
                                var_253 = wp::address(var_joint_act, var_252);
                                var_254 = wp::load(var_253);
                                var_255 = wp::copy(var_254);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 756>
                                var_256 = wp::transform_vector(var_37, var_250);
                                // t_total += act * a_p                                           <L 757>
                                var_257 = wp::mul(var_255, var_256);
                                var_258 = wp::add(var_241, var_257);
                            }
                            var_259 = wp::select(var_245, var_241, var_258);
                            var_260 = wp::select(var_245, var_242, var_250);
                            var_261 = wp::select(var_245, var_243, var_255);
                            var_262 = wp::select(var_245, var_244, var_256);
                        }
                        var_263 = wp::select(var_160, var_156, var_259);
                        var_264 = wp::select(var_160, var_96, var_205);
                        var_265 = wp::select(var_160, var_97, var_260);
                        var_266 = wp::select(var_160, var_98, var_261);
                        var_267 = wp::select(var_160, var_99, var_262);
                        if (!var_160) {
                            // print("joint type not handled in apply_joint_torques")             <L 760>
                            wp::print(var_268);
                        }
                    }
                    var_269 = wp::select(var_135, var_263, var_156);
                    var_270 = wp::select(var_135, var_264, var_96);
                    var_271 = wp::select(var_135, var_265, var_97);
                    var_272 = wp::select(var_135, var_266, var_98);
                    var_273 = wp::select(var_135, var_267, var_99);
                }
                var_274 = wp::select(var_101, var_269, var_133);
                var_275 = wp::select(var_101, var_270, var_96);
                var_276 = wp::select(var_101, var_271, var_97);
                var_277 = wp::select(var_101, var_272, var_98);
                var_278 = wp::select(var_101, var_273, var_99);
                var_279 = wp::select(var_101, var_157, var_105);
                var_280 = wp::select(var_101, var_158, var_109);
            }
            var_281 = wp::select(var_86, var_274, var_84);
            var_282 = wp::select(var_86, var_275, var_96);
            var_283 = wp::select(var_86, var_276, var_97);
            var_284 = wp::select(var_86, var_277, var_98);
            var_285 = wp::select(var_86, var_278, var_99);
        }
        var_286 = wp::select(var_74, var_281, var_84);
        var_287 = wp::select(var_74, var_282, var_72);
        var_288 = wp::select(var_74, var_283, var_77);
        var_289 = wp::select(var_74, var_284, var_80);
        var_290 = wp::select(var_74, var_285, var_81);
        // if id_p >= 0:                                                                          <L 763>
        var_291 = (var_17 >= var_28);
        if (var_291) {
            // wp.atomic_add(body_f, id_p, wp.spatial_vector(t_total + wp.cross(r_p, f_total), f_total))       <L 764>
            var_292 = wp::cross(var_42, var_287);
            var_293 = wp::add(var_286, var_292);
            var_294 = wp::vec_t<6,wp::float32>(var_293, var_287);
            var_295 = wp::atomic_add(var_body_f, var_17, var_294);
        }
        // wp.atomic_sub(body_f, id_c, wp.spatial_vector(t_total + wp.cross(r_c, f_total), f_total))       <L 765>
        var_296 = wp::cross(var_52, var_287);
        var_297 = wp::add(var_286, var_296);
        var_298 = wp::vec_t<6,wp::float32>(var_297, var_287);
        var_299 = wp::atomic_sub(var_body_f, var_14, var_298);
    }
}

extern "C" __global__ void apply_joint_torques_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::int32> var_joint_q_start,
    wp::array_t<wp::int32> var_joint_qd_start,
    wp::array_t<wp::int32> var_joint_type,
    wp::array_t<wp::int32> var_joint_parent,
    wp::array_t<wp::int32> var_joint_child,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_p,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_c,
    wp::array_t<wp::int32> var_joint_axis_start,
    wp::array_t<wp::int32> var_joint_axis_dim,
    wp::array_t<wp::vec_t<3,wp::float32>> var_joint_axis,
    wp::array_t<wp::float32> var_joint_act,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_f,
    wp::array_t<wp::transform_t<wp::float32>> adj_body_q,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::array_t<wp::int32> adj_joint_q_start,
    wp::array_t<wp::int32> adj_joint_qd_start,
    wp::array_t<wp::int32> adj_joint_type,
    wp::array_t<wp::int32> adj_joint_parent,
    wp::array_t<wp::int32> adj_joint_child,
    wp::array_t<wp::transform_t<wp::float32>> adj_joint_X_p,
    wp::array_t<wp::transform_t<wp::float32>> adj_joint_X_c,
    wp::array_t<wp::int32> adj_joint_axis_start,
    wp::array_t<wp::int32> adj_joint_axis_dim,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_joint_axis,
    wp::array_t<wp::float32> adj_joint_act,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_f)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        const wp::int32 var_4 = 3;
        bool var_5;
        const wp::int32 var_6 = 4;
        bool var_7;
        const wp::int32 var_8 = 7;
        bool var_9;
        const wp::int32 var_10 = 2;
        bool var_11;
        wp::int32* var_12;
        wp::int32 var_13;
        wp::int32 var_14;
        wp::int32* var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::transform_t<wp::float32>* var_18;
        wp::transform_t<wp::float32> var_19;
        wp::transform_t<wp::float32> var_20;
        wp::transform_t<wp::float32>* var_21;
        wp::transform_t<wp::float32> var_22;
        wp::transform_t<wp::float32> var_23;
        wp::transform_t<wp::float32> var_24;
        wp::transform_t<wp::float32> var_25;
        const wp::float32 var_26 = 0.0;
        wp::vec_t<3,wp::float32> var_27;
        const wp::int32 var_28 = 0;
        bool var_29;
        wp::transform_t<wp::float32>* var_30;
        wp::transform_t<wp::float32> var_31;
        wp::transform_t<wp::float32> var_32;
        wp::transform_t<wp::float32> var_33;
        wp::vec_t<3,wp::float32>* var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::transform_t<wp::float32> var_37;
        wp::transform_t<wp::float32> var_38;
        wp::vec_t<3,wp::float32> var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::vec_t<3,wp::float32> var_42;
        wp::transform_t<wp::float32>* var_43;
        wp::transform_t<wp::float32> var_44;
        wp::transform_t<wp::float32> var_45;
        wp::transform_t<wp::float32> var_46;
        wp::vec_t<3,wp::float32>* var_47;
        wp::vec_t<3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::quat_t<wp::float32> var_53;
        wp::quat_t<wp::float32> var_54;
        wp::int32* var_55;
        wp::int32 var_56;
        wp::int32 var_57;
        wp::int32* var_58;
        wp::int32 var_59;
        wp::int32 var_60;
        wp::int32* var_61;
        wp::int32 var_62;
        wp::int32 var_63;
        wp::int32* var_64;
        wp::int32 var_65;
        wp::int32 var_66;
        const wp::int32 var_67 = 1;
        wp::int32* var_68;
        wp::int32 var_69;
        wp::int32 var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        const wp::int32 var_73 = 1;
        bool var_74;
        wp::vec_t<3,wp::float32>* var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::vec_t<3,wp::float32> var_77;
        wp::float32* var_78;
        wp::float32 var_79;
        wp::float32 var_80;
        wp::vec_t<3,wp::float32> var_81;
        wp::vec_t<3,wp::float32> var_82;
        wp::vec_t<3,wp::float32> var_83;
        wp::vec_t<3,wp::float32> var_84;
        const wp::int32 var_85 = 0;
        bool var_86;
        wp::vec_t<3,wp::float32>* var_87;
        wp::vec_t<3,wp::float32> var_88;
        wp::vec_t<3,wp::float32> var_89;
        wp::float32* var_90;
        wp::float32 var_91;
        wp::float32 var_92;
        wp::vec_t<3,wp::float32> var_93;
        wp::vec_t<3,wp::float32> var_94;
        wp::vec_t<3,wp::float32> var_95;
        wp::vec_t<3,wp::float32> var_96;
        wp::vec_t<3,wp::float32> var_97;
        wp::float32 var_98;
        wp::vec_t<3,wp::float32> var_99;
        const wp::int32 var_100 = 5;
        bool var_101;
        wp::int32 var_102;
        wp::vec_t<3,wp::float32>* var_103;
        wp::vec_t<3,wp::float32> var_104;
        wp::vec_t<3,wp::float32> var_105;
        wp::int32 var_106;
        wp::vec_t<3,wp::float32>* var_107;
        wp::vec_t<3,wp::float32> var_108;
        wp::vec_t<3,wp::float32> var_109;
        const wp::int32 var_110 = 2;
        wp::int32 var_111;
        wp::vec_t<3,wp::float32>* var_112;
        wp::vec_t<3,wp::float32> var_113;
        wp::vec_t<3,wp::float32> var_114;
        wp::int32 var_115;
        wp::float32* var_116;
        wp::vec_t<3,wp::float32> var_117;
        wp::float32 var_118;
        wp::vec_t<3,wp::float32> var_119;
        wp::vec_t<3,wp::float32> var_120;
        wp::int32 var_121;
        wp::float32* var_122;
        wp::vec_t<3,wp::float32> var_123;
        wp::float32 var_124;
        wp::vec_t<3,wp::float32> var_125;
        wp::vec_t<3,wp::float32> var_126;
        wp::int32 var_127;
        wp::float32* var_128;
        wp::vec_t<3,wp::float32> var_129;
        wp::float32 var_130;
        wp::vec_t<3,wp::float32> var_131;
        wp::vec_t<3,wp::float32> var_132;
        wp::vec_t<3,wp::float32> var_133;
        const wp::int32 var_134 = 6;
        bool var_135;
        wp::int32 var_136;
        wp::vec_t<3,wp::float32>* var_137;
        wp::vec_t<3,wp::float32> var_138;
        wp::vec_t<3,wp::float32> var_139;
        wp::int32 var_140;
        wp::vec_t<3,wp::float32>* var_141;
        wp::vec_t<3,wp::float32> var_142;
        wp::vec_t<3,wp::float32> var_143;
        wp::int32 var_144;
        wp::float32* var_145;
        wp::vec_t<3,wp::float32> var_146;
        wp::float32 var_147;
        wp::vec_t<3,wp::float32> var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::int32 var_150;
        wp::float32* var_151;
        wp::vec_t<3,wp::float32> var_152;
        wp::float32 var_153;
        wp::vec_t<3,wp::float32> var_154;
        wp::vec_t<3,wp::float32> var_155;
        wp::vec_t<3,wp::float32> var_156;
        wp::vec_t<3,wp::float32> var_157;
        wp::vec_t<3,wp::float32> var_158;
        const wp::int32 var_159 = 8;
        bool var_160;
        bool var_161;
        wp::int32 var_162;
        wp::vec_t<3,wp::float32>* var_163;
        wp::vec_t<3,wp::float32> var_164;
        wp::vec_t<3,wp::float32> var_165;
        wp::int32 var_166;
        wp::float32* var_167;
        wp::float32 var_168;
        wp::float32 var_169;
        wp::vec_t<3,wp::float32> var_170;
        wp::vec_t<3,wp::float32> var_171;
        wp::vec_t<3,wp::float32> var_172;
        wp::vec_t<3,wp::float32> var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::float32 var_175;
        wp::vec_t<3,wp::float32> var_176;
        bool var_177;
        wp::int32 var_178;
        wp::vec_t<3,wp::float32>* var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::int32 var_182;
        wp::float32* var_183;
        wp::float32 var_184;
        wp::float32 var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::vec_t<3,wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::float32 var_191;
        wp::vec_t<3,wp::float32> var_192;
        bool var_193;
        wp::int32 var_194;
        wp::vec_t<3,wp::float32>* var_195;
        wp::vec_t<3,wp::float32> var_196;
        wp::vec_t<3,wp::float32> var_197;
        wp::int32 var_198;
        wp::float32* var_199;
        wp::float32 var_200;
        wp::float32 var_201;
        wp::vec_t<3,wp::float32> var_202;
        wp::vec_t<3,wp::float32> var_203;
        wp::vec_t<3,wp::float32> var_204;
        wp::vec_t<3,wp::float32> var_205;
        wp::vec_t<3,wp::float32> var_206;
        wp::float32 var_207;
        wp::vec_t<3,wp::float32> var_208;
        bool var_209;
        wp::int32 var_210;
        wp::int32 var_211;
        wp::vec_t<3,wp::float32>* var_212;
        wp::vec_t<3,wp::float32> var_213;
        wp::vec_t<3,wp::float32> var_214;
        wp::int32 var_215;
        wp::int32 var_216;
        wp::float32* var_217;
        wp::float32 var_218;
        wp::float32 var_219;
        wp::vec_t<3,wp::float32> var_220;
        wp::vec_t<3,wp::float32> var_221;
        wp::vec_t<3,wp::float32> var_222;
        wp::vec_t<3,wp::float32> var_223;
        wp::vec_t<3,wp::float32> var_224;
        wp::float32 var_225;
        wp::vec_t<3,wp::float32> var_226;
        bool var_227;
        wp::int32 var_228;
        wp::int32 var_229;
        wp::vec_t<3,wp::float32>* var_230;
        wp::vec_t<3,wp::float32> var_231;
        wp::vec_t<3,wp::float32> var_232;
        wp::int32 var_233;
        wp::int32 var_234;
        wp::float32* var_235;
        wp::float32 var_236;
        wp::float32 var_237;
        wp::vec_t<3,wp::float32> var_238;
        wp::vec_t<3,wp::float32> var_239;
        wp::vec_t<3,wp::float32> var_240;
        wp::vec_t<3,wp::float32> var_241;
        wp::vec_t<3,wp::float32> var_242;
        wp::float32 var_243;
        wp::vec_t<3,wp::float32> var_244;
        bool var_245;
        wp::int32 var_246;
        wp::int32 var_247;
        wp::vec_t<3,wp::float32>* var_248;
        wp::vec_t<3,wp::float32> var_249;
        wp::vec_t<3,wp::float32> var_250;
        wp::int32 var_251;
        wp::int32 var_252;
        wp::float32* var_253;
        wp::float32 var_254;
        wp::float32 var_255;
        wp::vec_t<3,wp::float32> var_256;
        wp::vec_t<3,wp::float32> var_257;
        wp::vec_t<3,wp::float32> var_258;
        wp::vec_t<3,wp::float32> var_259;
        wp::vec_t<3,wp::float32> var_260;
        wp::float32 var_261;
        wp::vec_t<3,wp::float32> var_262;
        wp::vec_t<3,wp::float32> var_263;
        wp::vec_t<3,wp::float32> var_264;
        wp::vec_t<3,wp::float32> var_265;
        wp::float32 var_266;
        wp::vec_t<3,wp::float32> var_267;
        const wp::str var_268 = "joint type not handled in apply_joint_torques";
        wp::vec_t<3,wp::float32> var_269;
        wp::vec_t<3,wp::float32> var_270;
        wp::vec_t<3,wp::float32> var_271;
        wp::float32 var_272;
        wp::vec_t<3,wp::float32> var_273;
        wp::vec_t<3,wp::float32> var_274;
        wp::vec_t<3,wp::float32> var_275;
        wp::vec_t<3,wp::float32> var_276;
        wp::float32 var_277;
        wp::vec_t<3,wp::float32> var_278;
        wp::vec_t<3,wp::float32> var_279;
        wp::vec_t<3,wp::float32> var_280;
        wp::vec_t<3,wp::float32> var_281;
        wp::vec_t<3,wp::float32> var_282;
        wp::vec_t<3,wp::float32> var_283;
        wp::float32 var_284;
        wp::vec_t<3,wp::float32> var_285;
        wp::vec_t<3,wp::float32> var_286;
        wp::vec_t<3,wp::float32> var_287;
        wp::vec_t<3,wp::float32> var_288;
        wp::float32 var_289;
        wp::vec_t<3,wp::float32> var_290;
        bool var_291;
        wp::vec_t<3,wp::float32> var_292;
        wp::vec_t<3,wp::float32> var_293;
        wp::vec_t<6,wp::float32> var_294;
        wp::vec_t<6,wp::float32> var_295;
        wp::vec_t<3,wp::float32> var_296;
        wp::vec_t<3,wp::float32> var_297;
        wp::vec_t<6,wp::float32> var_298;
        wp::vec_t<6,wp::float32> var_299;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        bool adj_5 = {};
        wp::int32 adj_6 = {};
        bool adj_7 = {};
        wp::int32 adj_8 = {};
        bool adj_9 = {};
        wp::int32 adj_10 = {};
        bool adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        wp::int32 adj_17 = {};
        wp::transform_t<wp::float32> adj_18 = {};
        wp::transform_t<wp::float32> adj_19 = {};
        wp::transform_t<wp::float32> adj_20 = {};
        wp::transform_t<wp::float32> adj_21 = {};
        wp::transform_t<wp::float32> adj_22 = {};
        wp::transform_t<wp::float32> adj_23 = {};
        wp::transform_t<wp::float32> adj_24 = {};
        wp::transform_t<wp::float32> adj_25 = {};
        wp::float32 adj_26 = {};
        wp::vec_t<3,wp::float32> adj_27 = {};
        wp::int32 adj_28 = {};
        bool adj_29 = {};
        wp::transform_t<wp::float32> adj_30 = {};
        wp::transform_t<wp::float32> adj_31 = {};
        wp::transform_t<wp::float32> adj_32 = {};
        wp::transform_t<wp::float32> adj_33 = {};
        wp::vec_t<3,wp::float32> adj_34 = {};
        wp::vec_t<3,wp::float32> adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::transform_t<wp::float32> adj_37 = {};
        wp::transform_t<wp::float32> adj_38 = {};
        wp::vec_t<3,wp::float32> adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::vec_t<3,wp::float32> adj_41 = {};
        wp::vec_t<3,wp::float32> adj_42 = {};
        wp::transform_t<wp::float32> adj_43 = {};
        wp::transform_t<wp::float32> adj_44 = {};
        wp::transform_t<wp::float32> adj_45 = {};
        wp::transform_t<wp::float32> adj_46 = {};
        wp::vec_t<3,wp::float32> adj_47 = {};
        wp::vec_t<3,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        wp::vec_t<3,wp::float32> adj_51 = {};
        wp::vec_t<3,wp::float32> adj_52 = {};
        wp::quat_t<wp::float32> adj_53 = {};
        wp::quat_t<wp::float32> adj_54 = {};
        wp::int32 adj_55 = {};
        wp::int32 adj_56 = {};
        wp::int32 adj_57 = {};
        wp::int32 adj_58 = {};
        wp::int32 adj_59 = {};
        wp::int32 adj_60 = {};
        wp::int32 adj_61 = {};
        wp::int32 adj_62 = {};
        wp::int32 adj_63 = {};
        wp::int32 adj_64 = {};
        wp::int32 adj_65 = {};
        wp::int32 adj_66 = {};
        wp::int32 adj_67 = {};
        wp::int32 adj_68 = {};
        wp::int32 adj_69 = {};
        wp::int32 adj_70 = {};
        wp::vec_t<3,wp::float32> adj_71 = {};
        wp::vec_t<3,wp::float32> adj_72 = {};
        wp::int32 adj_73 = {};
        bool adj_74 = {};
        wp::vec_t<3,wp::float32> adj_75 = {};
        wp::vec_t<3,wp::float32> adj_76 = {};
        wp::vec_t<3,wp::float32> adj_77 = {};
        wp::float32 adj_78 = {};
        wp::float32 adj_79 = {};
        wp::float32 adj_80 = {};
        wp::vec_t<3,wp::float32> adj_81 = {};
        wp::vec_t<3,wp::float32> adj_82 = {};
        wp::vec_t<3,wp::float32> adj_83 = {};
        wp::vec_t<3,wp::float32> adj_84 = {};
        wp::int32 adj_85 = {};
        bool adj_86 = {};
        wp::vec_t<3,wp::float32> adj_87 = {};
        wp::vec_t<3,wp::float32> adj_88 = {};
        wp::vec_t<3,wp::float32> adj_89 = {};
        wp::float32 adj_90 = {};
        wp::float32 adj_91 = {};
        wp::float32 adj_92 = {};
        wp::vec_t<3,wp::float32> adj_93 = {};
        wp::vec_t<3,wp::float32> adj_94 = {};
        wp::vec_t<3,wp::float32> adj_95 = {};
        wp::vec_t<3,wp::float32> adj_96 = {};
        wp::vec_t<3,wp::float32> adj_97 = {};
        wp::float32 adj_98 = {};
        wp::vec_t<3,wp::float32> adj_99 = {};
        wp::int32 adj_100 = {};
        bool adj_101 = {};
        wp::int32 adj_102 = {};
        wp::vec_t<3,wp::float32> adj_103 = {};
        wp::vec_t<3,wp::float32> adj_104 = {};
        wp::vec_t<3,wp::float32> adj_105 = {};
        wp::int32 adj_106 = {};
        wp::vec_t<3,wp::float32> adj_107 = {};
        wp::vec_t<3,wp::float32> adj_108 = {};
        wp::vec_t<3,wp::float32> adj_109 = {};
        wp::int32 adj_110 = {};
        wp::int32 adj_111 = {};
        wp::vec_t<3,wp::float32> adj_112 = {};
        wp::vec_t<3,wp::float32> adj_113 = {};
        wp::vec_t<3,wp::float32> adj_114 = {};
        wp::int32 adj_115 = {};
        wp::float32 adj_116 = {};
        wp::vec_t<3,wp::float32> adj_117 = {};
        wp::float32 adj_118 = {};
        wp::vec_t<3,wp::float32> adj_119 = {};
        wp::vec_t<3,wp::float32> adj_120 = {};
        wp::int32 adj_121 = {};
        wp::float32 adj_122 = {};
        wp::vec_t<3,wp::float32> adj_123 = {};
        wp::float32 adj_124 = {};
        wp::vec_t<3,wp::float32> adj_125 = {};
        wp::vec_t<3,wp::float32> adj_126 = {};
        wp::int32 adj_127 = {};
        wp::float32 adj_128 = {};
        wp::vec_t<3,wp::float32> adj_129 = {};
        wp::float32 adj_130 = {};
        wp::vec_t<3,wp::float32> adj_131 = {};
        wp::vec_t<3,wp::float32> adj_132 = {};
        wp::vec_t<3,wp::float32> adj_133 = {};
        wp::int32 adj_134 = {};
        bool adj_135 = {};
        wp::int32 adj_136 = {};
        wp::vec_t<3,wp::float32> adj_137 = {};
        wp::vec_t<3,wp::float32> adj_138 = {};
        wp::vec_t<3,wp::float32> adj_139 = {};
        wp::int32 adj_140 = {};
        wp::vec_t<3,wp::float32> adj_141 = {};
        wp::vec_t<3,wp::float32> adj_142 = {};
        wp::vec_t<3,wp::float32> adj_143 = {};
        wp::int32 adj_144 = {};
        wp::float32 adj_145 = {};
        wp::vec_t<3,wp::float32> adj_146 = {};
        wp::float32 adj_147 = {};
        wp::vec_t<3,wp::float32> adj_148 = {};
        wp::vec_t<3,wp::float32> adj_149 = {};
        wp::int32 adj_150 = {};
        wp::float32 adj_151 = {};
        wp::vec_t<3,wp::float32> adj_152 = {};
        wp::float32 adj_153 = {};
        wp::vec_t<3,wp::float32> adj_154 = {};
        wp::vec_t<3,wp::float32> adj_155 = {};
        wp::vec_t<3,wp::float32> adj_156 = {};
        wp::vec_t<3,wp::float32> adj_157 = {};
        wp::vec_t<3,wp::float32> adj_158 = {};
        wp::int32 adj_159 = {};
        bool adj_160 = {};
        bool adj_161 = {};
        wp::int32 adj_162 = {};
        wp::vec_t<3,wp::float32> adj_163 = {};
        wp::vec_t<3,wp::float32> adj_164 = {};
        wp::vec_t<3,wp::float32> adj_165 = {};
        wp::int32 adj_166 = {};
        wp::float32 adj_167 = {};
        wp::float32 adj_168 = {};
        wp::float32 adj_169 = {};
        wp::vec_t<3,wp::float32> adj_170 = {};
        wp::vec_t<3,wp::float32> adj_171 = {};
        wp::vec_t<3,wp::float32> adj_172 = {};
        wp::vec_t<3,wp::float32> adj_173 = {};
        wp::vec_t<3,wp::float32> adj_174 = {};
        wp::float32 adj_175 = {};
        wp::vec_t<3,wp::float32> adj_176 = {};
        bool adj_177 = {};
        wp::int32 adj_178 = {};
        wp::vec_t<3,wp::float32> adj_179 = {};
        wp::vec_t<3,wp::float32> adj_180 = {};
        wp::vec_t<3,wp::float32> adj_181 = {};
        wp::int32 adj_182 = {};
        wp::float32 adj_183 = {};
        wp::float32 adj_184 = {};
        wp::float32 adj_185 = {};
        wp::vec_t<3,wp::float32> adj_186 = {};
        wp::vec_t<3,wp::float32> adj_187 = {};
        wp::vec_t<3,wp::float32> adj_188 = {};
        wp::vec_t<3,wp::float32> adj_189 = {};
        wp::vec_t<3,wp::float32> adj_190 = {};
        wp::float32 adj_191 = {};
        wp::vec_t<3,wp::float32> adj_192 = {};
        bool adj_193 = {};
        wp::int32 adj_194 = {};
        wp::vec_t<3,wp::float32> adj_195 = {};
        wp::vec_t<3,wp::float32> adj_196 = {};
        wp::vec_t<3,wp::float32> adj_197 = {};
        wp::int32 adj_198 = {};
        wp::float32 adj_199 = {};
        wp::float32 adj_200 = {};
        wp::float32 adj_201 = {};
        wp::vec_t<3,wp::float32> adj_202 = {};
        wp::vec_t<3,wp::float32> adj_203 = {};
        wp::vec_t<3,wp::float32> adj_204 = {};
        wp::vec_t<3,wp::float32> adj_205 = {};
        wp::vec_t<3,wp::float32> adj_206 = {};
        wp::float32 adj_207 = {};
        wp::vec_t<3,wp::float32> adj_208 = {};
        bool adj_209 = {};
        wp::int32 adj_210 = {};
        wp::int32 adj_211 = {};
        wp::vec_t<3,wp::float32> adj_212 = {};
        wp::vec_t<3,wp::float32> adj_213 = {};
        wp::vec_t<3,wp::float32> adj_214 = {};
        wp::int32 adj_215 = {};
        wp::int32 adj_216 = {};
        wp::float32 adj_217 = {};
        wp::float32 adj_218 = {};
        wp::float32 adj_219 = {};
        wp::vec_t<3,wp::float32> adj_220 = {};
        wp::vec_t<3,wp::float32> adj_221 = {};
        wp::vec_t<3,wp::float32> adj_222 = {};
        wp::vec_t<3,wp::float32> adj_223 = {};
        wp::vec_t<3,wp::float32> adj_224 = {};
        wp::float32 adj_225 = {};
        wp::vec_t<3,wp::float32> adj_226 = {};
        bool adj_227 = {};
        wp::int32 adj_228 = {};
        wp::int32 adj_229 = {};
        wp::vec_t<3,wp::float32> adj_230 = {};
        wp::vec_t<3,wp::float32> adj_231 = {};
        wp::vec_t<3,wp::float32> adj_232 = {};
        wp::int32 adj_233 = {};
        wp::int32 adj_234 = {};
        wp::float32 adj_235 = {};
        wp::float32 adj_236 = {};
        wp::float32 adj_237 = {};
        wp::vec_t<3,wp::float32> adj_238 = {};
        wp::vec_t<3,wp::float32> adj_239 = {};
        wp::vec_t<3,wp::float32> adj_240 = {};
        wp::vec_t<3,wp::float32> adj_241 = {};
        wp::vec_t<3,wp::float32> adj_242 = {};
        wp::float32 adj_243 = {};
        wp::vec_t<3,wp::float32> adj_244 = {};
        bool adj_245 = {};
        wp::int32 adj_246 = {};
        wp::int32 adj_247 = {};
        wp::vec_t<3,wp::float32> adj_248 = {};
        wp::vec_t<3,wp::float32> adj_249 = {};
        wp::vec_t<3,wp::float32> adj_250 = {};
        wp::int32 adj_251 = {};
        wp::int32 adj_252 = {};
        wp::float32 adj_253 = {};
        wp::float32 adj_254 = {};
        wp::float32 adj_255 = {};
        wp::vec_t<3,wp::float32> adj_256 = {};
        wp::vec_t<3,wp::float32> adj_257 = {};
        wp::vec_t<3,wp::float32> adj_258 = {};
        wp::vec_t<3,wp::float32> adj_259 = {};
        wp::vec_t<3,wp::float32> adj_260 = {};
        wp::float32 adj_261 = {};
        wp::vec_t<3,wp::float32> adj_262 = {};
        wp::vec_t<3,wp::float32> adj_263 = {};
        wp::vec_t<3,wp::float32> adj_264 = {};
        wp::vec_t<3,wp::float32> adj_265 = {};
        wp::float32 adj_266 = {};
        wp::vec_t<3,wp::float32> adj_267 = {};
        wp::str adj_268 = {};
        wp::vec_t<3,wp::float32> adj_269 = {};
        wp::vec_t<3,wp::float32> adj_270 = {};
        wp::vec_t<3,wp::float32> adj_271 = {};
        wp::float32 adj_272 = {};
        wp::vec_t<3,wp::float32> adj_273 = {};
        wp::vec_t<3,wp::float32> adj_274 = {};
        wp::vec_t<3,wp::float32> adj_275 = {};
        wp::vec_t<3,wp::float32> adj_276 = {};
        wp::float32 adj_277 = {};
        wp::vec_t<3,wp::float32> adj_278 = {};
        wp::vec_t<3,wp::float32> adj_279 = {};
        wp::vec_t<3,wp::float32> adj_280 = {};
        wp::vec_t<3,wp::float32> adj_281 = {};
        wp::vec_t<3,wp::float32> adj_282 = {};
        wp::vec_t<3,wp::float32> adj_283 = {};
        wp::float32 adj_284 = {};
        wp::vec_t<3,wp::float32> adj_285 = {};
        wp::vec_t<3,wp::float32> adj_286 = {};
        wp::vec_t<3,wp::float32> adj_287 = {};
        wp::vec_t<3,wp::float32> adj_288 = {};
        wp::float32 adj_289 = {};
        wp::vec_t<3,wp::float32> adj_290 = {};
        bool adj_291 = {};
        wp::vec_t<3,wp::float32> adj_292 = {};
        wp::vec_t<3,wp::float32> adj_293 = {};
        wp::vec_t<6,wp::float32> adj_294 = {};
        wp::vec_t<6,wp::float32> adj_295 = {};
        wp::vec_t<3,wp::float32> adj_296 = {};
        wp::vec_t<3,wp::float32> adj_297 = {};
        wp::vec_t<6,wp::float32> adj_298 = {};
        wp::vec_t<6,wp::float32> adj_299 = {};
        //---------
        // forward
        // def apply_joint_torques(                                                               <L 593>
        // tid = wp.tid()                                                                         <L 609>
        var_0 = builtin_tid1d();
        // type = joint_type[tid]                                                                 <L 610>
        var_1 = wp::address(var_joint_type, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // if type == fs5Model.JOINT_FIXED:                                                       <L 611>
        var_5 = (var_3 == var_4);
        if (var_5) {
            // return                                                                             <L 612>
            goto label0;
        }
        // if type == fs5Model.JOINT_FREE:                                                        <L 613>
        var_7 = (var_3 == var_6);
        if (var_7) {
            // return                                                                             <L 614>
            goto label1;
        }
        // if type == fs5Model.JOINT_DISTANCE:                                                    <L 615>
        var_9 = (var_3 == var_8);
        if (var_9) {
            // return                                                                             <L 616>
            goto label2;
        }
        // if type == fs5Model.JOINT_BALL:                                                        <L 617>
        var_11 = (var_3 == var_10);
        if (var_11) {
            // return                                                                             <L 618>
            goto label3;
        }
        // id_c = joint_child[tid]                                                                <L 621>
        var_12 = wp::address(var_joint_child, var_0);
        var_13 = wp::load(var_12);
        var_14 = wp::copy(var_13);
        // id_p = joint_parent[tid]                                                               <L 622>
        var_15 = wp::address(var_joint_parent, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::copy(var_16);
        // X_pj = joint_X_p[tid]                                                                  <L 624>
        var_18 = wp::address(var_joint_X_p, var_0);
        var_19 = wp::load(var_18);
        var_20 = wp::copy(var_19);
        // X_cj = joint_X_c[tid]                                                                  <L 625>
        var_21 = wp::address(var_joint_X_c, var_0);
        var_22 = wp::load(var_21);
        var_23 = wp::copy(var_22);
        // X_wp = X_pj                                                                            <L 627>
        var_24 = wp::copy(var_20);
        // pose_p = X_pj                                                                          <L 628>
        var_25 = wp::copy(var_20);
        // com_p = wp.vec3(0.0)                                                                   <L 629>
        var_27 = wp::vec_t<3,wp::float32>(var_26);
        // if id_p >= 0:                                                                          <L 631>
        var_29 = (var_17 >= var_28);
        if (var_29) {
            // pose_p = body_q[id_p]                                                              <L 632>
            var_30 = wp::address(var_body_q, var_17);
            var_31 = wp::load(var_30);
            var_32 = wp::copy(var_31);
            // X_wp = pose_p * X_wp                                                               <L 633>
            var_33 = wp::mul(var_32, var_24);
            // com_p = body_com[id_p]                                                             <L 634>
            var_34 = wp::address(var_body_com, var_17);
            var_35 = wp::load(var_34);
            var_36 = wp::copy(var_35);
        }
        var_37 = wp::select(var_29, var_24, var_33);
        var_38 = wp::select(var_29, var_25, var_32);
        var_39 = wp::select(var_29, var_27, var_36);
        // r_p = wp.transform_get_translation(X_wp) - wp.transform_point(pose_p, com_p)           <L 635>
        var_40 = wp::transform_get_translation(var_37);
        var_41 = wp::transform_point(var_38, var_39);
        var_42 = wp::sub(var_40, var_41);
        // pose_c = body_q[id_c]                                                                  <L 638>
        var_43 = wp::address(var_body_q, var_14);
        var_44 = wp::load(var_43);
        var_45 = wp::copy(var_44);
        // X_wc = pose_c                                                                          <L 639>
        var_46 = wp::copy(var_45);
        // com_c = body_com[id_c]                                                                 <L 640>
        var_47 = wp::address(var_body_com, var_14);
        var_48 = wp::load(var_47);
        var_49 = wp::copy(var_48);
        // r_c = wp.transform_get_translation(X_wc) - wp.transform_point(pose_c, com_c)           <L 641>
        var_50 = wp::transform_get_translation(var_46);
        var_51 = wp::transform_point(var_45, var_49);
        var_52 = wp::sub(var_50, var_51);
        // q_p = wp.transform_get_rotation(X_wp)                                                  <L 644>
        var_53 = wp::transform_get_rotation(var_37);
        // q_c = wp.transform_get_rotation(X_wc)                                                  <L 645>
        var_54 = wp::transform_get_rotation(var_46);
        // q_start = joint_q_start[tid]                                                           <L 648>
        var_55 = wp::address(var_joint_q_start, var_0);
        var_56 = wp::load(var_55);
        var_57 = wp::copy(var_56);
        // qd_start = joint_qd_start[tid]                                                         <L 649>
        var_58 = wp::address(var_joint_qd_start, var_0);
        var_59 = wp::load(var_58);
        var_60 = wp::copy(var_59);
        // axis_start = joint_axis_start[tid]                                                     <L 650>
        var_61 = wp::address(var_joint_axis_start, var_0);
        var_62 = wp::load(var_61);
        var_63 = wp::copy(var_62);
        // lin_axis_count = joint_axis_dim[tid, 0]                                                <L 651>
        var_64 = wp::address(var_joint_axis_dim, var_0, var_28);
        var_65 = wp::load(var_64);
        var_66 = wp::copy(var_65);
        // ang_axis_count = joint_axis_dim[tid, 1]                                                <L 652>
        var_68 = wp::address(var_joint_axis_dim, var_0, var_67);
        var_69 = wp::load(var_68);
        var_70 = wp::copy(var_69);
        // t_total = wp.vec3()                                                                    <L 655>
        var_71 = wp::vec_t<3,wp::float32>();
        // f_total = wp.vec3()                                                                    <L 656>
        var_72 = wp::vec_t<3,wp::float32>();
        // if type == fs5Model.JOINT_REVOLUTE:                                                    <L 659>
        var_74 = (var_3 == var_73);
        if (var_74) {
            // axis = joint_axis[axis_start]                                                      <L 660>
            var_75 = wp::address(var_joint_axis, var_63);
            var_76 = wp::load(var_75);
            var_77 = wp::copy(var_76);
            // act = joint_act[qd_start]                                                          <L 661>
            var_78 = wp::address(var_joint_act, var_60);
            var_79 = wp::load(var_78);
            var_80 = wp::copy(var_79);
            // a_p = wp.transform_vector(X_wp, axis)                                              <L 662>
            var_81 = wp::transform_vector(var_37, var_77);
            // t_total += act * a_p                                                               <L 663>
            var_82 = wp::mul(var_80, var_81);
            var_83 = wp::add(var_71, var_82);
        }
        var_84 = wp::select(var_74, var_71, var_83);
        if (!var_74) {
            // elif type == fs5Model.JOINT_PRISMATIC:                                             <L 664>
            var_86 = (var_3 == var_85);
            if (var_86) {
                // axis = joint_axis[axis_start]                                                  <L 665>
                var_87 = wp::address(var_joint_axis, var_63);
                var_88 = wp::load(var_87);
                var_89 = wp::copy(var_88);
                // act = joint_act[qd_start]                                                      <L 666>
                var_90 = wp::address(var_joint_act, var_60);
                var_91 = wp::load(var_90);
                var_92 = wp::copy(var_91);
                // a_p = wp.transform_vector(X_wp, axis)                                          <L 667>
                var_93 = wp::transform_vector(var_37, var_89);
                // f_total += act * a_p                                                           <L 668>
                var_94 = wp::mul(var_92, var_93);
                var_95 = wp::add(var_72, var_94);
            }
            var_96 = wp::select(var_86, var_72, var_95);
            var_97 = wp::select(var_86, var_77, var_89);
            var_98 = wp::select(var_86, var_80, var_92);
            var_99 = wp::select(var_86, var_81, var_93);
            if (!var_86) {
                // elif type == fs5Model.JOINT_COMPOUND:                                          <L 669>
                var_101 = (var_3 == var_100);
                if (var_101) {
                    // axis_0 = joint_axis[axis_start + 0]                                        <L 689>
                    var_102 = wp::add(var_63, var_28);
                    var_103 = wp::address(var_joint_axis, var_102);
                    var_104 = wp::load(var_103);
                    var_105 = wp::copy(var_104);
                    // axis_1 = joint_axis[axis_start + 1]                                        <L 690>
                    var_106 = wp::add(var_63, var_67);
                    var_107 = wp::address(var_joint_axis, var_106);
                    var_108 = wp::load(var_107);
                    var_109 = wp::copy(var_108);
                    // axis_2 = joint_axis[axis_start + 2]                                        <L 691>
                    var_111 = wp::add(var_63, var_110);
                    var_112 = wp::address(var_joint_axis, var_111);
                    var_113 = wp::load(var_112);
                    var_114 = wp::copy(var_113);
                    // t_total += joint_act[qd_start + 0] * wp.transform_vector(X_wp, axis_0)       <L 692>
                    var_115 = wp::add(var_60, var_28);
                    var_116 = wp::address(var_joint_act, var_115);
                    var_117 = wp::transform_vector(var_37, var_105);
                    var_118 = wp::load(var_116);
                    var_119 = wp::mul(var_118, var_117);
                    var_120 = wp::add(var_84, var_119);
                    // t_total += joint_act[qd_start + 1] * wp.transform_vector(X_wp, axis_1)       <L 693>
                    var_121 = wp::add(var_60, var_67);
                    var_122 = wp::address(var_joint_act, var_121);
                    var_123 = wp::transform_vector(var_37, var_109);
                    var_124 = wp::load(var_122);
                    var_125 = wp::mul(var_124, var_123);
                    var_126 = wp::add(var_120, var_125);
                    // t_total += joint_act[qd_start + 2] * wp.transform_vector(X_wp, axis_2)       <L 694>
                    var_127 = wp::add(var_60, var_110);
                    var_128 = wp::address(var_joint_act, var_127);
                    var_129 = wp::transform_vector(var_37, var_114);
                    var_130 = wp::load(var_128);
                    var_131 = wp::mul(var_130, var_129);
                    var_132 = wp::add(var_126, var_131);
                }
                var_133 = wp::select(var_101, var_84, var_132);
                if (!var_101) {
                    // elif type == fs5Model.JOINT_UNIVERSAL:                                     <L 696>
                    var_135 = (var_3 == var_134);
                    if (var_135) {
                        // axis_0 = joint_axis[axis_start + 0]                                    <L 718>
                        var_136 = wp::add(var_63, var_28);
                        var_137 = wp::address(var_joint_axis, var_136);
                        var_138 = wp::load(var_137);
                        var_139 = wp::copy(var_138);
                        // axis_1 = joint_axis[axis_start + 1]                                    <L 719>
                        var_140 = wp::add(var_63, var_67);
                        var_141 = wp::address(var_joint_axis, var_140);
                        var_142 = wp::load(var_141);
                        var_143 = wp::copy(var_142);
                        // t_total += joint_act[qd_start + 0] * wp.transform_vector(X_wp, axis_0)       <L 720>
                        var_144 = wp::add(var_60, var_28);
                        var_145 = wp::address(var_joint_act, var_144);
                        var_146 = wp::transform_vector(var_37, var_139);
                        var_147 = wp::load(var_145);
                        var_148 = wp::mul(var_147, var_146);
                        var_149 = wp::add(var_133, var_148);
                        // t_total += joint_act[qd_start + 1] * wp.transform_vector(X_wp, axis_1)       <L 721>
                        var_150 = wp::add(var_60, var_67);
                        var_151 = wp::address(var_joint_act, var_150);
                        var_152 = wp::transform_vector(var_37, var_143);
                        var_153 = wp::load(var_151);
                        var_154 = wp::mul(var_153, var_152);
                        var_155 = wp::add(var_149, var_154);
                    }
                    var_156 = wp::select(var_135, var_133, var_155);
                    var_157 = wp::select(var_135, var_105, var_139);
                    var_158 = wp::select(var_135, var_109, var_143);
                    if (!var_135) {
                        // elif type == fs5Model.JOINT_D6:                                        <L 723>
                        var_160 = (var_3 == var_159);
                        if (var_160) {
                            // if lin_axis_count > 0:                                             <L 727>
                            var_161 = (var_66 > var_28);
                            if (var_161) {
                                // axis = joint_axis[axis_start + 0]                              <L 728>
                                var_162 = wp::add(var_63, var_28);
                                var_163 = wp::address(var_joint_axis, var_162);
                                var_164 = wp::load(var_163);
                                var_165 = wp::copy(var_164);
                                // act = joint_act[qd_start + 0]                                  <L 729>
                                var_166 = wp::add(var_60, var_28);
                                var_167 = wp::address(var_joint_act, var_166);
                                var_168 = wp::load(var_167);
                                var_169 = wp::copy(var_168);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 730>
                                var_170 = wp::transform_vector(var_37, var_165);
                                // f_total += act * a_p                                           <L 731>
                                var_171 = wp::mul(var_169, var_170);
                                var_172 = wp::add(var_96, var_171);
                            }
                            var_173 = wp::select(var_161, var_96, var_172);
                            var_174 = wp::select(var_161, var_97, var_165);
                            var_175 = wp::select(var_161, var_98, var_169);
                            var_176 = wp::select(var_161, var_99, var_170);
                            // if lin_axis_count > 1:                                             <L 732>
                            var_177 = (var_66 > var_67);
                            if (var_177) {
                                // axis = joint_axis[axis_start + 1]                              <L 733>
                                var_178 = wp::add(var_63, var_67);
                                var_179 = wp::address(var_joint_axis, var_178);
                                var_180 = wp::load(var_179);
                                var_181 = wp::copy(var_180);
                                // act = joint_act[qd_start + 1]                                  <L 734>
                                var_182 = wp::add(var_60, var_67);
                                var_183 = wp::address(var_joint_act, var_182);
                                var_184 = wp::load(var_183);
                                var_185 = wp::copy(var_184);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 735>
                                var_186 = wp::transform_vector(var_37, var_181);
                                // f_total += act * a_p                                           <L 736>
                                var_187 = wp::mul(var_185, var_186);
                                var_188 = wp::add(var_173, var_187);
                            }
                            var_189 = wp::select(var_177, var_173, var_188);
                            var_190 = wp::select(var_177, var_174, var_181);
                            var_191 = wp::select(var_177, var_175, var_185);
                            var_192 = wp::select(var_177, var_176, var_186);
                            // if lin_axis_count > 2:                                             <L 737>
                            var_193 = (var_66 > var_110);
                            if (var_193) {
                                // axis = joint_axis[axis_start + 2]                              <L 738>
                                var_194 = wp::add(var_63, var_110);
                                var_195 = wp::address(var_joint_axis, var_194);
                                var_196 = wp::load(var_195);
                                var_197 = wp::copy(var_196);
                                // act = joint_act[qd_start + 2]                                  <L 739>
                                var_198 = wp::add(var_60, var_110);
                                var_199 = wp::address(var_joint_act, var_198);
                                var_200 = wp::load(var_199);
                                var_201 = wp::copy(var_200);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 740>
                                var_202 = wp::transform_vector(var_37, var_197);
                                // f_total += act * a_p                                           <L 741>
                                var_203 = wp::mul(var_201, var_202);
                                var_204 = wp::add(var_189, var_203);
                            }
                            var_205 = wp::select(var_193, var_189, var_204);
                            var_206 = wp::select(var_193, var_190, var_197);
                            var_207 = wp::select(var_193, var_191, var_201);
                            var_208 = wp::select(var_193, var_192, var_202);
                            // if ang_axis_count > 0:                                             <L 743>
                            var_209 = (var_70 > var_28);
                            if (var_209) {
                                // axis = joint_axis[axis_start + lin_axis_count + 0]             <L 744>
                                var_210 = wp::add(var_63, var_66);
                                var_211 = wp::add(var_210, var_28);
                                var_212 = wp::address(var_joint_axis, var_211);
                                var_213 = wp::load(var_212);
                                var_214 = wp::copy(var_213);
                                // act = joint_act[qd_start + lin_axis_count + 0]                 <L 745>
                                var_215 = wp::add(var_60, var_66);
                                var_216 = wp::add(var_215, var_28);
                                var_217 = wp::address(var_joint_act, var_216);
                                var_218 = wp::load(var_217);
                                var_219 = wp::copy(var_218);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 746>
                                var_220 = wp::transform_vector(var_37, var_214);
                                // t_total += act * a_p                                           <L 747>
                                var_221 = wp::mul(var_219, var_220);
                                var_222 = wp::add(var_156, var_221);
                            }
                            var_223 = wp::select(var_209, var_156, var_222);
                            var_224 = wp::select(var_209, var_206, var_214);
                            var_225 = wp::select(var_209, var_207, var_219);
                            var_226 = wp::select(var_209, var_208, var_220);
                            // if ang_axis_count > 1:                                             <L 748>
                            var_227 = (var_70 > var_67);
                            if (var_227) {
                                // axis = joint_axis[axis_start + lin_axis_count + 1]             <L 749>
                                var_228 = wp::add(var_63, var_66);
                                var_229 = wp::add(var_228, var_67);
                                var_230 = wp::address(var_joint_axis, var_229);
                                var_231 = wp::load(var_230);
                                var_232 = wp::copy(var_231);
                                // act = joint_act[qd_start + lin_axis_count + 1]                 <L 750>
                                var_233 = wp::add(var_60, var_66);
                                var_234 = wp::add(var_233, var_67);
                                var_235 = wp::address(var_joint_act, var_234);
                                var_236 = wp::load(var_235);
                                var_237 = wp::copy(var_236);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 751>
                                var_238 = wp::transform_vector(var_37, var_232);
                                // t_total += act * a_p                                           <L 752>
                                var_239 = wp::mul(var_237, var_238);
                                var_240 = wp::add(var_223, var_239);
                            }
                            var_241 = wp::select(var_227, var_223, var_240);
                            var_242 = wp::select(var_227, var_224, var_232);
                            var_243 = wp::select(var_227, var_225, var_237);
                            var_244 = wp::select(var_227, var_226, var_238);
                            // if ang_axis_count > 2:                                             <L 753>
                            var_245 = (var_70 > var_110);
                            if (var_245) {
                                // axis = joint_axis[axis_start + lin_axis_count + 2]             <L 754>
                                var_246 = wp::add(var_63, var_66);
                                var_247 = wp::add(var_246, var_110);
                                var_248 = wp::address(var_joint_axis, var_247);
                                var_249 = wp::load(var_248);
                                var_250 = wp::copy(var_249);
                                // act = joint_act[qd_start + lin_axis_count + 2]                 <L 755>
                                var_251 = wp::add(var_60, var_66);
                                var_252 = wp::add(var_251, var_110);
                                var_253 = wp::address(var_joint_act, var_252);
                                var_254 = wp::load(var_253);
                                var_255 = wp::copy(var_254);
                                // a_p = wp.transform_vector(X_wp, axis)                          <L 756>
                                var_256 = wp::transform_vector(var_37, var_250);
                                // t_total += act * a_p                                           <L 757>
                                var_257 = wp::mul(var_255, var_256);
                                var_258 = wp::add(var_241, var_257);
                            }
                            var_259 = wp::select(var_245, var_241, var_258);
                            var_260 = wp::select(var_245, var_242, var_250);
                            var_261 = wp::select(var_245, var_243, var_255);
                            var_262 = wp::select(var_245, var_244, var_256);
                        }
                        var_263 = wp::select(var_160, var_156, var_259);
                        var_264 = wp::select(var_160, var_96, var_205);
                        var_265 = wp::select(var_160, var_97, var_260);
                        var_266 = wp::select(var_160, var_98, var_261);
                        var_267 = wp::select(var_160, var_99, var_262);
                        if (!var_160) {
                            // print("joint type not handled in apply_joint_torques")             <L 760>
                            wp::print(var_268);
                        }
                    }
                    var_269 = wp::select(var_135, var_263, var_156);
                    var_270 = wp::select(var_135, var_264, var_96);
                    var_271 = wp::select(var_135, var_265, var_97);
                    var_272 = wp::select(var_135, var_266, var_98);
                    var_273 = wp::select(var_135, var_267, var_99);
                }
                var_274 = wp::select(var_101, var_269, var_133);
                var_275 = wp::select(var_101, var_270, var_96);
                var_276 = wp::select(var_101, var_271, var_97);
                var_277 = wp::select(var_101, var_272, var_98);
                var_278 = wp::select(var_101, var_273, var_99);
                var_279 = wp::select(var_101, var_157, var_105);
                var_280 = wp::select(var_101, var_158, var_109);
            }
            var_281 = wp::select(var_86, var_274, var_84);
            var_282 = wp::select(var_86, var_275, var_96);
            var_283 = wp::select(var_86, var_276, var_97);
            var_284 = wp::select(var_86, var_277, var_98);
            var_285 = wp::select(var_86, var_278, var_99);
        }
        var_286 = wp::select(var_74, var_281, var_84);
        var_287 = wp::select(var_74, var_282, var_72);
        var_288 = wp::select(var_74, var_283, var_77);
        var_289 = wp::select(var_74, var_284, var_80);
        var_290 = wp::select(var_74, var_285, var_81);
        // if id_p >= 0:                                                                          <L 763>
        var_291 = (var_17 >= var_28);
        if (var_291) {
            // wp.atomic_add(body_f, id_p, wp.spatial_vector(t_total + wp.cross(r_p, f_total), f_total))       <L 764>
            var_292 = wp::cross(var_42, var_287);
            var_293 = wp::add(var_286, var_292);
            var_294 = wp::vec_t<6,wp::float32>(var_293, var_287);
            // var_295 = wp::atomic_add(var_body_f, var_17, var_294);
        }
        // wp.atomic_sub(body_f, id_c, wp.spatial_vector(t_total + wp.cross(r_c, f_total), f_total))       <L 765>
        var_296 = wp::cross(var_52, var_287);
        var_297 = wp::add(var_286, var_296);
        var_298 = wp::vec_t<6,wp::float32>(var_297, var_287);
        // var_299 = wp::atomic_sub(var_body_f, var_14, var_298);
        //---------
        // reverse
        wp::adj_atomic_sub(var_body_f, var_14, var_298, adj_body_f, adj_14, adj_298, adj_299);
        wp::adj_vec_t(var_297, var_287, adj_297, adj_287, adj_298);
        wp::adj_add(var_286, var_296, adj_286, adj_296, adj_297);
        wp::adj_cross(var_52, var_287, adj_52, adj_287, adj_296);
        // adj: wp.atomic_sub(body_f, id_c, wp.spatial_vector(t_total + wp.cross(r_c, f_total), f_total))  <L 765>
        if (var_291) {
            wp::adj_atomic_add(var_body_f, var_17, var_294, adj_body_f, adj_17, adj_294, adj_295);
            wp::adj_vec_t(var_293, var_287, adj_293, adj_287, adj_294);
            wp::adj_add(var_286, var_292, adj_286, adj_292, adj_293);
            wp::adj_cross(var_42, var_287, adj_42, adj_287, adj_292);
            // adj: wp.atomic_add(body_f, id_p, wp.spatial_vector(t_total + wp.cross(r_p, f_total), f_total))  <L 764>
        }
        // adj: if id_p >= 0:                                                                     <L 763>
        wp::adj_select(var_74, var_285, var_81, adj_74, adj_285, adj_81, adj_290);
        wp::adj_select(var_74, var_284, var_80, adj_74, adj_284, adj_80, adj_289);
        wp::adj_select(var_74, var_283, var_77, adj_74, adj_283, adj_77, adj_288);
        wp::adj_select(var_74, var_282, var_72, adj_74, adj_282, adj_72, adj_287);
        wp::adj_select(var_74, var_281, var_84, adj_74, adj_281, adj_84, adj_286);
        if (!var_74) {
            wp::adj_select(var_86, var_278, var_99, adj_86, adj_278, adj_99, adj_285);
            wp::adj_select(var_86, var_277, var_98, adj_86, adj_277, adj_98, adj_284);
            wp::adj_select(var_86, var_276, var_97, adj_86, adj_276, adj_97, adj_283);
            wp::adj_select(var_86, var_275, var_96, adj_86, adj_275, adj_96, adj_282);
            wp::adj_select(var_86, var_274, var_84, adj_86, adj_274, adj_84, adj_281);
            if (!var_86) {
                wp::adj_select(var_101, var_158, var_109, adj_101, adj_158, adj_109, adj_280);
                wp::adj_select(var_101, var_157, var_105, adj_101, adj_157, adj_105, adj_279);
                wp::adj_select(var_101, var_273, var_99, adj_101, adj_273, adj_99, adj_278);
                wp::adj_select(var_101, var_272, var_98, adj_101, adj_272, adj_98, adj_277);
                wp::adj_select(var_101, var_271, var_97, adj_101, adj_271, adj_97, adj_276);
                wp::adj_select(var_101, var_270, var_96, adj_101, adj_270, adj_96, adj_275);
                wp::adj_select(var_101, var_269, var_133, adj_101, adj_269, adj_133, adj_274);
                if (!var_101) {
                    wp::adj_select(var_135, var_267, var_99, adj_135, adj_267, adj_99, adj_273);
                    wp::adj_select(var_135, var_266, var_98, adj_135, adj_266, adj_98, adj_272);
                    wp::adj_select(var_135, var_265, var_97, adj_135, adj_265, adj_97, adj_271);
                    wp::adj_select(var_135, var_264, var_96, adj_135, adj_264, adj_96, adj_270);
                    wp::adj_select(var_135, var_263, var_156, adj_135, adj_263, adj_156, adj_269);
                    if (!var_135) {
                        if (!var_160) {
                            wp::adj_print(var_268, adj_268);
                            // adj: print("joint type not handled in apply_joint_torques")        <L 760>
                        }
                        wp::adj_select(var_160, var_99, var_262, adj_160, adj_99, adj_262, adj_267);
                        wp::adj_select(var_160, var_98, var_261, adj_160, adj_98, adj_261, adj_266);
                        wp::adj_select(var_160, var_97, var_260, adj_160, adj_97, adj_260, adj_265);
                        wp::adj_select(var_160, var_96, var_205, adj_160, adj_96, adj_205, adj_264);
                        wp::adj_select(var_160, var_156, var_259, adj_160, adj_156, adj_259, adj_263);
                        if (var_160) {
                            wp::adj_select(var_245, var_244, var_256, adj_245, adj_244, adj_256, adj_262);
                            wp::adj_select(var_245, var_243, var_255, adj_245, adj_243, adj_255, adj_261);
                            wp::adj_select(var_245, var_242, var_250, adj_245, adj_242, adj_250, adj_260);
                            wp::adj_select(var_245, var_241, var_258, adj_245, adj_241, adj_258, adj_259);
                            if (var_245) {
                                wp::adj_add(var_241, var_257, adj_241, adj_257, adj_258);
                                wp::adj_mul(var_255, var_256, adj_255, adj_256, adj_257);
                                // adj: t_total += act * a_p                                      <L 757>
                                wp::adj_transform_vector(var_37, var_250, adj_37, adj_250, adj_256);
                                // adj: a_p = wp.transform_vector(X_wp, axis)                     <L 756>
                                wp::adj_copy(var_254, adj_253, adj_255);
                                wp::adj_load(var_253, adj_253, adj_254);
                                wp::adj_address(var_joint_act, var_252, adj_joint_act, adj_252, adj_253);
                                wp::adj_add(var_251, var_110, adj_251, adj_110, adj_252);
                                wp::adj_add(var_60, var_66, adj_60, adj_66, adj_251);
                                // adj: act = joint_act[qd_start + lin_axis_count + 2]            <L 755>
                                wp::adj_copy(var_249, adj_248, adj_250);
                                wp::adj_load(var_248, adj_248, adj_249);
                                wp::adj_address(var_joint_axis, var_247, adj_joint_axis, adj_247, adj_248);
                                wp::adj_add(var_246, var_110, adj_246, adj_110, adj_247);
                                wp::adj_add(var_63, var_66, adj_63, adj_66, adj_246);
                                // adj: axis = joint_axis[axis_start + lin_axis_count + 2]        <L 754>
                            }
                            // adj: if ang_axis_count > 2:                                        <L 753>
                            wp::adj_select(var_227, var_226, var_238, adj_227, adj_226, adj_238, adj_244);
                            wp::adj_select(var_227, var_225, var_237, adj_227, adj_225, adj_237, adj_243);
                            wp::adj_select(var_227, var_224, var_232, adj_227, adj_224, adj_232, adj_242);
                            wp::adj_select(var_227, var_223, var_240, adj_227, adj_223, adj_240, adj_241);
                            if (var_227) {
                                wp::adj_add(var_223, var_239, adj_223, adj_239, adj_240);
                                wp::adj_mul(var_237, var_238, adj_237, adj_238, adj_239);
                                // adj: t_total += act * a_p                                      <L 752>
                                wp::adj_transform_vector(var_37, var_232, adj_37, adj_232, adj_238);
                                // adj: a_p = wp.transform_vector(X_wp, axis)                     <L 751>
                                wp::adj_copy(var_236, adj_235, adj_237);
                                wp::adj_load(var_235, adj_235, adj_236);
                                wp::adj_address(var_joint_act, var_234, adj_joint_act, adj_234, adj_235);
                                wp::adj_add(var_233, var_67, adj_233, adj_67, adj_234);
                                wp::adj_add(var_60, var_66, adj_60, adj_66, adj_233);
                                // adj: act = joint_act[qd_start + lin_axis_count + 1]            <L 750>
                                wp::adj_copy(var_231, adj_230, adj_232);
                                wp::adj_load(var_230, adj_230, adj_231);
                                wp::adj_address(var_joint_axis, var_229, adj_joint_axis, adj_229, adj_230);
                                wp::adj_add(var_228, var_67, adj_228, adj_67, adj_229);
                                wp::adj_add(var_63, var_66, adj_63, adj_66, adj_228);
                                // adj: axis = joint_axis[axis_start + lin_axis_count + 1]        <L 749>
                            }
                            // adj: if ang_axis_count > 1:                                        <L 748>
                            wp::adj_select(var_209, var_208, var_220, adj_209, adj_208, adj_220, adj_226);
                            wp::adj_select(var_209, var_207, var_219, adj_209, adj_207, adj_219, adj_225);
                            wp::adj_select(var_209, var_206, var_214, adj_209, adj_206, adj_214, adj_224);
                            wp::adj_select(var_209, var_156, var_222, adj_209, adj_156, adj_222, adj_223);
                            if (var_209) {
                                wp::adj_add(var_156, var_221, adj_156, adj_221, adj_222);
                                wp::adj_mul(var_219, var_220, adj_219, adj_220, adj_221);
                                // adj: t_total += act * a_p                                      <L 747>
                                wp::adj_transform_vector(var_37, var_214, adj_37, adj_214, adj_220);
                                // adj: a_p = wp.transform_vector(X_wp, axis)                     <L 746>
                                wp::adj_copy(var_218, adj_217, adj_219);
                                wp::adj_load(var_217, adj_217, adj_218);
                                wp::adj_address(var_joint_act, var_216, adj_joint_act, adj_216, adj_217);
                                wp::adj_add(var_215, var_28, adj_215, adj_28, adj_216);
                                wp::adj_add(var_60, var_66, adj_60, adj_66, adj_215);
                                // adj: act = joint_act[qd_start + lin_axis_count + 0]            <L 745>
                                wp::adj_copy(var_213, adj_212, adj_214);
                                wp::adj_load(var_212, adj_212, adj_213);
                                wp::adj_address(var_joint_axis, var_211, adj_joint_axis, adj_211, adj_212);
                                wp::adj_add(var_210, var_28, adj_210, adj_28, adj_211);
                                wp::adj_add(var_63, var_66, adj_63, adj_66, adj_210);
                                // adj: axis = joint_axis[axis_start + lin_axis_count + 0]        <L 744>
                            }
                            // adj: if ang_axis_count > 0:                                        <L 743>
                            wp::adj_select(var_193, var_192, var_202, adj_193, adj_192, adj_202, adj_208);
                            wp::adj_select(var_193, var_191, var_201, adj_193, adj_191, adj_201, adj_207);
                            wp::adj_select(var_193, var_190, var_197, adj_193, adj_190, adj_197, adj_206);
                            wp::adj_select(var_193, var_189, var_204, adj_193, adj_189, adj_204, adj_205);
                            if (var_193) {
                                wp::adj_add(var_189, var_203, adj_189, adj_203, adj_204);
                                wp::adj_mul(var_201, var_202, adj_201, adj_202, adj_203);
                                // adj: f_total += act * a_p                                      <L 741>
                                wp::adj_transform_vector(var_37, var_197, adj_37, adj_197, adj_202);
                                // adj: a_p = wp.transform_vector(X_wp, axis)                     <L 740>
                                wp::adj_copy(var_200, adj_199, adj_201);
                                wp::adj_load(var_199, adj_199, adj_200);
                                wp::adj_address(var_joint_act, var_198, adj_joint_act, adj_198, adj_199);
                                wp::adj_add(var_60, var_110, adj_60, adj_110, adj_198);
                                // adj: act = joint_act[qd_start + 2]                             <L 739>
                                wp::adj_copy(var_196, adj_195, adj_197);
                                wp::adj_load(var_195, adj_195, adj_196);
                                wp::adj_address(var_joint_axis, var_194, adj_joint_axis, adj_194, adj_195);
                                wp::adj_add(var_63, var_110, adj_63, adj_110, adj_194);
                                // adj: axis = joint_axis[axis_start + 2]                         <L 738>
                            }
                            // adj: if lin_axis_count > 2:                                        <L 737>
                            wp::adj_select(var_177, var_176, var_186, adj_177, adj_176, adj_186, adj_192);
                            wp::adj_select(var_177, var_175, var_185, adj_177, adj_175, adj_185, adj_191);
                            wp::adj_select(var_177, var_174, var_181, adj_177, adj_174, adj_181, adj_190);
                            wp::adj_select(var_177, var_173, var_188, adj_177, adj_173, adj_188, adj_189);
                            if (var_177) {
                                wp::adj_add(var_173, var_187, adj_173, adj_187, adj_188);
                                wp::adj_mul(var_185, var_186, adj_185, adj_186, adj_187);
                                // adj: f_total += act * a_p                                      <L 736>
                                wp::adj_transform_vector(var_37, var_181, adj_37, adj_181, adj_186);
                                // adj: a_p = wp.transform_vector(X_wp, axis)                     <L 735>
                                wp::adj_copy(var_184, adj_183, adj_185);
                                wp::adj_load(var_183, adj_183, adj_184);
                                wp::adj_address(var_joint_act, var_182, adj_joint_act, adj_182, adj_183);
                                wp::adj_add(var_60, var_67, adj_60, adj_67, adj_182);
                                // adj: act = joint_act[qd_start + 1]                             <L 734>
                                wp::adj_copy(var_180, adj_179, adj_181);
                                wp::adj_load(var_179, adj_179, adj_180);
                                wp::adj_address(var_joint_axis, var_178, adj_joint_axis, adj_178, adj_179);
                                wp::adj_add(var_63, var_67, adj_63, adj_67, adj_178);
                                // adj: axis = joint_axis[axis_start + 1]                         <L 733>
                            }
                            // adj: if lin_axis_count > 1:                                        <L 732>
                            wp::adj_select(var_161, var_99, var_170, adj_161, adj_99, adj_170, adj_176);
                            wp::adj_select(var_161, var_98, var_169, adj_161, adj_98, adj_169, adj_175);
                            wp::adj_select(var_161, var_97, var_165, adj_161, adj_97, adj_165, adj_174);
                            wp::adj_select(var_161, var_96, var_172, adj_161, adj_96, adj_172, adj_173);
                            if (var_161) {
                                wp::adj_add(var_96, var_171, adj_96, adj_171, adj_172);
                                wp::adj_mul(var_169, var_170, adj_169, adj_170, adj_171);
                                // adj: f_total += act * a_p                                      <L 731>
                                wp::adj_transform_vector(var_37, var_165, adj_37, adj_165, adj_170);
                                // adj: a_p = wp.transform_vector(X_wp, axis)                     <L 730>
                                wp::adj_copy(var_168, adj_167, adj_169);
                                wp::adj_load(var_167, adj_167, adj_168);
                                wp::adj_address(var_joint_act, var_166, adj_joint_act, adj_166, adj_167);
                                wp::adj_add(var_60, var_28, adj_60, adj_28, adj_166);
                                // adj: act = joint_act[qd_start + 0]                             <L 729>
                                wp::adj_copy(var_164, adj_163, adj_165);
                                wp::adj_load(var_163, adj_163, adj_164);
                                wp::adj_address(var_joint_axis, var_162, adj_joint_axis, adj_162, adj_163);
                                wp::adj_add(var_63, var_28, adj_63, adj_28, adj_162);
                                // adj: axis = joint_axis[axis_start + 0]                         <L 728>
                            }
                            // adj: if lin_axis_count > 0:                                        <L 727>
                        }
                        // adj: elif type == fs5Model.JOINT_D6:                                   <L 723>
                    }
                    wp::adj_select(var_135, var_109, var_143, adj_135, adj_109, adj_143, adj_158);
                    wp::adj_select(var_135, var_105, var_139, adj_135, adj_105, adj_139, adj_157);
                    wp::adj_select(var_135, var_133, var_155, adj_135, adj_133, adj_155, adj_156);
                    if (var_135) {
                        wp::adj_add(var_149, var_154, adj_149, adj_154, adj_155);
                        wp::adj_mul(var_153, var_152, adj_151, adj_152, adj_154);
                        wp::adj_load(var_151, adj_151, adj_153);
                        wp::adj_transform_vector(var_37, var_143, adj_37, adj_143, adj_152);
                        wp::adj_address(var_joint_act, var_150, adj_joint_act, adj_150, adj_151);
                        wp::adj_add(var_60, var_67, adj_60, adj_67, adj_150);
                        // adj: t_total += joint_act[qd_start + 1] * wp.transform_vector(X_wp, axis_1)  <L 721>
                        wp::adj_add(var_133, var_148, adj_133, adj_148, adj_149);
                        wp::adj_mul(var_147, var_146, adj_145, adj_146, adj_148);
                        wp::adj_load(var_145, adj_145, adj_147);
                        wp::adj_transform_vector(var_37, var_139, adj_37, adj_139, adj_146);
                        wp::adj_address(var_joint_act, var_144, adj_joint_act, adj_144, adj_145);
                        wp::adj_add(var_60, var_28, adj_60, adj_28, adj_144);
                        // adj: t_total += joint_act[qd_start + 0] * wp.transform_vector(X_wp, axis_0)  <L 720>
                        wp::adj_copy(var_142, adj_141, adj_143);
                        wp::adj_load(var_141, adj_141, adj_142);
                        wp::adj_address(var_joint_axis, var_140, adj_joint_axis, adj_140, adj_141);
                        wp::adj_add(var_63, var_67, adj_63, adj_67, adj_140);
                        // adj: axis_1 = joint_axis[axis_start + 1]                               <L 719>
                        wp::adj_copy(var_138, adj_137, adj_139);
                        wp::adj_load(var_137, adj_137, adj_138);
                        wp::adj_address(var_joint_axis, var_136, adj_joint_axis, adj_136, adj_137);
                        wp::adj_add(var_63, var_28, adj_63, adj_28, adj_136);
                        // adj: axis_0 = joint_axis[axis_start + 0]                               <L 718>
                    }
                    // adj: elif type == fs5Model.JOINT_UNIVERSAL:                                <L 696>
                }
                wp::adj_select(var_101, var_84, var_132, adj_101, adj_84, adj_132, adj_133);
                if (var_101) {
                    wp::adj_add(var_126, var_131, adj_126, adj_131, adj_132);
                    wp::adj_mul(var_130, var_129, adj_128, adj_129, adj_131);
                    wp::adj_load(var_128, adj_128, adj_130);
                    wp::adj_transform_vector(var_37, var_114, adj_37, adj_114, adj_129);
                    wp::adj_address(var_joint_act, var_127, adj_joint_act, adj_127, adj_128);
                    wp::adj_add(var_60, var_110, adj_60, adj_110, adj_127);
                    // adj: t_total += joint_act[qd_start + 2] * wp.transform_vector(X_wp, axis_2)  <L 694>
                    wp::adj_add(var_120, var_125, adj_120, adj_125, adj_126);
                    wp::adj_mul(var_124, var_123, adj_122, adj_123, adj_125);
                    wp::adj_load(var_122, adj_122, adj_124);
                    wp::adj_transform_vector(var_37, var_109, adj_37, adj_109, adj_123);
                    wp::adj_address(var_joint_act, var_121, adj_joint_act, adj_121, adj_122);
                    wp::adj_add(var_60, var_67, adj_60, adj_67, adj_121);
                    // adj: t_total += joint_act[qd_start + 1] * wp.transform_vector(X_wp, axis_1)  <L 693>
                    wp::adj_add(var_84, var_119, adj_84, adj_119, adj_120);
                    wp::adj_mul(var_118, var_117, adj_116, adj_117, adj_119);
                    wp::adj_load(var_116, adj_116, adj_118);
                    wp::adj_transform_vector(var_37, var_105, adj_37, adj_105, adj_117);
                    wp::adj_address(var_joint_act, var_115, adj_joint_act, adj_115, adj_116);
                    wp::adj_add(var_60, var_28, adj_60, adj_28, adj_115);
                    // adj: t_total += joint_act[qd_start + 0] * wp.transform_vector(X_wp, axis_0)  <L 692>
                    wp::adj_copy(var_113, adj_112, adj_114);
                    wp::adj_load(var_112, adj_112, adj_113);
                    wp::adj_address(var_joint_axis, var_111, adj_joint_axis, adj_111, adj_112);
                    wp::adj_add(var_63, var_110, adj_63, adj_110, adj_111);
                    // adj: axis_2 = joint_axis[axis_start + 2]                                   <L 691>
                    wp::adj_copy(var_108, adj_107, adj_109);
                    wp::adj_load(var_107, adj_107, adj_108);
                    wp::adj_address(var_joint_axis, var_106, adj_joint_axis, adj_106, adj_107);
                    wp::adj_add(var_63, var_67, adj_63, adj_67, adj_106);
                    // adj: axis_1 = joint_axis[axis_start + 1]                                   <L 690>
                    wp::adj_copy(var_104, adj_103, adj_105);
                    wp::adj_load(var_103, adj_103, adj_104);
                    wp::adj_address(var_joint_axis, var_102, adj_joint_axis, adj_102, adj_103);
                    wp::adj_add(var_63, var_28, adj_63, adj_28, adj_102);
                    // adj: axis_0 = joint_axis[axis_start + 0]                                   <L 689>
                }
                // adj: elif type == fs5Model.JOINT_COMPOUND:                                     <L 669>
            }
            wp::adj_select(var_86, var_81, var_93, adj_86, adj_81, adj_93, adj_99);
            wp::adj_select(var_86, var_80, var_92, adj_86, adj_80, adj_92, adj_98);
            wp::adj_select(var_86, var_77, var_89, adj_86, adj_77, adj_89, adj_97);
            wp::adj_select(var_86, var_72, var_95, adj_86, adj_72, adj_95, adj_96);
            if (var_86) {
                wp::adj_add(var_72, var_94, adj_72, adj_94, adj_95);
                wp::adj_mul(var_92, var_93, adj_92, adj_93, adj_94);
                // adj: f_total += act * a_p                                                      <L 668>
                wp::adj_transform_vector(var_37, var_89, adj_37, adj_89, adj_93);
                // adj: a_p = wp.transform_vector(X_wp, axis)                                     <L 667>
                wp::adj_copy(var_91, adj_90, adj_92);
                wp::adj_load(var_90, adj_90, adj_91);
                wp::adj_address(var_joint_act, var_60, adj_joint_act, adj_60, adj_90);
                // adj: act = joint_act[qd_start]                                                 <L 666>
                wp::adj_copy(var_88, adj_87, adj_89);
                wp::adj_load(var_87, adj_87, adj_88);
                wp::adj_address(var_joint_axis, var_63, adj_joint_axis, adj_63, adj_87);
                // adj: axis = joint_axis[axis_start]                                             <L 665>
            }
            // adj: elif type == fs5Model.JOINT_PRISMATIC:                                        <L 664>
        }
        wp::adj_select(var_74, var_71, var_83, adj_74, adj_71, adj_83, adj_84);
        if (var_74) {
            wp::adj_add(var_71, var_82, adj_71, adj_82, adj_83);
            wp::adj_mul(var_80, var_81, adj_80, adj_81, adj_82);
            // adj: t_total += act * a_p                                                          <L 663>
            wp::adj_transform_vector(var_37, var_77, adj_37, adj_77, adj_81);
            // adj: a_p = wp.transform_vector(X_wp, axis)                                         <L 662>
            wp::adj_copy(var_79, adj_78, adj_80);
            wp::adj_load(var_78, adj_78, adj_79);
            wp::adj_address(var_joint_act, var_60, adj_joint_act, adj_60, adj_78);
            // adj: act = joint_act[qd_start]                                                     <L 661>
            wp::adj_copy(var_76, adj_75, adj_77);
            wp::adj_load(var_75, adj_75, adj_76);
            wp::adj_address(var_joint_axis, var_63, adj_joint_axis, adj_63, adj_75);
            // adj: axis = joint_axis[axis_start]                                                 <L 660>
        }
        // adj: if type == fs5Model.JOINT_REVOLUTE:                                               <L 659>
        // adj: f_total = wp.vec3()                                                               <L 656>
        // adj: t_total = wp.vec3()                                                               <L 655>
        wp::adj_copy(var_69, adj_68, adj_70);
        wp::adj_load(var_68, adj_68, adj_69);
        wp::adj_address(var_joint_axis_dim, var_0, var_67, adj_joint_axis_dim, adj_0, adj_67, adj_68);
        // adj: ang_axis_count = joint_axis_dim[tid, 1]                                           <L 652>
        wp::adj_copy(var_65, adj_64, adj_66);
        wp::adj_load(var_64, adj_64, adj_65);
        wp::adj_address(var_joint_axis_dim, var_0, var_28, adj_joint_axis_dim, adj_0, adj_28, adj_64);
        // adj: lin_axis_count = joint_axis_dim[tid, 0]                                           <L 651>
        wp::adj_copy(var_62, adj_61, adj_63);
        wp::adj_load(var_61, adj_61, adj_62);
        wp::adj_address(var_joint_axis_start, var_0, adj_joint_axis_start, adj_0, adj_61);
        // adj: axis_start = joint_axis_start[tid]                                                <L 650>
        wp::adj_copy(var_59, adj_58, adj_60);
        wp::adj_load(var_58, adj_58, adj_59);
        wp::adj_address(var_joint_qd_start, var_0, adj_joint_qd_start, adj_0, adj_58);
        // adj: qd_start = joint_qd_start[tid]                                                    <L 649>
        wp::adj_copy(var_56, adj_55, adj_57);
        wp::adj_load(var_55, adj_55, adj_56);
        wp::adj_address(var_joint_q_start, var_0, adj_joint_q_start, adj_0, adj_55);
        // adj: q_start = joint_q_start[tid]                                                      <L 648>
        wp::adj_transform_get_rotation(var_46, adj_46, adj_54);
        // adj: q_c = wp.transform_get_rotation(X_wc)                                             <L 645>
        wp::adj_transform_get_rotation(var_37, adj_37, adj_53);
        // adj: q_p = wp.transform_get_rotation(X_wp)                                             <L 644>
        wp::adj_sub(var_50, var_51, adj_50, adj_51, adj_52);
        wp::adj_transform_point(var_45, var_49, adj_45, adj_49, adj_51);
        wp::adj_transform_get_translation(var_46, adj_46, adj_50);
        // adj: r_c = wp.transform_get_translation(X_wc) - wp.transform_point(pose_c, com_c)      <L 641>
        wp::adj_copy(var_48, adj_47, adj_49);
        wp::adj_load(var_47, adj_47, adj_48);
        wp::adj_address(var_body_com, var_14, adj_body_com, adj_14, adj_47);
        // adj: com_c = body_com[id_c]                                                            <L 640>
        wp::adj_copy(var_45, adj_45, adj_46);
        // adj: X_wc = pose_c                                                                     <L 639>
        wp::adj_copy(var_44, adj_43, adj_45);
        wp::adj_load(var_43, adj_43, adj_44);
        wp::adj_address(var_body_q, var_14, adj_body_q, adj_14, adj_43);
        // adj: pose_c = body_q[id_c]                                                             <L 638>
        wp::adj_sub(var_40, var_41, adj_40, adj_41, adj_42);
        wp::adj_transform_point(var_38, var_39, adj_38, adj_39, adj_41);
        wp::adj_transform_get_translation(var_37, adj_37, adj_40);
        // adj: r_p = wp.transform_get_translation(X_wp) - wp.transform_point(pose_p, com_p)      <L 635>
        wp::adj_select(var_29, var_27, var_36, adj_29, adj_27, adj_36, adj_39);
        wp::adj_select(var_29, var_25, var_32, adj_29, adj_25, adj_32, adj_38);
        wp::adj_select(var_29, var_24, var_33, adj_29, adj_24, adj_33, adj_37);
        if (var_29) {
            wp::adj_copy(var_35, adj_34, adj_36);
            wp::adj_load(var_34, adj_34, adj_35);
            wp::adj_address(var_body_com, var_17, adj_body_com, adj_17, adj_34);
            // adj: com_p = body_com[id_p]                                                        <L 634>
            wp::adj_mul(var_32, var_24, adj_32, adj_24, adj_33);
            // adj: X_wp = pose_p * X_wp                                                          <L 633>
            wp::adj_copy(var_31, adj_30, adj_32);
            wp::adj_load(var_30, adj_30, adj_31);
            wp::adj_address(var_body_q, var_17, adj_body_q, adj_17, adj_30);
            // adj: pose_p = body_q[id_p]                                                         <L 632>
        }
        // adj: if id_p >= 0:                                                                     <L 631>
        wp::adj_vec_t(var_26, adj_26, adj_27);
        // adj: com_p = wp.vec3(0.0)                                                              <L 629>
        wp::adj_copy(var_20, adj_20, adj_25);
        // adj: pose_p = X_pj                                                                     <L 628>
        wp::adj_copy(var_20, adj_20, adj_24);
        // adj: X_wp = X_pj                                                                       <L 627>
        wp::adj_copy(var_22, adj_21, adj_23);
        wp::adj_load(var_21, adj_21, adj_22);
        wp::adj_address(var_joint_X_c, var_0, adj_joint_X_c, adj_0, adj_21);
        // adj: X_cj = joint_X_c[tid]                                                             <L 625>
        wp::adj_copy(var_19, adj_18, adj_20);
        wp::adj_load(var_18, adj_18, adj_19);
        wp::adj_address(var_joint_X_p, var_0, adj_joint_X_p, adj_0, adj_18);
        // adj: X_pj = joint_X_p[tid]                                                             <L 624>
        wp::adj_copy(var_16, adj_15, adj_17);
        wp::adj_load(var_15, adj_15, adj_16);
        wp::adj_address(var_joint_parent, var_0, adj_joint_parent, adj_0, adj_15);
        // adj: id_p = joint_parent[tid]                                                          <L 622>
        wp::adj_copy(var_13, adj_12, adj_14);
        wp::adj_load(var_12, adj_12, adj_13);
        wp::adj_address(var_joint_child, var_0, adj_joint_child, adj_0, adj_12);
        // adj: id_c = joint_child[tid]                                                           <L 621>
        if (var_11) {
            label3:;
            // adj: return                                                                        <L 618>
        }
        // adj: if type == fs5Model.JOINT_BALL:                                                   <L 617>
        if (var_9) {
            label2:;
            // adj: return                                                                        <L 616>
        }
        // adj: if type == fs5Model.JOINT_DISTANCE:                                               <L 615>
        if (var_7) {
            label1:;
            // adj: return                                                                        <L 614>
        }
        // adj: if type == fs5Model.JOINT_FREE:                                                   <L 613>
        if (var_5) {
            label0:;
            // adj: return                                                                        <L 612>
        }
        // adj: if type == fs5Model.JOINT_FIXED:                                                  <L 611>
        wp::adj_copy(var_2, adj_1, adj_3);
        wp::adj_load(var_1, adj_1, adj_2);
        wp::adj_address(var_joint_type, var_0, adj_joint_type, adj_0, adj_1);
        // adj: type = joint_type[tid]                                                            <L 610>
        // adj: tid = wp.tid()                                                                    <L 609>
        // adj: def apply_joint_torques(                                                          <L 593>
        continue;
    }
}



extern "C" __global__ void solve_body_joints_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_inv_m,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_inv_I,
    wp::array_t<wp::int32> var_joint_type,
    wp::array_t<wp::int32> var_joint_enabled,
    wp::array_t<wp::int32> var_joint_parent,
    wp::array_t<wp::int32> var_joint_child,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_p,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_c,
    wp::array_t<wp::float32> var_joint_limit_lower,
    wp::array_t<wp::float32> var_joint_limit_upper,
    wp::array_t<wp::int32> var_joint_axis_start,
    wp::array_t<wp::int32> var_joint_axis_dim,
    wp::array_t<wp::uint8> var_joint_axis_mode,
    wp::array_t<wp::vec_t<3,wp::float32>> var_joint_axis,
    wp::array_t<wp::float32> var_joint_target,
    wp::array_t<wp::float32> var_joint_target_ke,
    wp::array_t<wp::float32> var_joint_target_kd,
    wp::array_t<wp::float32> var_joint_linear_compliance,
    wp::array_t<wp::float32> var_joint_angular_compliance,
    wp::float32 var_angular_relaxation,
    wp::float32 var_linear_relaxation,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32* var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::int32 var_7;
        const wp::int32 var_8 = 4;
        bool var_9;
        bool var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::transform_t<wp::float32>* var_17;
        wp::transform_t<wp::float32> var_18;
        wp::transform_t<wp::float32> var_19;
        wp::transform_t<wp::float32>* var_20;
        wp::transform_t<wp::float32> var_21;
        wp::transform_t<wp::float32> var_22;
        wp::transform_t<wp::float32> var_23;
        const wp::float32 var_24 = 0.0;
        wp::mat_t<3,3,wp::float32> var_25;
        wp::transform_t<wp::float32> var_26;
        wp::vec_t<3,wp::float32> var_27;
        wp::vec_t<3,wp::float32> var_28;
        wp::vec_t<3,wp::float32> var_29;
        bool var_30;
        wp::transform_t<wp::float32>* var_31;
        wp::transform_t<wp::float32> var_32;
        wp::transform_t<wp::float32> var_33;
        wp::transform_t<wp::float32> var_34;
        wp::vec_t<3,wp::float32>* var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::float32* var_38;
        wp::float32 var_39;
        wp::float32 var_40;
        wp::mat_t<3,3,wp::float32>* var_41;
        wp::mat_t<3,3,wp::float32> var_42;
        wp::mat_t<3,3,wp::float32> var_43;
        wp::vec_t<6,wp::float32>* var_44;
        wp::vec_t<6,wp::float32> var_45;
        wp::vec_t<3,wp::float32> var_46;
        wp::vec_t<6,wp::float32>* var_47;
        wp::vec_t<6,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::transform_t<wp::float32> var_50;
        wp::float32 var_51;
        wp::mat_t<3,3,wp::float32> var_52;
        wp::transform_t<wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::transform_t<wp::float32>* var_57;
        wp::transform_t<wp::float32> var_58;
        wp::transform_t<wp::float32> var_59;
        wp::transform_t<wp::float32> var_60;
        wp::vec_t<3,wp::float32>* var_61;
        wp::vec_t<3,wp::float32> var_62;
        wp::vec_t<3,wp::float32> var_63;
        wp::float32* var_64;
        wp::float32 var_65;
        wp::float32 var_66;
        wp::mat_t<3,3,wp::float32>* var_67;
        wp::mat_t<3,3,wp::float32> var_68;
        wp::mat_t<3,3,wp::float32> var_69;
        wp::vec_t<6,wp::float32>* var_70;
        wp::vec_t<6,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::vec_t<6,wp::float32>* var_73;
        wp::vec_t<6,wp::float32> var_74;
        wp::vec_t<3,wp::float32> var_75;
        bool var_76;
        bool var_77;
        bool var_78;
        wp::vec_t<3,wp::float32> var_79;
        wp::vec_t<3,wp::float32> var_80;
        wp::vec_t<3,wp::float32> var_81;
        wp::vec_t<3,wp::float32> var_82;
        wp::transform_t<wp::float32> var_83;
        wp::transform_t<wp::float32> var_84;
        wp::vec_t<3,wp::float32> var_85;
        wp::vec_t<3,wp::float32> var_86;
        wp::float32* var_87;
        wp::float32 var_88;
        wp::float32 var_89;
        wp::float32* var_90;
        wp::float32 var_91;
        wp::float32 var_92;
        wp::int32* var_93;
        wp::int32 var_94;
        wp::int32 var_95;
        wp::int32* var_96;
        wp::int32 var_97;
        wp::int32 var_98;
        const wp::int32 var_99 = 1;
        wp::int32* var_100;
        wp::int32 var_101;
        wp::int32 var_102;
        wp::vec_t<3,wp::float32> var_103;
        wp::vec_t<3,wp::float32> var_104;
        const wp::int32 var_105 = 7;
        bool var_106;
        wp::vec_t<3,wp::float32> var_107;
        wp::vec_t<3,wp::float32> var_108;
        wp::vec_t<3,wp::float32> var_109;
        wp::vec_t<3,wp::float32> var_110;
        wp::float32* var_111;
        wp::float32 var_112;
        wp::float32 var_113;
        wp::float32* var_114;
        wp::float32 var_115;
        wp::float32 var_116;
        bool var_117;
        bool var_118;
        bool var_119;
        wp::float32 var_120;
        bool var_121;
        bool var_122;
        bool var_123;
        wp::float32 var_124;
        wp::vec_t<3,wp::float32> var_125;
        wp::vec_t<3,wp::float32> var_126;
        wp::vec_t<3,wp::float32> var_127;
        wp::vec_t<3,wp::float32> var_128;
        wp::float32 var_129;
        bool var_130;
        bool var_131;
        bool var_132;
        wp::float32 var_133;
        wp::float32 var_134;
        wp::float32 var_135;
        wp::float32 var_136;
        const wp::float32 var_137 = 1e-09;
        bool var_138;
        wp::vec_t<3,wp::float32> var_139;
        wp::vec_t<3,wp::float32> var_140;
        wp::vec_t<3,wp::float32> var_141;
        wp::vec_t<3,wp::float32> var_142;
        wp::vec_t<3,wp::float32> var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::float32 var_145;
        wp::float32 var_146;
        wp::float32 var_147;
        wp::float32 var_148;
        wp::float32 var_149;
        wp::float32 var_150;
        wp::float32 var_151;
        wp::float32 var_152;
        wp::float32* var_153;
        wp::float32 var_154;
        wp::float32 var_155;
        bool var_156;
        const wp::float32 var_157 = 1.0;
        wp::float32 var_158;
        wp::float32 var_159;
        wp::float32* var_160;
        wp::float32 var_161;
        wp::float32 var_162;
        wp::float32 var_163;
        wp::float32 var_164;
        wp::vec_t<3,wp::float32> var_165;
        wp::vec_t<3,wp::float32> var_166;
        wp::float32 var_167;
        wp::vec_t<3,wp::float32> var_168;
        wp::vec_t<3,wp::float32> var_169;
        wp::float32 var_170;
        wp::vec_t<3,wp::float32> var_171;
        wp::vec_t<3,wp::float32> var_172;
        wp::float32 var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<3,wp::float32> var_176;
        wp::vec_t<3,wp::float32> var_177;
        wp::vec_t<3,wp::float32> var_178;
        wp::vec_t<3,wp::float32> var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::vec_t<3,wp::float32> var_182;
        wp::vec_t<3,wp::float32> var_183;
        wp::vec_t<3,wp::float32> var_184;
        wp::vec_t<3,wp::float32> var_185;
        wp::float32 var_186;
        wp::vec_t<6,wp::float32> var_187;
        wp::uint8 var_188;
        wp::uint8 var_189;
        wp::uint8 var_190;
        wp::vec_t<3,wp::uint8> var_191;
        wp::mat_t<3,3,wp::float32> var_192;
        bool var_193;
        wp::vec_t<3,wp::float32>* var_194;
        wp::vec_t<3,wp::float32> var_195;
        wp::vec_t<3,wp::float32> var_196;
        wp::float32* var_197;
        wp::float32 var_198;
        wp::vec_t<3,wp::float32> var_199;
        wp::float32* var_200;
        wp::float32 var_201;
        wp::vec_t<3,wp::float32> var_202;
        wp::vec_t<3,wp::float32> var_203;
        wp::vec_t<3,wp::float32> var_204;
        wp::vec_t<6,wp::float32> var_205;
        wp::uint8* var_206;
        wp::uint8 var_207;
        wp::uint8 var_208;
        const wp::int32 var_209 = 0;
        bool var_210;
        wp::float32* var_211;
        wp::float32 var_212;
        wp::float32 var_213;
        wp::float32* var_214;
        wp::float32 var_215;
        wp::float32 var_216;
        wp::float32* var_217;
        wp::float32 var_218;
        wp::float32 var_219;
        wp::vec_t<3,wp::uint8> var_220;
        wp::mat_t<3,3,wp::float32> var_221;
        wp::float32 var_222;
        wp::float32 var_223;
        wp::float32 var_224;
        wp::vec_t<3,wp::uint8> var_225;
        wp::mat_t<3,3,wp::float32> var_226;
        wp::float32 var_227;
        wp::float32 var_228;
        wp::vec_t<6,wp::float32> var_229;
        wp::vec_t<3,wp::uint8> var_230;
        wp::mat_t<3,3,wp::float32> var_231;
        bool var_232;
        wp::int32 var_233;
        wp::vec_t<3,wp::float32>* var_234;
        wp::vec_t<3,wp::float32> var_235;
        wp::vec_t<3,wp::float32> var_236;
        wp::float32* var_237;
        wp::float32 var_238;
        wp::float32 var_239;
        wp::float32* var_240;
        wp::float32 var_241;
        wp::float32 var_242;
        wp::vec_t<6,wp::float32> var_243;
        wp::uint8* var_244;
        wp::uint8 var_245;
        wp::uint8 var_246;
        bool var_247;
        wp::float32* var_248;
        wp::float32 var_249;
        wp::float32 var_250;
        wp::float32* var_251;
        wp::float32 var_252;
        wp::float32 var_253;
        wp::float32* var_254;
        wp::float32 var_255;
        wp::float32 var_256;
        wp::vec_t<3,wp::uint8> var_257;
        wp::mat_t<3,3,wp::float32> var_258;
        wp::float32 var_259;
        wp::float32 var_260;
        wp::float32 var_261;
        wp::vec_t<3,wp::uint8> var_262;
        wp::mat_t<3,3,wp::float32> var_263;
        wp::float32 var_264;
        wp::float32 var_265;
        wp::float32 var_266;
        wp::float32 var_267;
        wp::float32 var_268;
        wp::float32 var_269;
        wp::vec_t<6,wp::float32> var_270;
        wp::vec_t<3,wp::uint8> var_271;
        wp::mat_t<3,3,wp::float32> var_272;
        wp::vec_t<3,wp::float32> var_273;
        wp::uint8 var_274;
        wp::float32 var_275;
        wp::float32 var_276;
        const wp::int32 var_277 = 2;
        bool var_278;
        wp::int32 var_279;
        wp::vec_t<3,wp::float32>* var_280;
        wp::vec_t<3,wp::float32> var_281;
        wp::vec_t<3,wp::float32> var_282;
        wp::float32* var_283;
        wp::float32 var_284;
        wp::float32 var_285;
        wp::float32* var_286;
        wp::float32 var_287;
        wp::float32 var_288;
        wp::vec_t<6,wp::float32> var_289;
        wp::uint8* var_290;
        wp::uint8 var_291;
        wp::uint8 var_292;
        bool var_293;
        wp::float32* var_294;
        wp::float32 var_295;
        wp::float32 var_296;
        wp::float32* var_297;
        wp::float32 var_298;
        wp::float32 var_299;
        wp::float32* var_300;
        wp::float32 var_301;
        wp::float32 var_302;
        wp::vec_t<3,wp::uint8> var_303;
        wp::mat_t<3,3,wp::float32> var_304;
        wp::float32 var_305;
        wp::float32 var_306;
        wp::float32 var_307;
        wp::vec_t<3,wp::uint8> var_308;
        wp::mat_t<3,3,wp::float32> var_309;
        wp::float32 var_310;
        wp::float32 var_311;
        wp::float32 var_312;
        wp::float32 var_313;
        wp::float32 var_314;
        wp::float32 var_315;
        wp::vec_t<6,wp::float32> var_316;
        wp::vec_t<3,wp::uint8> var_317;
        wp::mat_t<3,3,wp::float32> var_318;
        wp::vec_t<3,wp::float32> var_319;
        wp::uint8 var_320;
        wp::float32 var_321;
        wp::float32 var_322;
        wp::int32 var_323;
        wp::vec_t<3,wp::float32> var_324;
        wp::vec_t<3,wp::float32> var_325;
        wp::vec_t<3,wp::float32> var_326;
        bool var_327;
        wp::vec_t<3,wp::float32> var_328;
        wp::vec_t<3,wp::float32> var_329;
        wp::vec_t<3,wp::float32> var_330;
        wp::vec_t<3,wp::float32> var_331;
        wp::quat_t<wp::float32> var_332;
        wp::mat_t<3,3,wp::float32> var_333;
        wp::vec_t<3,wp::float32> var_334;
        wp::vec_t<3,wp::float32> var_335;
        wp::vec_t<3,wp::float32> var_336;
        const wp::int32 var_337 = 0;
        wp::int32 var_338;
        wp::float32 var_339;
        wp::uint8 var_340;
        wp::float32 var_341;
        wp::float32 var_342;
        wp::float32 var_343;
        wp::vec_t<3,wp::float32> var_344;
        wp::vec_t<3,wp::float32> var_345;
        wp::vec_t<3,wp::float32> var_346;
        wp::vec_t<3,wp::float32> var_347;
        wp::vec_t<3,wp::float32> var_348;
        wp::float32 var_349;
        wp::float32 var_350;
        wp::float32 var_351;
        wp::float32 var_352;
        wp::float32 var_353;
        wp::float32 var_354;
        wp::float32 var_355;
        wp::float32 var_356;
        wp::float32 var_357;
        wp::float32 var_358;
        bool var_359;
        wp::float32 var_360;
        wp::float32 var_361;
        wp::float32 var_362;
        wp::float32 var_363;
        bool var_364;
        wp::float32 var_365;
        wp::float32 var_366;
        wp::float32 var_367;
        wp::float32 var_368;
        wp::float32 var_369;
        const wp::int32 var_370 = 1;
        bool var_371;
        wp::float32 var_372;
        wp::float32 var_373;
        bool var_374;
        wp::float32 var_375;
        wp::float32 var_376;
        wp::float32 var_377;
        wp::float32 var_378;
        wp::float32 var_379;
        wp::float32 var_380;
        wp::float32 var_381;
        wp::float32 var_382;
        wp::float32 var_383;
        wp::float32 var_384;
        const wp::int32 var_385 = 2;
        bool var_386;
        wp::float32 var_387;
        bool var_388;
        wp::float32 var_389;
        wp::float32 var_390;
        wp::float32 var_391;
        wp::float32 var_392;
        wp::float32 var_393;
        wp::float32 var_394;
        wp::float32 var_395;
        wp::float32 var_396;
        wp::float32 var_397;
        wp::float32 var_398;
        wp::float32 var_399;
        wp::float32 var_400;
        wp::float32 var_401;
        wp::float32 var_402;
        wp::float32 var_403;
        wp::float32 var_404;
        wp::float32 var_405;
        wp::float32 var_406;
        wp::float32 var_407;
        wp::float32 var_408;
        wp::float32 var_409;
        wp::float32 var_410;
        bool var_411;
        wp::float32 var_412;
        wp::float32 var_413;
        wp::vec_t<3,wp::float32> var_414;
        wp::vec_t<3,wp::float32> var_415;
        wp::float32 var_416;
        wp::vec_t<3,wp::float32> var_417;
        wp::vec_t<3,wp::float32> var_418;
        wp::float32 var_419;
        wp::vec_t<3,wp::float32> var_420;
        wp::vec_t<3,wp::float32> var_421;
        wp::float32 var_422;
        wp::vec_t<3,wp::float32> var_423;
        wp::vec_t<3,wp::float32> var_424;
        wp::vec_t<3,wp::float32> var_425;
        wp::vec_t<3,wp::float32> var_426;
        wp::vec_t<3,wp::float32> var_427;
        wp::vec_t<3,wp::float32> var_428;
        wp::float32 var_429;
        const wp::int32 var_430 = 1;
        wp::int32 var_431;
        wp::float32 var_432;
        wp::uint8 var_433;
        wp::float32 var_434;
        wp::float32 var_435;
        wp::float32 var_436;
        wp::vec_t<3,wp::float32> var_437;
        wp::vec_t<3,wp::float32> var_438;
        wp::vec_t<3,wp::float32> var_439;
        wp::vec_t<3,wp::float32> var_440;
        wp::vec_t<3,wp::float32> var_441;
        wp::float32 var_442;
        wp::float32 var_443;
        wp::float32 var_444;
        wp::float32 var_445;
        wp::float32 var_446;
        wp::float32 var_447;
        wp::float32 var_448;
        wp::float32 var_449;
        wp::float32 var_450;
        wp::float32 var_451;
        bool var_452;
        wp::float32 var_453;
        wp::float32 var_454;
        wp::float32 var_455;
        wp::float32 var_456;
        bool var_457;
        wp::float32 var_458;
        wp::float32 var_459;
        wp::float32 var_460;
        wp::float32 var_461;
        wp::float32 var_462;
        bool var_463;
        wp::float32 var_464;
        wp::float32 var_465;
        bool var_466;
        wp::float32 var_467;
        wp::float32 var_468;
        wp::float32 var_469;
        wp::float32 var_470;
        wp::float32 var_471;
        wp::float32 var_472;
        wp::float32 var_473;
        wp::float32 var_474;
        wp::float32 var_475;
        wp::float32 var_476;
        bool var_477;
        wp::float32 var_478;
        bool var_479;
        wp::float32 var_480;
        wp::float32 var_481;
        wp::float32 var_482;
        wp::float32 var_483;
        wp::float32 var_484;
        wp::float32 var_485;
        wp::float32 var_486;
        wp::float32 var_487;
        wp::float32 var_488;
        wp::float32 var_489;
        wp::float32 var_490;
        wp::float32 var_491;
        wp::float32 var_492;
        wp::float32 var_493;
        wp::float32 var_494;
        wp::float32 var_495;
        wp::float32 var_496;
        wp::float32 var_497;
        wp::float32 var_498;
        wp::float32 var_499;
        wp::float32 var_500;
        wp::float32 var_501;
        bool var_502;
        wp::float32 var_503;
        wp::float32 var_504;
        wp::vec_t<3,wp::float32> var_505;
        wp::vec_t<3,wp::float32> var_506;
        wp::float32 var_507;
        wp::vec_t<3,wp::float32> var_508;
        wp::vec_t<3,wp::float32> var_509;
        wp::float32 var_510;
        wp::vec_t<3,wp::float32> var_511;
        wp::vec_t<3,wp::float32> var_512;
        wp::float32 var_513;
        wp::vec_t<3,wp::float32> var_514;
        wp::vec_t<3,wp::float32> var_515;
        wp::vec_t<3,wp::float32> var_516;
        wp::vec_t<3,wp::float32> var_517;
        wp::vec_t<3,wp::float32> var_518;
        wp::vec_t<3,wp::float32> var_519;
        wp::float32 var_520;
        const wp::int32 var_521 = 2;
        wp::int32 var_522;
        wp::float32 var_523;
        wp::uint8 var_524;
        wp::float32 var_525;
        wp::float32 var_526;
        wp::float32 var_527;
        wp::vec_t<3,wp::float32> var_528;
        wp::vec_t<3,wp::float32> var_529;
        wp::vec_t<3,wp::float32> var_530;
        wp::vec_t<3,wp::float32> var_531;
        wp::vec_t<3,wp::float32> var_532;
        wp::float32 var_533;
        wp::float32 var_534;
        wp::float32 var_535;
        wp::float32 var_536;
        wp::float32 var_537;
        wp::float32 var_538;
        wp::float32 var_539;
        wp::float32 var_540;
        wp::float32 var_541;
        wp::float32 var_542;
        bool var_543;
        wp::float32 var_544;
        wp::float32 var_545;
        wp::float32 var_546;
        wp::float32 var_547;
        bool var_548;
        wp::float32 var_549;
        wp::float32 var_550;
        wp::float32 var_551;
        wp::float32 var_552;
        wp::float32 var_553;
        bool var_554;
        wp::float32 var_555;
        wp::float32 var_556;
        bool var_557;
        wp::float32 var_558;
        wp::float32 var_559;
        wp::float32 var_560;
        wp::float32 var_561;
        wp::float32 var_562;
        wp::float32 var_563;
        wp::float32 var_564;
        wp::float32 var_565;
        wp::float32 var_566;
        wp::float32 var_567;
        bool var_568;
        wp::float32 var_569;
        bool var_570;
        wp::float32 var_571;
        wp::float32 var_572;
        wp::float32 var_573;
        wp::float32 var_574;
        wp::float32 var_575;
        wp::float32 var_576;
        wp::float32 var_577;
        wp::float32 var_578;
        wp::float32 var_579;
        wp::float32 var_580;
        wp::float32 var_581;
        wp::float32 var_582;
        wp::float32 var_583;
        wp::float32 var_584;
        wp::float32 var_585;
        wp::float32 var_586;
        wp::float32 var_587;
        wp::float32 var_588;
        wp::float32 var_589;
        wp::float32 var_590;
        wp::float32 var_591;
        wp::float32 var_592;
        bool var_593;
        wp::float32 var_594;
        wp::float32 var_595;
        wp::vec_t<3,wp::float32> var_596;
        wp::vec_t<3,wp::float32> var_597;
        wp::float32 var_598;
        wp::vec_t<3,wp::float32> var_599;
        wp::vec_t<3,wp::float32> var_600;
        wp::float32 var_601;
        wp::vec_t<3,wp::float32> var_602;
        wp::vec_t<3,wp::float32> var_603;
        wp::float32 var_604;
        wp::vec_t<3,wp::float32> var_605;
        wp::vec_t<3,wp::float32> var_606;
        wp::vec_t<3,wp::float32> var_607;
        wp::vec_t<3,wp::float32> var_608;
        wp::vec_t<3,wp::float32> var_609;
        wp::vec_t<3,wp::float32> var_610;
        wp::float32 var_611;
        wp::vec_t<3,wp::float32> var_612;
        wp::vec_t<3,wp::float32> var_613;
        wp::vec_t<3,wp::float32> var_614;
        wp::vec_t<3,wp::float32> var_615;
        wp::vec_t<3,wp::float32> var_616;
        wp::vec_t<3,wp::float32> var_617;
        wp::float32 var_618;
        wp::float32 var_619;
        wp::float32 var_620;
        wp::vec_t<3,wp::float32> var_621;
        wp::vec_t<3,wp::float32> var_622;
        wp::vec_t<3,wp::float32> var_623;
        wp::vec_t<3,wp::float32> var_624;
        wp::float32 var_625;
        wp::float32 var_626;
        wp::float32 var_627;
        wp::float32 var_628;
        wp::float32 var_629;
        const wp::int32 var_630 = 3;
        bool var_631;
        const wp::int32 var_632 = 0;
        bool var_633;
        const wp::int32 var_634 = 1;
        bool var_635;
        const wp::int32 var_636 = 6;
        bool var_637;
        const wp::int32 var_638 = 5;
        bool var_639;
        const wp::int32 var_640 = 8;
        bool var_641;
        bool var_642;
        wp::quat_t<wp::float32> var_643;
        wp::quat_t<wp::float32> var_644;
        wp::float32 var_645;
        bool var_646;
        wp::float32 var_647;
        wp::quat_t<wp::float32> var_648;
        wp::quat_t<wp::float32> var_649;
        wp::quat_t<wp::float32> var_650;
        wp::quat_t<wp::float32> var_651;
        wp::float32 var_652;
        const wp::int32 var_653 = 3;
        wp::float32 var_654;
        wp::quat_t<wp::float32> var_655;
        wp::quat_t<wp::float32> var_656;
        wp::quat_t<wp::float32> var_657;
        wp::quat_t<wp::float32> var_658;
        wp::float32 var_659;
        wp::float32 var_660;
        wp::float32 var_661;
        wp::float32 var_662;
        wp::float32 var_663;
        wp::float32 var_664;
        wp::float32 var_665;
        wp::float32 var_666;
        wp::float32 var_667;
        wp::float32 var_668;
        wp::float32 var_669;
        const wp::float32 var_670 = 2.0;
        wp::float32 var_671;
        wp::float32 var_672;
        wp::float32 var_673;
        wp::float32 var_674;
        wp::float32 var_675;
        wp::float32 var_676;
        wp::float32 var_677;
        wp::float32 var_678;
        wp::float32 var_679;
        wp::float32 var_680;
        wp::float32 var_681;
        wp::float32 var_682;
        wp::float32 var_683;
        wp::float32 var_684;
        wp::float32 var_685;
        wp::float32 var_686;
        wp::float32 var_687;
        wp::quat_t<wp::float32> var_688;
        wp::float32 var_689;
        wp::float32 var_690;
        wp::float32 var_691;
        wp::float32 var_692;
        wp::float32 var_693;
        wp::float32 var_694;
        wp::float32 var_695;
        wp::float32 var_696;
        wp::float32 var_697;
        wp::float32 var_698;
        wp::float32 var_699;
        wp::float32 var_700;
        wp::float32 var_701;
        wp::float32 var_702;
        wp::float32 var_703;
        wp::float32 var_704;
        wp::float32 var_705;
        wp::float32 var_706;
        wp::float32 var_707;
        wp::float32 var_708;
        wp::float32 var_709;
        wp::float32 var_710;
        wp::float32 var_711;
        wp::float32 var_712;
        wp::float32 var_713;
        wp::float32 var_714;
        wp::quat_t<wp::float32> var_715;
        wp::float32 var_716;
        wp::float32 var_717;
        wp::float32 var_718;
        wp::float32 var_719;
        wp::float32 var_720;
        wp::float32 var_721;
        wp::float32 var_722;
        wp::float32 var_723;
        wp::float32 var_724;
        wp::float32 var_725;
        wp::float32 var_726;
        wp::float32 var_727;
        wp::float32 var_728;
        wp::float32 var_729;
        wp::float32 var_730;
        wp::float32 var_731;
        wp::float32 var_732;
        wp::float32 var_733;
        wp::float32 var_734;
        wp::float32 var_735;
        wp::float32 var_736;
        wp::float32 var_737;
        wp::float32 var_738;
        wp::float32 var_739;
        wp::quat_t<wp::float32> var_740;
        wp::float32 var_741;
        wp::float32 var_742;
        wp::float32 var_743;
        wp::quat_t<wp::float32> var_744;
        wp::float32 var_745;
        wp::float32 var_746;
        wp::float32 var_747;
        const wp::float32 var_748 = 0.0001;
        wp::float32 var_749;
        bool var_750;
        wp::float32 var_751;
        wp::float32 var_752;
        wp::float32 var_753;
        wp::float32 var_754;
        wp::float32 var_755;
        wp::float32 var_756;
        wp::float32 var_757;
        wp::float32 var_758;
        wp::float32 var_759;
        wp::float32 var_760;
        wp::float32 var_761;
        wp::float32 var_762;
        wp::float32 var_763;
        wp::quat_t<wp::float32> var_764;
        wp::quat_t<wp::float32> var_765;
        wp::float32 var_766;
        wp::float32 var_767;
        wp::float32 var_768;
        wp::quat_t<wp::float32> var_769;
        wp::quat_t<wp::float32> var_770;
        wp::vec_t<3,wp::float32> var_771;
        wp::float32 var_772;
        wp::float32 var_773;
        wp::float32 var_774;
        wp::vec_t<3,wp::float32> var_775;
        wp::float32 var_776;
        wp::float32 var_777;
        wp::float32 var_778;
        wp::vec_t<3,wp::float32> var_779;
        wp::float32 var_780;
        wp::float32 var_781;
        wp::float32 var_782;
        wp::vec_t<3,wp::float32> var_783;
        wp::float32 var_784;
        wp::float32 var_785;
        wp::float32 var_786;
        wp::vec_t<3,wp::float32> var_787;
        wp::float32 var_788;
        wp::vec_t<6,wp::float32> var_789;
        wp::uint8 var_790;
        wp::uint8 var_791;
        wp::uint8 var_792;
        wp::vec_t<3,wp::uint8> var_793;
        wp::mat_t<3,3,wp::float32> var_794;
        bool var_795;
        wp::int32 var_796;
        wp::vec_t<3,wp::float32>* var_797;
        wp::vec_t<3,wp::float32> var_798;
        wp::vec_t<3,wp::float32> var_799;
        wp::float32* var_800;
        wp::float32 var_801;
        wp::vec_t<3,wp::float32> var_802;
        wp::float32* var_803;
        wp::float32 var_804;
        wp::vec_t<3,wp::float32> var_805;
        wp::vec_t<3,wp::float32> var_806;
        wp::vec_t<3,wp::float32> var_807;
        wp::vec_t<6,wp::float32> var_808;
        wp::uint8* var_809;
        wp::uint8 var_810;
        wp::uint8 var_811;
        bool var_812;
        wp::float32* var_813;
        wp::float32 var_814;
        wp::float32 var_815;
        wp::float32* var_816;
        wp::float32 var_817;
        wp::float32 var_818;
        wp::float32* var_819;
        wp::float32 var_820;
        wp::float32 var_821;
        wp::vec_t<3,wp::uint8> var_822;
        wp::mat_t<3,3,wp::float32> var_823;
        wp::float32 var_824;
        wp::float32 var_825;
        wp::float32 var_826;
        wp::vec_t<3,wp::uint8> var_827;
        wp::mat_t<3,3,wp::float32> var_828;
        wp::float32 var_829;
        wp::float32 var_830;
        wp::float32 var_831;
        wp::float32 var_832;
        wp::vec_t<6,wp::float32> var_833;
        wp::vec_t<3,wp::uint8> var_834;
        wp::mat_t<3,3,wp::float32> var_835;
        wp::vec_t<3,wp::float32> var_836;
        wp::vec_t<3,wp::float32> var_837;
        wp::vec_t<3,wp::float32> var_838;
        wp::uint8 var_839;
        wp::float32 var_840;
        wp::float32 var_841;
        wp::int32 var_842;
        bool var_843;
        wp::int32 var_844;
        wp::int32 var_845;
        wp::vec_t<3,wp::float32>* var_846;
        wp::vec_t<3,wp::float32> var_847;
        wp::vec_t<3,wp::float32> var_848;
        wp::float32* var_849;
        wp::float32 var_850;
        wp::float32 var_851;
        wp::float32* var_852;
        wp::float32 var_853;
        wp::float32 var_854;
        wp::vec_t<6,wp::float32> var_855;
        wp::uint8* var_856;
        wp::uint8 var_857;
        wp::uint8 var_858;
        bool var_859;
        wp::float32* var_860;
        wp::float32 var_861;
        wp::float32 var_862;
        wp::float32* var_863;
        wp::float32 var_864;
        wp::float32 var_865;
        wp::float32* var_866;
        wp::float32 var_867;
        wp::float32 var_868;
        wp::vec_t<3,wp::uint8> var_869;
        wp::mat_t<3,3,wp::float32> var_870;
        wp::float32 var_871;
        wp::float32 var_872;
        wp::float32 var_873;
        wp::vec_t<3,wp::uint8> var_874;
        wp::mat_t<3,3,wp::float32> var_875;
        wp::float32 var_876;
        wp::float32 var_877;
        wp::float32 var_878;
        wp::float32 var_879;
        wp::float32 var_880;
        wp::float32 var_881;
        wp::vec_t<6,wp::float32> var_882;
        wp::vec_t<3,wp::uint8> var_883;
        wp::mat_t<3,3,wp::float32> var_884;
        wp::vec_t<3,wp::float32> var_885;
        wp::uint8 var_886;
        wp::float32 var_887;
        wp::float32 var_888;
        wp::int32 var_889;
        bool var_890;
        wp::int32 var_891;
        wp::int32 var_892;
        wp::vec_t<3,wp::float32>* var_893;
        wp::vec_t<3,wp::float32> var_894;
        wp::vec_t<3,wp::float32> var_895;
        wp::float32* var_896;
        wp::float32 var_897;
        wp::float32 var_898;
        wp::float32* var_899;
        wp::float32 var_900;
        wp::float32 var_901;
        wp::vec_t<6,wp::float32> var_902;
        wp::uint8* var_903;
        wp::uint8 var_904;
        wp::uint8 var_905;
        bool var_906;
        wp::float32* var_907;
        wp::float32 var_908;
        wp::float32 var_909;
        wp::float32* var_910;
        wp::float32 var_911;
        wp::float32 var_912;
        wp::float32* var_913;
        wp::float32 var_914;
        wp::float32 var_915;
        wp::vec_t<3,wp::uint8> var_916;
        wp::mat_t<3,3,wp::float32> var_917;
        wp::float32 var_918;
        wp::float32 var_919;
        wp::float32 var_920;
        wp::vec_t<3,wp::uint8> var_921;
        wp::mat_t<3,3,wp::float32> var_922;
        wp::float32 var_923;
        wp::float32 var_924;
        wp::float32 var_925;
        wp::float32 var_926;
        wp::float32 var_927;
        wp::float32 var_928;
        wp::vec_t<6,wp::float32> var_929;
        wp::vec_t<3,wp::uint8> var_930;
        wp::mat_t<3,3,wp::float32> var_931;
        wp::vec_t<3,wp::float32> var_932;
        wp::uint8 var_933;
        wp::float32 var_934;
        wp::float32 var_935;
        wp::int32 var_936;
        wp::vec_t<3,wp::float32> var_937;
        wp::vec_t<3,wp::float32> var_938;
        wp::vec_t<3,wp::float32> var_939;
        bool var_940;
        wp::vec_t<3,wp::float32> var_941;
        wp::vec_t<3,wp::float32> var_942;
        wp::vec_t<3,wp::float32> var_943;
        wp::vec_t<3,wp::float32> var_944;
        const wp::int32 var_945 = 0;
        wp::int32 var_946;
        wp::float32 var_947;
        wp::uint8 var_948;
        wp::float32 var_949;
        wp::float32 var_950;
        wp::float32 var_951;
        wp::float32 var_952;
        wp::quat_t<wp::float32> var_953;
        const wp::float32 var_954 = 0.5;
        wp::quat_t<wp::float32> var_955;
        wp::quat_t<wp::float32> var_956;
        wp::quat_t<wp::float32> var_957;
        wp::quat_t<wp::float32> var_958;
        wp::float32 var_959;
        wp::float32 var_960;
        wp::float32 var_961;
        wp::vec_t<3,wp::float32> var_962;
        wp::vec_t<3,wp::float32> var_963;
        wp::float32 var_964;
        wp::float32 var_965;
        wp::float32 var_966;
        wp::float32 var_967;
        wp::float32 var_968;
        wp::float32 var_969;
        bool var_970;
        wp::float32 var_971;
        wp::float32 var_972;
        wp::float32 var_973;
        wp::float32 var_974;
        bool var_975;
        wp::float32 var_976;
        wp::float32 var_977;
        wp::float32 var_978;
        wp::float32 var_979;
        wp::float32 var_980;
        bool var_981;
        wp::float32 var_982;
        wp::float32 var_983;
        bool var_984;
        wp::float32 var_985;
        wp::float32 var_986;
        wp::float32 var_987;
        wp::float32 var_988;
        wp::float32 var_989;
        wp::float32 var_990;
        wp::float32 var_991;
        wp::float32 var_992;
        wp::float32 var_993;
        wp::float32 var_994;
        bool var_995;
        wp::float32 var_996;
        bool var_997;
        wp::float32 var_998;
        wp::float32 var_999;
        wp::float32 var_1000;
        wp::float32 var_1001;
        wp::float32 var_1002;
        wp::float32 var_1003;
        wp::float32 var_1004;
        wp::float32 var_1005;
        wp::float32 var_1006;
        wp::float32 var_1007;
        wp::float32 var_1008;
        wp::float32 var_1009;
        wp::float32 var_1010;
        wp::float32 var_1011;
        wp::float32 var_1012;
        wp::float32 var_1013;
        wp::float32 var_1014;
        wp::float32 var_1015;
        wp::float32 var_1016;
        wp::float32 var_1017;
        wp::float32 var_1018;
        wp::float32 var_1019;
        wp::float32 var_1020;
        wp::vec_t<3,wp::float32> var_1021;
        wp::vec_t<3,wp::float32> var_1022;
        wp::vec_t<3,wp::float32> var_1023;
        wp::vec_t<3,wp::float32> var_1024;
        const wp::int32 var_1025 = 1;
        wp::int32 var_1026;
        wp::float32 var_1027;
        wp::uint8 var_1028;
        wp::float32 var_1029;
        wp::float32 var_1030;
        wp::float32 var_1031;
        wp::float32 var_1032;
        wp::quat_t<wp::float32> var_1033;
        wp::quat_t<wp::float32> var_1034;
        wp::quat_t<wp::float32> var_1035;
        wp::quat_t<wp::float32> var_1036;
        wp::quat_t<wp::float32> var_1037;
        wp::float32 var_1038;
        wp::float32 var_1039;
        wp::float32 var_1040;
        wp::vec_t<3,wp::float32> var_1041;
        wp::vec_t<3,wp::float32> var_1042;
        wp::float32 var_1043;
        wp::float32 var_1044;
        wp::float32 var_1045;
        wp::float32 var_1046;
        wp::float32 var_1047;
        wp::float32 var_1048;
        bool var_1049;
        wp::float32 var_1050;
        wp::float32 var_1051;
        wp::float32 var_1052;
        wp::float32 var_1053;
        bool var_1054;
        wp::float32 var_1055;
        wp::float32 var_1056;
        wp::float32 var_1057;
        wp::float32 var_1058;
        wp::float32 var_1059;
        bool var_1060;
        wp::float32 var_1061;
        wp::float32 var_1062;
        bool var_1063;
        wp::float32 var_1064;
        wp::float32 var_1065;
        wp::float32 var_1066;
        wp::float32 var_1067;
        wp::float32 var_1068;
        wp::float32 var_1069;
        wp::float32 var_1070;
        wp::float32 var_1071;
        wp::float32 var_1072;
        wp::float32 var_1073;
        bool var_1074;
        wp::float32 var_1075;
        bool var_1076;
        wp::float32 var_1077;
        wp::float32 var_1078;
        wp::float32 var_1079;
        wp::float32 var_1080;
        wp::float32 var_1081;
        wp::float32 var_1082;
        wp::float32 var_1083;
        wp::float32 var_1084;
        wp::float32 var_1085;
        wp::float32 var_1086;
        wp::float32 var_1087;
        wp::float32 var_1088;
        wp::float32 var_1089;
        wp::float32 var_1090;
        wp::float32 var_1091;
        wp::float32 var_1092;
        wp::float32 var_1093;
        wp::float32 var_1094;
        wp::float32 var_1095;
        wp::float32 var_1096;
        wp::float32 var_1097;
        wp::float32 var_1098;
        wp::float32 var_1099;
        wp::vec_t<3,wp::float32> var_1100;
        wp::vec_t<3,wp::float32> var_1101;
        wp::vec_t<3,wp::float32> var_1102;
        wp::vec_t<3,wp::float32> var_1103;
        const wp::int32 var_1104 = 2;
        wp::int32 var_1105;
        wp::float32 var_1106;
        wp::uint8 var_1107;
        wp::float32 var_1108;
        wp::float32 var_1109;
        wp::float32 var_1110;
        wp::float32 var_1111;
        wp::quat_t<wp::float32> var_1112;
        wp::quat_t<wp::float32> var_1113;
        wp::quat_t<wp::float32> var_1114;
        wp::quat_t<wp::float32> var_1115;
        wp::quat_t<wp::float32> var_1116;
        wp::float32 var_1117;
        wp::float32 var_1118;
        wp::float32 var_1119;
        wp::vec_t<3,wp::float32> var_1120;
        wp::vec_t<3,wp::float32> var_1121;
        wp::float32 var_1122;
        wp::float32 var_1123;
        wp::float32 var_1124;
        wp::float32 var_1125;
        wp::float32 var_1126;
        wp::float32 var_1127;
        bool var_1128;
        wp::float32 var_1129;
        wp::float32 var_1130;
        wp::float32 var_1131;
        wp::float32 var_1132;
        bool var_1133;
        wp::float32 var_1134;
        wp::float32 var_1135;
        wp::float32 var_1136;
        wp::float32 var_1137;
        wp::float32 var_1138;
        bool var_1139;
        wp::float32 var_1140;
        wp::float32 var_1141;
        bool var_1142;
        wp::float32 var_1143;
        wp::float32 var_1144;
        wp::float32 var_1145;
        wp::float32 var_1146;
        wp::float32 var_1147;
        wp::float32 var_1148;
        wp::float32 var_1149;
        wp::float32 var_1150;
        wp::float32 var_1151;
        wp::float32 var_1152;
        bool var_1153;
        wp::float32 var_1154;
        bool var_1155;
        wp::float32 var_1156;
        wp::float32 var_1157;
        wp::float32 var_1158;
        wp::float32 var_1159;
        wp::float32 var_1160;
        wp::float32 var_1161;
        wp::float32 var_1162;
        wp::float32 var_1163;
        wp::float32 var_1164;
        wp::float32 var_1165;
        wp::float32 var_1166;
        wp::float32 var_1167;
        wp::float32 var_1168;
        wp::float32 var_1169;
        wp::float32 var_1170;
        wp::float32 var_1171;
        wp::float32 var_1172;
        wp::float32 var_1173;
        wp::float32 var_1174;
        wp::float32 var_1175;
        wp::float32 var_1176;
        wp::float32 var_1177;
        wp::float32 var_1178;
        wp::vec_t<3,wp::float32> var_1179;
        wp::vec_t<3,wp::float32> var_1180;
        wp::vec_t<3,wp::float32> var_1181;
        wp::vec_t<3,wp::float32> var_1182;
        wp::vec_t<3,wp::float32> var_1183;
        wp::vec_t<3,wp::float32> var_1184;
        wp::float32 var_1185;
        wp::float32 var_1186;
        wp::float32 var_1187;
        wp::float32 var_1188;
        wp::vec_t<3,wp::float32> var_1189;
        wp::vec_t<3,wp::float32> var_1190;
        wp::float32 var_1191;
        wp::float32 var_1192;
        wp::float32 var_1193;
        wp::float32 var_1194;
        wp::float32 var_1195;
        wp::float32 var_1196;
        wp::vec_t<6,wp::float32> var_1197;
        wp::vec_t<3,wp::uint8> var_1198;
        wp::mat_t<3,3,wp::float32> var_1199;
        wp::vec_t<3,wp::float32> var_1200;
        wp::vec_t<3,wp::float32> var_1201;
        wp::vec_t<3,wp::float32> var_1202;
        wp::uint8 var_1203;
        wp::float32 var_1204;
        wp::float32 var_1205;
        wp::int32 var_1206;
        wp::vec_t<3,wp::float32> var_1207;
        wp::vec_t<3,wp::float32> var_1208;
        wp::vec_t<3,wp::float32> var_1209;
        wp::vec_t<3,wp::float32> var_1210;
        wp::vec_t<3,wp::float32> var_1211;
        wp::int32 var_1212;
        wp::float32 var_1213;
        bool var_1214;
        wp::vec_t<6,wp::float32> var_1215;
        wp::vec_t<6,wp::float32> var_1216;
        bool var_1217;
        wp::vec_t<6,wp::float32> var_1218;
        wp::vec_t<6,wp::float32> var_1219;
        //---------
        // forward
        // def solve_body_joints(                                                                 <L 817>
        // tid = wp.tid()                                                                         <L 845>
        var_0 = builtin_tid1d();
        // type = joint_type[tid]                                                                 <L 846>
        var_1 = wp::address(var_joint_type, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // if joint_enabled[tid] == 0 or type == fs5Model.JOINT_FREE:                             <L 848>
        var_4 = wp::address(var_joint_enabled, var_0);
        var_7 = wp::load(var_4);
        var_6 = (var_7 == var_5);
        var_9 = (var_3 == var_8);
        var_10 = var_6 || var_9;
        if (var_10) {
            // return                                                                             <L 849>
            return;
        }
        // id_c = joint_child[tid]                                                                <L 852>
        var_11 = wp::address(var_joint_child, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // id_p = joint_parent[tid]                                                               <L 853>
        var_14 = wp::address(var_joint_parent, var_0);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // X_pj = joint_X_p[tid]                                                                  <L 855>
        var_17 = wp::address(var_joint_X_p, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // X_cj = joint_X_c[tid]                                                                  <L 856>
        var_20 = wp::address(var_joint_X_c, var_0);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // X_wp = X_pj                                                                            <L 858>
        var_23 = wp::copy(var_19);
        // m_inv_p = 0.0                                                                          <L 859>
        // I_inv_p = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 860>
        var_25 = wp::mat_t<3,3,wp::float32>(var_24, var_24, var_24, var_24, var_24, var_24, var_24, var_24, var_24);
        // pose_p = X_pj                                                                          <L 861>
        var_26 = wp::copy(var_19);
        // com_p = wp.vec3(0.0)                                                                   <L 862>
        var_27 = wp::vec_t<3,wp::float32>(var_24);
        // vel_p = wp.vec3(0.0)                                                                   <L 863>
        var_28 = wp::vec_t<3,wp::float32>(var_24);
        // omega_p = wp.vec3(0.0)                                                                 <L 864>
        var_29 = wp::vec_t<3,wp::float32>(var_24);
        // if id_p >= 0:                                                                          <L 866>
        var_30 = (var_16 >= var_5);
        if (var_30) {
            // pose_p = body_q[id_p]                                                              <L 867>
            var_31 = wp::address(var_body_q, var_16);
            var_32 = wp::load(var_31);
            var_33 = wp::copy(var_32);
            // X_wp = pose_p * X_wp                                                               <L 868>
            var_34 = wp::mul(var_33, var_23);
            // com_p = body_com[id_p]                                                             <L 869>
            var_35 = wp::address(var_body_com, var_16);
            var_36 = wp::load(var_35);
            var_37 = wp::copy(var_36);
            // m_inv_p = body_inv_m[id_p]                                                         <L 870>
            var_38 = wp::address(var_body_inv_m, var_16);
            var_39 = wp::load(var_38);
            var_40 = wp::copy(var_39);
            // I_inv_p = body_inv_I[id_p]                                                         <L 871>
            var_41 = wp::address(var_body_inv_I, var_16);
            var_42 = wp::load(var_41);
            var_43 = wp::copy(var_42);
            // vel_p = wp.spatial_bottom(body_qd[id_p])                                           <L 872>
            var_44 = wp::address(var_body_qd, var_16);
            var_45 = wp::load(var_44);
            var_46 = wp::spatial_bottom(var_45);
            // omega_p = wp.spatial_top(body_qd[id_p])                                            <L 873>
            var_47 = wp::address(var_body_qd, var_16);
            var_48 = wp::load(var_47);
            var_49 = wp::spatial_top(var_48);
        }
        var_50 = wp::select(var_30, var_23, var_34);
        var_51 = wp::select(var_30, var_24, var_40);
        var_52 = wp::select(var_30, var_25, var_43);
        var_53 = wp::select(var_30, var_26, var_33);
        var_54 = wp::select(var_30, var_27, var_37);
        var_55 = wp::select(var_30, var_28, var_46);
        var_56 = wp::select(var_30, var_29, var_49);
        // pose_c = body_q[id_c]                                                                  <L 876>
        var_57 = wp::address(var_body_q, var_13);
        var_58 = wp::load(var_57);
        var_59 = wp::copy(var_58);
        // X_wc = pose_c * X_cj                                                                   <L 877>
        var_60 = wp::mul(var_59, var_22);
        // com_c = body_com[id_c]                                                                 <L 878>
        var_61 = wp::address(var_body_com, var_13);
        var_62 = wp::load(var_61);
        var_63 = wp::copy(var_62);
        // m_inv_c = body_inv_m[id_c]                                                             <L 879>
        var_64 = wp::address(var_body_inv_m, var_13);
        var_65 = wp::load(var_64);
        var_66 = wp::copy(var_65);
        // I_inv_c = body_inv_I[id_c]                                                             <L 880>
        var_67 = wp::address(var_body_inv_I, var_13);
        var_68 = wp::load(var_67);
        var_69 = wp::copy(var_68);
        // vel_c = wp.spatial_bottom(body_qd[id_c])                                               <L 881>
        var_70 = wp::address(var_body_qd, var_13);
        var_71 = wp::load(var_70);
        var_72 = wp::spatial_bottom(var_71);
        // omega_c = wp.spatial_top(body_qd[id_c])                                                <L 882>
        var_73 = wp::address(var_body_qd, var_13);
        var_74 = wp::load(var_73);
        var_75 = wp::spatial_top(var_74);
        // if m_inv_p == 0.0 and m_inv_c == 0.0:                                                  <L 884>
        var_76 = (var_51 == var_24);
        var_77 = (var_66 == var_24);
        var_78 = var_76 && var_77;
        if (var_78) {
            // return                                                                             <L 886>
            return;
        }
        // lin_delta_p = wp.vec3(0.0)                                                             <L 889>
        var_79 = wp::vec_t<3,wp::float32>(var_24);
        // ang_delta_p = wp.vec3(0.0)                                                             <L 890>
        var_80 = wp::vec_t<3,wp::float32>(var_24);
        // lin_delta_c = wp.vec3(0.0)                                                             <L 891>
        var_81 = wp::vec_t<3,wp::float32>(var_24);
        // ang_delta_c = wp.vec3(0.0)                                                             <L 892>
        var_82 = wp::vec_t<3,wp::float32>(var_24);
        // rel_pose = wp.transform_inverse(X_wp) * X_wc                                           <L 894>
        var_83 = wp::transform_inverse(var_50);
        var_84 = wp::mul(var_83, var_60);
        // rel_p = wp.transform_get_translation(rel_pose)                                         <L 895>
        var_85 = wp::transform_get_translation(var_84);
        // x_c = wp.transform_get_translation(X_wc)                                               <L 899>
        var_86 = wp::transform_get_translation(var_60);
        // linear_compliance = joint_linear_compliance[tid]                                       <L 901>
        var_87 = wp::address(var_joint_linear_compliance, var_0);
        var_88 = wp::load(var_87);
        var_89 = wp::copy(var_88);
        // angular_compliance = joint_angular_compliance[tid]                                     <L 902>
        var_90 = wp::address(var_joint_angular_compliance, var_0);
        var_91 = wp::load(var_90);
        var_92 = wp::copy(var_91);
        // axis_start = joint_axis_start[tid]                                                     <L 904>
        var_93 = wp::address(var_joint_axis_start, var_0);
        var_94 = wp::load(var_93);
        var_95 = wp::copy(var_94);
        // lin_axis_count = joint_axis_dim[tid, 0]                                                <L 905>
        var_96 = wp::address(var_joint_axis_dim, var_0, var_5);
        var_97 = wp::load(var_96);
        var_98 = wp::copy(var_97);
        // ang_axis_count = joint_axis_dim[tid, 1]                                                <L 906>
        var_100 = wp::address(var_joint_axis_dim, var_0, var_99);
        var_101 = wp::load(var_100);
        var_102 = wp::copy(var_101);
        // world_com_p = wp.transform_point(pose_p, com_p)                                        <L 908>
        var_103 = wp::transform_point(var_53, var_54);
        // world_com_c = wp.transform_point(pose_c, com_c)                                        <L 909>
        var_104 = wp::transform_point(var_59, var_63);
        // if type == fs5Model.JOINT_DISTANCE:                                                    <L 912>
        var_106 = (var_3 == var_105);
        if (var_106) {
            // r_p = wp.transform_get_translation(X_wp) - world_com_p                             <L 913>
            var_107 = wp::transform_get_translation(var_50);
            var_108 = wp::sub(var_107, var_103);
            // r_c = wp.transform_get_translation(X_wc) - world_com_c                             <L 914>
            var_109 = wp::transform_get_translation(var_60);
            var_110 = wp::sub(var_109, var_104);
            // lower = joint_limit_lower[axis_start]                                              <L 915>
            var_111 = wp::address(var_joint_limit_lower, var_95);
            var_112 = wp::load(var_111);
            var_113 = wp::copy(var_112);
            // upper = joint_limit_upper[axis_start]                                              <L 916>
            var_114 = wp::address(var_joint_limit_upper, var_95);
            var_115 = wp::load(var_114);
            var_116 = wp::copy(var_115);
            // if lower < 0.0 and upper < 0.0:                                                    <L 917>
            var_117 = (var_113 < var_24);
            var_118 = (var_116 < var_24);
            var_119 = var_117 && var_118;
            if (var_119) {
                // return                                                                         <L 919>
                return;
            }
            // d = wp.length(rel_p)                                                               <L 920>
            var_120 = wp::length(var_85);
            // err = 0.0                                                                          <L 921>
            // if lower >= 0.0 and d < lower:                                                     <L 922>
            var_121 = (var_113 >= var_24);
            var_122 = (var_120 < var_113);
            var_123 = var_121 && var_122;
            if (var_123) {
                // err = d - lower                                                                <L 923>
                var_124 = wp::sub(var_120, var_113);
                // rel_p = err * wp.normalize(world_com_c - world_com_p)                          <L 926>
                var_125 = wp::sub(var_104, var_103);
                var_126 = wp::normalize(var_125);
                var_127 = wp::mul(var_124, var_126);
            }
            var_128 = wp::select(var_123, var_85, var_127);
            var_129 = wp::select(var_123, var_24, var_124);
            if (!var_123) {
                // elif upper >= 0.0 and d > upper:                                               <L 927>
                var_130 = (var_116 >= var_24);
                var_131 = (var_120 > var_116);
                var_132 = var_130 && var_131;
                if (var_132) {
                    // err = d - upper                                                            <L 928>
                    var_133 = wp::sub(var_120, var_116);
                }
                var_134 = wp::select(var_132, var_129, var_133);
            }
            var_135 = wp::select(var_123, var_134, var_129);
            // if wp.abs(err) > 1e-9:                                                             <L 930>
            var_136 = wp::abs(var_135);
            var_138 = (var_136 > var_137);
            if (var_138) {
                // linear_c = rel_p                                                               <L 932>
                var_139 = wp::copy(var_128);
                // linear_p = -linear_c                                                           <L 933>
                var_140 = wp::neg(var_139);
                // r_c = x_c - world_com_c                                                        <L 934>
                var_141 = wp::sub(var_86, var_104);
                // angular_p = -wp.cross(r_p, linear_c)                                           <L 935>
                var_142 = wp::cross(var_108, var_139);
                var_143 = wp::neg(var_142);
                // angular_c = wp.cross(r_c, linear_c)                                            <L 936>
                var_144 = wp::cross(var_141, var_139);
                // derr = (                                                                       <L 938>
                // wp.dot(linear_p, vel_p)                                                        <L 939>
                var_145 = wp::dot(var_140, var_55);
                // + wp.dot(linear_c, vel_c)                                                      <L 940>
                var_146 = wp::dot(var_139, var_72);
                var_147 = wp::add(var_145, var_146);
                // + wp.dot(angular_p, omega_p)                                                   <L 941>
                var_148 = wp::dot(var_143, var_56);
                var_149 = wp::add(var_147, var_148);
                // + wp.dot(angular_c, omega_c)                                                   <L 942>
                var_150 = wp::dot(var_144, var_75);
                var_151 = wp::add(var_149, var_150);
                // lambda_in = 0.0                                                                <L 944>
                // compliance = linear_compliance                                                 <L 945>
                var_152 = wp::copy(var_89);
                // ke = joint_target_ke[axis_start]                                               <L 946>
                var_153 = wp::address(var_joint_target_ke, var_95);
                var_154 = wp::load(var_153);
                var_155 = wp::copy(var_154);
                // if ke > 0.0:                                                                   <L 947>
                var_156 = (var_155 > var_24);
                if (var_156) {
                    // compliance = 1.0 / ke                                                      <L 948>
                    var_158 = wp::div(var_157, var_155);
                }
                var_159 = wp::select(var_156, var_152, var_158);
                // damping = joint_target_kd[axis_start]                                          <L 949>
                var_160 = wp::address(var_joint_target_kd, var_95);
                var_161 = wp::load(var_160);
                var_162 = wp::copy(var_161);
                // d_lambda = compute_positional_correction(                                      <L 950>
                // err,                                                                           <L 951>
                // derr,                                                                          <L 952>
                // pose_p,                                                                        <L 953>
                // pose_c,                                                                        <L 954>
                // m_inv_p,                                                                       <L 955>
                // m_inv_c,                                                                       <L 956>
                // I_inv_p,                                                                       <L 957>
                // I_inv_c,                                                                       <L 958>
                // linear_p,                                                                      <L 959>
                // linear_c,                                                                      <L 960>
                // angular_p,                                                                     <L 961>
                // angular_c,                                                                     <L 962>
                // lambda_in,                                                                     <L 963>
                // compliance,                                                                    <L 964>
                // damping,                                                                       <L 965>
                // dt,                                                                            <L 966>
                var_163 = compute_positional_correction(var_135, var_151, var_53, var_59, var_51, var_66, var_52, var_69, var_140, var_139, var_143, var_144, var_24, var_159, var_162, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 969>
                var_164 = wp::mul(var_163, var_linear_relaxation);
                var_165 = wp::mul(var_140, var_164);
                var_166 = wp::add(var_79, var_165);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 970>
                var_167 = wp::mul(var_163, var_angular_relaxation);
                var_168 = wp::mul(var_143, var_167);
                var_169 = wp::add(var_80, var_168);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 971>
                var_170 = wp::mul(var_163, var_linear_relaxation);
                var_171 = wp::mul(var_139, var_170);
                var_172 = wp::add(var_81, var_171);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 972>
                var_173 = wp::mul(var_163, var_angular_relaxation);
                var_174 = wp::mul(var_144, var_173);
                var_175 = wp::add(var_82, var_174);
            }
            var_176 = wp::select(var_138, var_79, var_166);
            var_177 = wp::select(var_138, var_80, var_169);
            var_178 = wp::select(var_138, var_81, var_172);
            var_179 = wp::select(var_138, var_82, var_175);
            var_180 = wp::select(var_138, var_110, var_141);
        }
        var_181 = wp::select(var_106, var_79, var_176);
        var_182 = wp::select(var_106, var_80, var_177);
        var_183 = wp::select(var_106, var_81, var_178);
        var_184 = wp::select(var_106, var_82, var_179);
        var_185 = wp::select(var_106, var_85, var_128);
        if (!var_106) {
            // ke_sum = float(0.0)                                                                <L 976>
            var_186 = wp::float(var_24);
            // axis_limits = wp.spatial_vector(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                      <L 977>
            var_187 = wp::vec_t<6,wp::float32>({var_24, var_24, var_24, var_24, var_24, var_24});
            // axis_mode = wp.vec3ub(wp.uint8(0), wp.uint8(0), wp.uint8(0))                       <L 978>
            var_188 = wp::uint8(var_5);
            var_189 = wp::uint8(var_5);
            var_190 = wp::uint8(var_5);
            var_191 = wp::vec_t<3,wp::uint8>(var_188, var_189, var_190);
            // axis_target_ke_kd = wp.mat33(0.0)                                                  <L 979>
            var_192 = wp::mat_t<3,3,wp::float32>(var_24);
            // if lin_axis_count > 0:                                                             <L 981>
            var_193 = (var_98 > var_5);
            if (var_193) {
                // axis = joint_axis[axis_start]                                                  <L 982>
                var_194 = wp::address(var_joint_axis, var_95);
                var_195 = wp::load(var_194);
                var_196 = wp::copy(var_195);
                // lo_temp = axis * joint_limit_lower[axis_start]                                 <L 983>
                var_197 = wp::address(var_joint_limit_lower, var_95);
                var_198 = wp::load(var_197);
                var_199 = wp::mul(var_196, var_198);
                // up_temp = axis * joint_limit_upper[axis_start]                                 <L 984>
                var_200 = wp::address(var_joint_limit_upper, var_95);
                var_201 = wp::load(var_200);
                var_202 = wp::mul(var_196, var_201);
                // axis_limits = wp.spatial_vector(vec_min(lo_temp, up_temp), vec_max(lo_temp, up_temp))       <L 985>
                var_203 = vec_min(var_199, var_202);
                var_204 = vec_max(var_199, var_202);
                var_205 = wp::vec_t<6,wp::float32>(var_203, var_204);
                // mode = joint_axis_mode[axis_start]                                             <L 986>
                var_206 = wp::address(var_joint_axis_mode, var_95);
                var_207 = wp::load(var_206);
                var_208 = wp::copy(var_207);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 987>
                var_210 = (var_208 != var_209);
                if (var_210) {
                    // ke = joint_target_ke[axis_start]                                           <L 988>
                    var_211 = wp::address(var_joint_target_ke, var_95);
                    var_212 = wp::load(var_211);
                    var_213 = wp::copy(var_212);
                    // kd = joint_target_kd[axis_start]                                           <L 989>
                    var_214 = wp::address(var_joint_target_kd, var_95);
                    var_215 = wp::load(var_214);
                    var_216 = wp::copy(var_215);
                    // target = joint_target[axis_start]                                          <L 990>
                    var_217 = wp::address(var_joint_target, var_95);
                    var_218 = wp::load(var_217);
                    var_219 = wp::copy(var_218);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 991>
                    var_220 = update_joint_axis_mode(var_208, var_196, var_191);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 992>
                    var_221 = update_joint_axis_target_ke_kd(var_196, var_219, var_213, var_216, var_192);
                    // ke_sum += ke                                                               <L 993>
                    var_222 = wp::add(var_186, var_213);
                }
                var_223 = wp::select(var_210, var_155, var_213);
                var_224 = wp::select(var_210, var_186, var_222);
                var_225 = wp::select(var_210, var_191, var_220);
                var_226 = wp::select(var_210, var_192, var_221);
            }
            var_227 = wp::select(var_193, var_155, var_223);
            var_228 = wp::select(var_193, var_186, var_224);
            var_229 = wp::select(var_193, var_187, var_205);
            var_230 = wp::select(var_193, var_191, var_225);
            var_231 = wp::select(var_193, var_192, var_226);
            // if lin_axis_count > 1:                                                             <L 994>
            var_232 = (var_98 > var_99);
            if (var_232) {
                // axis_idx = axis_start + 1                                                      <L 995>
                var_233 = wp::add(var_95, var_99);
                // axis = joint_axis[axis_idx]                                                    <L 996>
                var_234 = wp::address(var_joint_axis, var_233);
                var_235 = wp::load(var_234);
                var_236 = wp::copy(var_235);
                // lower = joint_limit_lower[axis_idx]                                            <L 997>
                var_237 = wp::address(var_joint_limit_lower, var_233);
                var_238 = wp::load(var_237);
                var_239 = wp::copy(var_238);
                // upper = joint_limit_upper[axis_idx]                                            <L 998>
                var_240 = wp::address(var_joint_limit_upper, var_233);
                var_241 = wp::load(var_240);
                var_242 = wp::copy(var_241);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 999>
                var_243 = update_joint_axis_limits(var_236, var_239, var_242, var_229);
                // mode = joint_axis_mode[axis_idx]                                               <L 1000>
                var_244 = wp::address(var_joint_axis_mode, var_233);
                var_245 = wp::load(var_244);
                var_246 = wp::copy(var_245);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1001>
                var_247 = (var_246 != var_209);
                if (var_247) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1002>
                    var_248 = wp::address(var_joint_target_ke, var_233);
                    var_249 = wp::load(var_248);
                    var_250 = wp::copy(var_249);
                    // kd = joint_target_kd[axis_idx]                                             <L 1003>
                    var_251 = wp::address(var_joint_target_kd, var_233);
                    var_252 = wp::load(var_251);
                    var_253 = wp::copy(var_252);
                    // target = joint_target[axis_idx]                                            <L 1004>
                    var_254 = wp::address(var_joint_target, var_233);
                    var_255 = wp::load(var_254);
                    var_256 = wp::copy(var_255);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1005>
                    var_257 = update_joint_axis_mode(var_246, var_236, var_230);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1006>
                    var_258 = update_joint_axis_target_ke_kd(var_236, var_256, var_250, var_253, var_231);
                    // ke_sum += ke                                                               <L 1007>
                    var_259 = wp::add(var_228, var_250);
                }
                var_260 = wp::select(var_247, var_227, var_250);
                var_261 = wp::select(var_247, var_228, var_259);
                var_262 = wp::select(var_247, var_230, var_257);
                var_263 = wp::select(var_247, var_231, var_258);
                var_264 = wp::select(var_247, var_216, var_253);
                var_265 = wp::select(var_247, var_219, var_256);
            }
            var_266 = wp::select(var_232, var_113, var_239);
            var_267 = wp::select(var_232, var_116, var_242);
            var_268 = wp::select(var_232, var_227, var_260);
            var_269 = wp::select(var_232, var_228, var_261);
            var_270 = wp::select(var_232, var_229, var_243);
            var_271 = wp::select(var_232, var_230, var_262);
            var_272 = wp::select(var_232, var_231, var_263);
            var_273 = wp::select(var_232, var_196, var_236);
            var_274 = wp::select(var_232, var_208, var_246);
            var_275 = wp::select(var_232, var_216, var_264);
            var_276 = wp::select(var_232, var_219, var_265);
            // if lin_axis_count > 2:                                                             <L 1008>
            var_278 = (var_98 > var_277);
            if (var_278) {
                // axis_idx = axis_start + 2                                                      <L 1009>
                var_279 = wp::add(var_95, var_277);
                // axis = joint_axis[axis_idx]                                                    <L 1010>
                var_280 = wp::address(var_joint_axis, var_279);
                var_281 = wp::load(var_280);
                var_282 = wp::copy(var_281);
                // lower = joint_limit_lower[axis_idx]                                            <L 1011>
                var_283 = wp::address(var_joint_limit_lower, var_279);
                var_284 = wp::load(var_283);
                var_285 = wp::copy(var_284);
                // upper = joint_limit_upper[axis_idx]                                            <L 1012>
                var_286 = wp::address(var_joint_limit_upper, var_279);
                var_287 = wp::load(var_286);
                var_288 = wp::copy(var_287);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 1013>
                var_289 = update_joint_axis_limits(var_282, var_285, var_288, var_270);
                // mode = joint_axis_mode[axis_idx]                                               <L 1014>
                var_290 = wp::address(var_joint_axis_mode, var_279);
                var_291 = wp::load(var_290);
                var_292 = wp::copy(var_291);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1015>
                var_293 = (var_292 != var_209);
                if (var_293) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1016>
                    var_294 = wp::address(var_joint_target_ke, var_279);
                    var_295 = wp::load(var_294);
                    var_296 = wp::copy(var_295);
                    // kd = joint_target_kd[axis_idx]                                             <L 1017>
                    var_297 = wp::address(var_joint_target_kd, var_279);
                    var_298 = wp::load(var_297);
                    var_299 = wp::copy(var_298);
                    // target = joint_target[axis_idx]                                            <L 1018>
                    var_300 = wp::address(var_joint_target, var_279);
                    var_301 = wp::load(var_300);
                    var_302 = wp::copy(var_301);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1019>
                    var_303 = update_joint_axis_mode(var_292, var_282, var_271);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1020>
                    var_304 = update_joint_axis_target_ke_kd(var_282, var_302, var_296, var_299, var_272);
                    // ke_sum += ke                                                               <L 1021>
                    var_305 = wp::add(var_269, var_296);
                }
                var_306 = wp::select(var_293, var_268, var_296);
                var_307 = wp::select(var_293, var_269, var_305);
                var_308 = wp::select(var_293, var_271, var_303);
                var_309 = wp::select(var_293, var_272, var_304);
                var_310 = wp::select(var_293, var_275, var_299);
                var_311 = wp::select(var_293, var_276, var_302);
            }
            var_312 = wp::select(var_278, var_266, var_285);
            var_313 = wp::select(var_278, var_267, var_288);
            var_314 = wp::select(var_278, var_268, var_306);
            var_315 = wp::select(var_278, var_269, var_307);
            var_316 = wp::select(var_278, var_270, var_289);
            var_317 = wp::select(var_278, var_271, var_308);
            var_318 = wp::select(var_278, var_272, var_309);
            var_319 = wp::select(var_278, var_273, var_282);
            var_320 = wp::select(var_278, var_274, var_292);
            var_321 = wp::select(var_278, var_275, var_310);
            var_322 = wp::select(var_278, var_276, var_311);
            var_323 = wp::select(var_278, var_233, var_279);
            // axis_target = axis_target_ke_kd[0]                                                 <L 1023>
            var_324 = wp::extract(var_318, var_5);
            // axis_stiffness = axis_target_ke_kd[1]                                              <L 1024>
            var_325 = wp::extract(var_318, var_99);
            // axis_damping = axis_target_ke_kd[2]                                                <L 1025>
            var_326 = wp::extract(var_318, var_277);
            // if ke_sum > 0.0:                                                                   <L 1026>
            var_327 = (var_315 > var_24);
            if (var_327) {
                // axis_target /= ke_sum                                                          <L 1027>
                var_328 = wp::div(var_324, var_315);
            }
            var_329 = wp::select(var_327, var_324, var_328);
            // axis_limits_lower = wp.spatial_top(axis_limits)                                    <L 1028>
            var_330 = wp::spatial_top(var_316);
            // axis_limits_upper = wp.spatial_bottom(axis_limits)                                 <L 1029>
            var_331 = wp::spatial_bottom(var_316);
            // frame_p = wp.quat_to_matrix(wp.transform_get_rotation(X_wp))                       <L 1031>
            var_332 = wp::transform_get_rotation(var_50);
            var_333 = wp::quat_to_matrix(var_332);
            // r_p = x_c - world_com_p                                                            <L 1033>
            var_334 = wp::sub(var_86, var_103);
            // r_c = x_c - wp.transform_point(pose_c, com_c)                                      <L 1034>
            var_335 = wp::transform_point(var_59, var_63);
            var_336 = wp::sub(var_86, var_335);
            // for dim in range(3):                                                               <L 1037>
            var_338 = wp::int(var_337);
            // e = rel_p[dim]                                                                     <L 1038>
            var_339 = wp::extract(var_185, var_338);
            // mode = axis_mode[dim]                                                              <L 1039>
            var_340 = wp::extract(var_317, var_338);
            // linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])              <L 1042>
            var_341 = wp::extract(var_333, var_5, var_338);
            var_342 = wp::extract(var_333, var_99, var_338);
            var_343 = wp::extract(var_333, var_277, var_338);
            var_344 = wp::vec_t<3,wp::float32>(var_341, var_342, var_343);
            // linear_p = -linear_c                                                               <L 1043>
            var_345 = wp::neg(var_344);
            // angular_p = -wp.cross(r_p, linear_c)                                               <L 1044>
            var_346 = wp::cross(var_334, var_344);
            var_347 = wp::neg(var_346);
            // angular_c = wp.cross(r_c, linear_c)                                                <L 1045>
            var_348 = wp::cross(var_336, var_344);
            // derr = (                                                                           <L 1047>
            // wp.dot(linear_p, vel_p)                                                            <L 1048>
            var_349 = wp::dot(var_345, var_55);
            // + wp.dot(linear_c, vel_c)                                                          <L 1049>
            var_350 = wp::dot(var_344, var_72);
            var_351 = wp::add(var_349, var_350);
            // + wp.dot(angular_p, omega_p)                                                       <L 1050>
            var_352 = wp::dot(var_347, var_56);
            var_353 = wp::add(var_351, var_352);
            // + wp.dot(angular_c, omega_c)                                                       <L 1051>
            var_354 = wp::dot(var_348, var_75);
            var_355 = wp::add(var_353, var_354);
            // err = 0.0                                                                          <L 1054>
            // compliance = linear_compliance                                                     <L 1055>
            var_356 = wp::copy(var_89);
            // damping = 0.0                                                                      <L 1056>
            // lower = axis_limits_lower[dim]                                                     <L 1058>
            var_357 = wp::extract(var_330, var_338);
            // upper = axis_limits_upper[dim]                                                     <L 1059>
            var_358 = wp::extract(var_331, var_338);
            // if e < lower:                                                                      <L 1060>
            var_359 = (var_339 < var_357);
            if (var_359) {
                // err = e - lower                                                                <L 1061>
                var_360 = wp::sub(var_339, var_357);
                // compliance = linear_compliance                                                 <L 1062>
                var_361 = wp::copy(var_89);
                // damping = 0.0                                                                  <L 1063>
            }
            var_362 = wp::select(var_359, var_24, var_360);
            var_363 = wp::select(var_359, var_356, var_361);
            if (!var_359) {
                // elif e > upper:                                                                <L 1064>
                var_364 = (var_339 > var_358);
                if (var_364) {
                    // err = e - upper                                                            <L 1065>
                    var_365 = wp::sub(var_339, var_358);
                    // compliance = linear_compliance                                             <L 1066>
                    var_366 = wp::copy(var_89);
                    // damping = 0.0                                                              <L 1067>
                }
                var_367 = wp::select(var_364, var_362, var_365);
                var_368 = wp::select(var_364, var_363, var_366);
                if (!var_364) {
                    // target = axis_target[dim]                                                  <L 1069>
                    var_369 = wp::extract(var_329, var_338);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1070>
                    var_371 = (var_340 == var_370);
                    if (var_371) {
                        // target = wp.clamp(target, lower, upper)                                <L 1071>
                        var_372 = wp::clamp(var_369, var_357, var_358);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1072>
                        var_373 = wp::extract(var_325, var_338);
                        var_374 = (var_373 > var_24);
                        if (var_374) {
                            // err = e - target                                                   <L 1073>
                            var_375 = wp::sub(var_339, var_372);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1074>
                            var_376 = wp::extract(var_325, var_338);
                            var_377 = wp::div(var_157, var_376);
                        }
                        var_378 = wp::select(var_374, var_367, var_375);
                        var_379 = wp::select(var_374, var_368, var_377);
                        // damping = axis_damping[dim]                                            <L 1075>
                        var_380 = wp::extract(var_326, var_338);
                    }
                    var_381 = wp::select(var_371, var_367, var_378);
                    var_382 = wp::select(var_371, var_368, var_379);
                    var_383 = wp::select(var_371, var_24, var_380);
                    var_384 = wp::select(var_371, var_369, var_372);
                    if (!var_371) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1076>
                        var_386 = (var_340 == var_385);
                        if (var_386) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1077>
                            var_387 = wp::extract(var_325, var_338);
                            var_388 = (var_387 > var_24);
                            if (var_388) {
                                // err = (derr - target) * dt                                     <L 1078>
                                var_389 = wp::sub(var_355, var_384);
                                var_390 = wp::mul(var_389, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1079>
                                var_391 = wp::extract(var_325, var_338);
                                var_392 = wp::div(var_157, var_391);
                            }
                            var_393 = wp::select(var_388, var_381, var_390);
                            var_394 = wp::select(var_388, var_382, var_392);
                            // damping = axis_damping[dim]                                        <L 1080>
                            var_395 = wp::extract(var_326, var_338);
                        }
                        var_396 = wp::select(var_386, var_381, var_393);
                        var_397 = wp::select(var_386, var_382, var_394);
                        var_398 = wp::select(var_386, var_383, var_395);
                    }
                    var_399 = wp::select(var_371, var_396, var_381);
                    var_400 = wp::select(var_371, var_397, var_382);
                    var_401 = wp::select(var_371, var_398, var_383);
                }
                var_402 = wp::select(var_364, var_399, var_367);
                var_403 = wp::select(var_364, var_400, var_368);
                var_404 = wp::select(var_364, var_401, var_24);
                var_405 = wp::select(var_364, var_384, var_322);
            }
            var_406 = wp::select(var_359, var_402, var_362);
            var_407 = wp::select(var_359, var_403, var_363);
            var_408 = wp::select(var_359, var_404, var_24);
            var_409 = wp::select(var_359, var_405, var_322);
            // if wp.abs(err) > 1e-9:                                                             <L 1082>
            var_410 = wp::abs(var_406);
            var_411 = (var_410 > var_137);
            if (var_411) {
                // lambda_in = 0.0                                                                <L 1083>
                // d_lambda = compute_positional_correction(                                      <L 1084>
                // err,                                                                           <L 1085>
                // derr,                                                                          <L 1086>
                // pose_p,                                                                        <L 1087>
                // pose_c,                                                                        <L 1088>
                // m_inv_p,                                                                       <L 1089>
                // m_inv_c,                                                                       <L 1090>
                // I_inv_p,                                                                       <L 1091>
                // I_inv_c,                                                                       <L 1092>
                // linear_p,                                                                      <L 1093>
                // linear_c,                                                                      <L 1094>
                // angular_p,                                                                     <L 1095>
                // angular_c,                                                                     <L 1096>
                // lambda_in,                                                                     <L 1097>
                // compliance,                                                                    <L 1098>
                // damping,                                                                       <L 1099>
                // dt,                                                                            <L 1100>
                var_412 = compute_positional_correction(var_406, var_355, var_53, var_59, var_51, var_66, var_52, var_69, var_345, var_344, var_347, var_348, var_24, var_407, var_408, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 1103>
                var_413 = wp::mul(var_412, var_linear_relaxation);
                var_414 = wp::mul(var_345, var_413);
                var_415 = wp::add(var_181, var_414);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 1104>
                var_416 = wp::mul(var_412, var_angular_relaxation);
                var_417 = wp::mul(var_347, var_416);
                var_418 = wp::add(var_182, var_417);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 1105>
                var_419 = wp::mul(var_412, var_linear_relaxation);
                var_420 = wp::mul(var_344, var_419);
                var_421 = wp::add(var_183, var_420);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 1106>
                var_422 = wp::mul(var_412, var_angular_relaxation);
                var_423 = wp::mul(var_348, var_422);
                var_424 = wp::add(var_184, var_423);
            }
            var_425 = wp::select(var_411, var_181, var_415);
            var_426 = wp::select(var_411, var_182, var_418);
            var_427 = wp::select(var_411, var_183, var_421);
            var_428 = wp::select(var_411, var_184, var_424);
            var_429 = wp::select(var_411, var_163, var_412);
            var_431 = wp::int(var_430);
            // e = rel_p[dim]                                                                     <L 1038>
            var_432 = wp::extract(var_185, var_431);
            // mode = axis_mode[dim]                                                              <L 1039>
            var_433 = wp::extract(var_317, var_431);
            // linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])              <L 1042>
            var_434 = wp::extract(var_333, var_5, var_431);
            var_435 = wp::extract(var_333, var_99, var_431);
            var_436 = wp::extract(var_333, var_277, var_431);
            var_437 = wp::vec_t<3,wp::float32>(var_434, var_435, var_436);
            // linear_p = -linear_c                                                               <L 1043>
            var_438 = wp::neg(var_437);
            // angular_p = -wp.cross(r_p, linear_c)                                               <L 1044>
            var_439 = wp::cross(var_334, var_437);
            var_440 = wp::neg(var_439);
            // angular_c = wp.cross(r_c, linear_c)                                                <L 1045>
            var_441 = wp::cross(var_336, var_437);
            // derr = (                                                                           <L 1047>
            // wp.dot(linear_p, vel_p)                                                            <L 1048>
            var_442 = wp::dot(var_438, var_55);
            // + wp.dot(linear_c, vel_c)                                                          <L 1049>
            var_443 = wp::dot(var_437, var_72);
            var_444 = wp::add(var_442, var_443);
            // + wp.dot(angular_p, omega_p)                                                       <L 1050>
            var_445 = wp::dot(var_440, var_56);
            var_446 = wp::add(var_444, var_445);
            // + wp.dot(angular_c, omega_c)                                                       <L 1051>
            var_447 = wp::dot(var_441, var_75);
            var_448 = wp::add(var_446, var_447);
            // err = 0.0                                                                          <L 1054>
            // compliance = linear_compliance                                                     <L 1055>
            var_449 = wp::copy(var_89);
            // damping = 0.0                                                                      <L 1056>
            // lower = axis_limits_lower[dim]                                                     <L 1058>
            var_450 = wp::extract(var_330, var_431);
            // upper = axis_limits_upper[dim]                                                     <L 1059>
            var_451 = wp::extract(var_331, var_431);
            // if e < lower:                                                                      <L 1060>
            var_452 = (var_432 < var_450);
            if (var_452) {
                // err = e - lower                                                                <L 1061>
                var_453 = wp::sub(var_432, var_450);
                // compliance = linear_compliance                                                 <L 1062>
                var_454 = wp::copy(var_89);
                // damping = 0.0                                                                  <L 1063>
            }
            var_455 = wp::select(var_452, var_24, var_453);
            var_456 = wp::select(var_452, var_449, var_454);
            if (!var_452) {
                // elif e > upper:                                                                <L 1064>
                var_457 = (var_432 > var_451);
                if (var_457) {
                    // err = e - upper                                                            <L 1065>
                    var_458 = wp::sub(var_432, var_451);
                    // compliance = linear_compliance                                             <L 1066>
                    var_459 = wp::copy(var_89);
                    // damping = 0.0                                                              <L 1067>
                }
                var_460 = wp::select(var_457, var_455, var_458);
                var_461 = wp::select(var_457, var_456, var_459);
                if (!var_457) {
                    // target = axis_target[dim]                                                  <L 1069>
                    var_462 = wp::extract(var_329, var_431);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1070>
                    var_463 = (var_433 == var_370);
                    if (var_463) {
                        // target = wp.clamp(target, lower, upper)                                <L 1071>
                        var_464 = wp::clamp(var_462, var_450, var_451);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1072>
                        var_465 = wp::extract(var_325, var_431);
                        var_466 = (var_465 > var_24);
                        if (var_466) {
                            // err = e - target                                                   <L 1073>
                            var_467 = wp::sub(var_432, var_464);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1074>
                            var_468 = wp::extract(var_325, var_431);
                            var_469 = wp::div(var_157, var_468);
                        }
                        var_470 = wp::select(var_466, var_460, var_467);
                        var_471 = wp::select(var_466, var_461, var_469);
                        // damping = axis_damping[dim]                                            <L 1075>
                        var_472 = wp::extract(var_326, var_431);
                    }
                    var_473 = wp::select(var_463, var_460, var_470);
                    var_474 = wp::select(var_463, var_461, var_471);
                    var_475 = wp::select(var_463, var_24, var_472);
                    var_476 = wp::select(var_463, var_462, var_464);
                    if (!var_463) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1076>
                        var_477 = (var_433 == var_385);
                        if (var_477) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1077>
                            var_478 = wp::extract(var_325, var_431);
                            var_479 = (var_478 > var_24);
                            if (var_479) {
                                // err = (derr - target) * dt                                     <L 1078>
                                var_480 = wp::sub(var_448, var_476);
                                var_481 = wp::mul(var_480, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1079>
                                var_482 = wp::extract(var_325, var_431);
                                var_483 = wp::div(var_157, var_482);
                            }
                            var_484 = wp::select(var_479, var_473, var_481);
                            var_485 = wp::select(var_479, var_474, var_483);
                            // damping = axis_damping[dim]                                        <L 1080>
                            var_486 = wp::extract(var_326, var_431);
                        }
                        var_487 = wp::select(var_477, var_473, var_484);
                        var_488 = wp::select(var_477, var_474, var_485);
                        var_489 = wp::select(var_477, var_475, var_486);
                    }
                    var_490 = wp::select(var_463, var_487, var_473);
                    var_491 = wp::select(var_463, var_488, var_474);
                    var_492 = wp::select(var_463, var_489, var_475);
                }
                var_493 = wp::select(var_457, var_490, var_460);
                var_494 = wp::select(var_457, var_491, var_461);
                var_495 = wp::select(var_457, var_492, var_24);
                var_496 = wp::select(var_457, var_476, var_409);
            }
            var_497 = wp::select(var_452, var_493, var_455);
            var_498 = wp::select(var_452, var_494, var_456);
            var_499 = wp::select(var_452, var_495, var_24);
            var_500 = wp::select(var_452, var_496, var_409);
            // if wp.abs(err) > 1e-9:                                                             <L 1082>
            var_501 = wp::abs(var_497);
            var_502 = (var_501 > var_137);
            if (var_502) {
                // lambda_in = 0.0                                                                <L 1083>
                // d_lambda = compute_positional_correction(                                      <L 1084>
                // err,                                                                           <L 1085>
                // derr,                                                                          <L 1086>
                // pose_p,                                                                        <L 1087>
                // pose_c,                                                                        <L 1088>
                // m_inv_p,                                                                       <L 1089>
                // m_inv_c,                                                                       <L 1090>
                // I_inv_p,                                                                       <L 1091>
                // I_inv_c,                                                                       <L 1092>
                // linear_p,                                                                      <L 1093>
                // linear_c,                                                                      <L 1094>
                // angular_p,                                                                     <L 1095>
                // angular_c,                                                                     <L 1096>
                // lambda_in,                                                                     <L 1097>
                // compliance,                                                                    <L 1098>
                // damping,                                                                       <L 1099>
                // dt,                                                                            <L 1100>
                var_503 = compute_positional_correction(var_497, var_448, var_53, var_59, var_51, var_66, var_52, var_69, var_438, var_437, var_440, var_441, var_24, var_498, var_499, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 1103>
                var_504 = wp::mul(var_503, var_linear_relaxation);
                var_505 = wp::mul(var_438, var_504);
                var_506 = wp::add(var_425, var_505);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 1104>
                var_507 = wp::mul(var_503, var_angular_relaxation);
                var_508 = wp::mul(var_440, var_507);
                var_509 = wp::add(var_426, var_508);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 1105>
                var_510 = wp::mul(var_503, var_linear_relaxation);
                var_511 = wp::mul(var_437, var_510);
                var_512 = wp::add(var_427, var_511);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 1106>
                var_513 = wp::mul(var_503, var_angular_relaxation);
                var_514 = wp::mul(var_441, var_513);
                var_515 = wp::add(var_428, var_514);
            }
            var_516 = wp::select(var_502, var_425, var_506);
            var_517 = wp::select(var_502, var_426, var_509);
            var_518 = wp::select(var_502, var_427, var_512);
            var_519 = wp::select(var_502, var_428, var_515);
            var_520 = wp::select(var_502, var_429, var_503);
            var_522 = wp::int(var_521);
            // e = rel_p[dim]                                                                     <L 1038>
            var_523 = wp::extract(var_185, var_522);
            // mode = axis_mode[dim]                                                              <L 1039>
            var_524 = wp::extract(var_317, var_522);
            // linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])              <L 1042>
            var_525 = wp::extract(var_333, var_5, var_522);
            var_526 = wp::extract(var_333, var_99, var_522);
            var_527 = wp::extract(var_333, var_277, var_522);
            var_528 = wp::vec_t<3,wp::float32>(var_525, var_526, var_527);
            // linear_p = -linear_c                                                               <L 1043>
            var_529 = wp::neg(var_528);
            // angular_p = -wp.cross(r_p, linear_c)                                               <L 1044>
            var_530 = wp::cross(var_334, var_528);
            var_531 = wp::neg(var_530);
            // angular_c = wp.cross(r_c, linear_c)                                                <L 1045>
            var_532 = wp::cross(var_336, var_528);
            // derr = (                                                                           <L 1047>
            // wp.dot(linear_p, vel_p)                                                            <L 1048>
            var_533 = wp::dot(var_529, var_55);
            // + wp.dot(linear_c, vel_c)                                                          <L 1049>
            var_534 = wp::dot(var_528, var_72);
            var_535 = wp::add(var_533, var_534);
            // + wp.dot(angular_p, omega_p)                                                       <L 1050>
            var_536 = wp::dot(var_531, var_56);
            var_537 = wp::add(var_535, var_536);
            // + wp.dot(angular_c, omega_c)                                                       <L 1051>
            var_538 = wp::dot(var_532, var_75);
            var_539 = wp::add(var_537, var_538);
            // err = 0.0                                                                          <L 1054>
            // compliance = linear_compliance                                                     <L 1055>
            var_540 = wp::copy(var_89);
            // damping = 0.0                                                                      <L 1056>
            // lower = axis_limits_lower[dim]                                                     <L 1058>
            var_541 = wp::extract(var_330, var_522);
            // upper = axis_limits_upper[dim]                                                     <L 1059>
            var_542 = wp::extract(var_331, var_522);
            // if e < lower:                                                                      <L 1060>
            var_543 = (var_523 < var_541);
            if (var_543) {
                // err = e - lower                                                                <L 1061>
                var_544 = wp::sub(var_523, var_541);
                // compliance = linear_compliance                                                 <L 1062>
                var_545 = wp::copy(var_89);
                // damping = 0.0                                                                  <L 1063>
            }
            var_546 = wp::select(var_543, var_24, var_544);
            var_547 = wp::select(var_543, var_540, var_545);
            if (!var_543) {
                // elif e > upper:                                                                <L 1064>
                var_548 = (var_523 > var_542);
                if (var_548) {
                    // err = e - upper                                                            <L 1065>
                    var_549 = wp::sub(var_523, var_542);
                    // compliance = linear_compliance                                             <L 1066>
                    var_550 = wp::copy(var_89);
                    // damping = 0.0                                                              <L 1067>
                }
                var_551 = wp::select(var_548, var_546, var_549);
                var_552 = wp::select(var_548, var_547, var_550);
                if (!var_548) {
                    // target = axis_target[dim]                                                  <L 1069>
                    var_553 = wp::extract(var_329, var_522);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1070>
                    var_554 = (var_524 == var_370);
                    if (var_554) {
                        // target = wp.clamp(target, lower, upper)                                <L 1071>
                        var_555 = wp::clamp(var_553, var_541, var_542);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1072>
                        var_556 = wp::extract(var_325, var_522);
                        var_557 = (var_556 > var_24);
                        if (var_557) {
                            // err = e - target                                                   <L 1073>
                            var_558 = wp::sub(var_523, var_555);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1074>
                            var_559 = wp::extract(var_325, var_522);
                            var_560 = wp::div(var_157, var_559);
                        }
                        var_561 = wp::select(var_557, var_551, var_558);
                        var_562 = wp::select(var_557, var_552, var_560);
                        // damping = axis_damping[dim]                                            <L 1075>
                        var_563 = wp::extract(var_326, var_522);
                    }
                    var_564 = wp::select(var_554, var_551, var_561);
                    var_565 = wp::select(var_554, var_552, var_562);
                    var_566 = wp::select(var_554, var_24, var_563);
                    var_567 = wp::select(var_554, var_553, var_555);
                    if (!var_554) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1076>
                        var_568 = (var_524 == var_385);
                        if (var_568) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1077>
                            var_569 = wp::extract(var_325, var_522);
                            var_570 = (var_569 > var_24);
                            if (var_570) {
                                // err = (derr - target) * dt                                     <L 1078>
                                var_571 = wp::sub(var_539, var_567);
                                var_572 = wp::mul(var_571, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1079>
                                var_573 = wp::extract(var_325, var_522);
                                var_574 = wp::div(var_157, var_573);
                            }
                            var_575 = wp::select(var_570, var_564, var_572);
                            var_576 = wp::select(var_570, var_565, var_574);
                            // damping = axis_damping[dim]                                        <L 1080>
                            var_577 = wp::extract(var_326, var_522);
                        }
                        var_578 = wp::select(var_568, var_564, var_575);
                        var_579 = wp::select(var_568, var_565, var_576);
                        var_580 = wp::select(var_568, var_566, var_577);
                    }
                    var_581 = wp::select(var_554, var_578, var_564);
                    var_582 = wp::select(var_554, var_579, var_565);
                    var_583 = wp::select(var_554, var_580, var_566);
                }
                var_584 = wp::select(var_548, var_581, var_551);
                var_585 = wp::select(var_548, var_582, var_552);
                var_586 = wp::select(var_548, var_583, var_24);
                var_587 = wp::select(var_548, var_567, var_500);
            }
            var_588 = wp::select(var_543, var_584, var_546);
            var_589 = wp::select(var_543, var_585, var_547);
            var_590 = wp::select(var_543, var_586, var_24);
            var_591 = wp::select(var_543, var_587, var_500);
            // if wp.abs(err) > 1e-9:                                                             <L 1082>
            var_592 = wp::abs(var_588);
            var_593 = (var_592 > var_137);
            if (var_593) {
                // lambda_in = 0.0                                                                <L 1083>
                // d_lambda = compute_positional_correction(                                      <L 1084>
                // err,                                                                           <L 1085>
                // derr,                                                                          <L 1086>
                // pose_p,                                                                        <L 1087>
                // pose_c,                                                                        <L 1088>
                // m_inv_p,                                                                       <L 1089>
                // m_inv_c,                                                                       <L 1090>
                // I_inv_p,                                                                       <L 1091>
                // I_inv_c,                                                                       <L 1092>
                // linear_p,                                                                      <L 1093>
                // linear_c,                                                                      <L 1094>
                // angular_p,                                                                     <L 1095>
                // angular_c,                                                                     <L 1096>
                // lambda_in,                                                                     <L 1097>
                // compliance,                                                                    <L 1098>
                // damping,                                                                       <L 1099>
                // dt,                                                                            <L 1100>
                var_594 = compute_positional_correction(var_588, var_539, var_53, var_59, var_51, var_66, var_52, var_69, var_529, var_528, var_531, var_532, var_24, var_589, var_590, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 1103>
                var_595 = wp::mul(var_594, var_linear_relaxation);
                var_596 = wp::mul(var_529, var_595);
                var_597 = wp::add(var_516, var_596);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 1104>
                var_598 = wp::mul(var_594, var_angular_relaxation);
                var_599 = wp::mul(var_531, var_598);
                var_600 = wp::add(var_517, var_599);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 1105>
                var_601 = wp::mul(var_594, var_linear_relaxation);
                var_602 = wp::mul(var_528, var_601);
                var_603 = wp::add(var_518, var_602);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 1106>
                var_604 = wp::mul(var_594, var_angular_relaxation);
                var_605 = wp::mul(var_532, var_604);
                var_606 = wp::add(var_519, var_605);
            }
            var_607 = wp::select(var_593, var_516, var_597);
            var_608 = wp::select(var_593, var_517, var_600);
            var_609 = wp::select(var_593, var_518, var_603);
            var_610 = wp::select(var_593, var_519, var_606);
            var_611 = wp::select(var_593, var_520, var_594);
        }
        var_612 = wp::select(var_106, var_607, var_181);
        var_613 = wp::select(var_106, var_608, var_182);
        var_614 = wp::select(var_106, var_609, var_183);
        var_615 = wp::select(var_106, var_610, var_184);
        var_616 = wp::select(var_106, var_334, var_108);
        var_617 = wp::select(var_106, var_336, var_180);
        var_618 = wp::select(var_106, var_541, var_113);
        var_619 = wp::select(var_106, var_542, var_116);
        var_620 = wp::select(var_106, var_588, var_135);
        var_621 = wp::select(var_106, var_528, var_139);
        var_622 = wp::select(var_106, var_529, var_140);
        var_623 = wp::select(var_106, var_531, var_143);
        var_624 = wp::select(var_106, var_532, var_144);
        var_625 = wp::select(var_106, var_539, var_151);
        var_626 = wp::select(var_106, var_589, var_159);
        var_627 = wp::select(var_106, var_314, var_155);
        var_628 = wp::select(var_106, var_590, var_162);
        var_629 = wp::select(var_106, var_611, var_163);
        // if (                                                                                   <L 1108>
        // type == fs5Model.JOINT_FIXED                                                           <L 1109>
        var_631 = (var_3 == var_630);
        // or type == fs5Model.JOINT_PRISMATIC                                                    <L 1110>
        var_633 = (var_3 == var_632);
        // or type == fs5Model.JOINT_REVOLUTE                                                     <L 1111>
        var_635 = (var_3 == var_634);
        // or type == fs5Model.JOINT_UNIVERSAL                                                    <L 1112>
        var_637 = (var_3 == var_636);
        // or type == fs5Model.JOINT_COMPOUND                                                     <L 1113>
        var_639 = (var_3 == var_638);
        // or type == fs5Model.JOINT_D6                                                           <L 1114>
        var_641 = (var_3 == var_640);
        var_642 = var_631 || var_633 || var_635 || var_637 || var_639 || var_641;
        if (var_642) {
            // q_p = wp.transform_get_rotation(X_wp)                                              <L 1119>
            var_643 = wp::transform_get_rotation(var_50);
            // q_c = wp.transform_get_rotation(X_wc)                                              <L 1120>
            var_644 = wp::transform_get_rotation(var_60);
            // if wp.dot(q_p, q_c) < 0.0:                                                         <L 1123>
            var_645 = wp::dot(var_643, var_644);
            var_646 = (var_645 < var_24);
            if (var_646) {
                // q_c *= -1.0                                                                    <L 1124>
                var_647 = wp::neg(var_157);
                var_648 = wp::mul(var_644, var_647);
            }
            var_649 = wp::select(var_646, var_644, var_648);
            // rel_q = wp.quat_inverse(q_p) * q_c                                                 <L 1126>
            var_650 = wp::quat_inverse(var_643);
            var_651 = wp::mul(var_650, var_649);
            // qtwist = wp.normalize(wp.quat(rel_q[0], 0.0, 0.0, rel_q[3]))                       <L 1128>
            var_652 = wp::extract(var_651, var_5);
            var_654 = wp::extract(var_651, var_653);
            var_655 = wp::quat_t<wp::float32>(var_652, var_24, var_24, var_654);
            var_656 = wp::normalize(var_655);
            // qswing = rel_q * wp.quat_inverse(qtwist)                                           <L 1129>
            var_657 = wp::quat_inverse(var_656);
            var_658 = wp::mul(var_651, var_657);
            // s = wp.sqrt(rel_q[0] * rel_q[0] + rel_q[3] * rel_q[3])                             <L 1132>
            var_659 = wp::extract(var_651, var_5);
            var_660 = wp::extract(var_651, var_5);
            var_661 = wp::mul(var_659, var_660);
            var_662 = wp::extract(var_651, var_653);
            var_663 = wp::extract(var_651, var_653);
            var_664 = wp::mul(var_662, var_663);
            var_665 = wp::add(var_661, var_664);
            var_666 = wp::sqrt(var_665);
            // invs = 1.0 / s                                                                     <L 1133>
            var_667 = wp::div(var_157, var_666);
            // invscube = invs * invs * invs                                                      <L 1134>
            var_668 = wp::mul(var_667, var_667);
            var_669 = wp::mul(var_668, var_667);
            // err_0 = 2.0 * wp.asin(wp.clamp(qtwist[0], -1.0, 1.0))                              <L 1139>
            var_671 = wp::extract(var_656, var_5);
            var_672 = wp::neg(var_157);
            var_673 = wp::clamp(var_671, var_672, var_157);
            var_674 = wp::asin(var_673);
            var_675 = wp::mul(var_670, var_674);
            // err_1 = qswing[1]                                                                  <L 1140>
            var_676 = wp::extract(var_658, var_99);
            // err_2 = qswing[2]                                                                  <L 1141>
            var_677 = wp::extract(var_658, var_277);
            // grad_0 = wp.quat(invs - rel_q[0] * rel_q[0] * invscube, 0.0, 0.0, -(rel_q[3] * rel_q[0]) * invscube)       <L 1143>
            var_678 = wp::extract(var_651, var_5);
            var_679 = wp::extract(var_651, var_5);
            var_680 = wp::mul(var_678, var_679);
            var_681 = wp::mul(var_680, var_669);
            var_682 = wp::sub(var_667, var_681);
            var_683 = wp::extract(var_651, var_653);
            var_684 = wp::extract(var_651, var_5);
            var_685 = wp::mul(var_683, var_684);
            var_686 = wp::neg(var_685);
            var_687 = wp::mul(var_686, var_669);
            var_688 = wp::quat_t<wp::float32>(var_682, var_24, var_24, var_687);
            // grad_1 = wp.quat(                                                                  <L 1144>
            // -rel_q[3] * (rel_q[3] * rel_q[2] + rel_q[0] * rel_q[1]) * invscube,                <L 1145>
            var_689 = wp::extract(var_651, var_653);
            var_690 = wp::neg(var_689);
            var_691 = wp::extract(var_651, var_653);
            var_692 = wp::extract(var_651, var_277);
            var_693 = wp::mul(var_691, var_692);
            var_694 = wp::extract(var_651, var_5);
            var_695 = wp::extract(var_651, var_99);
            var_696 = wp::mul(var_694, var_695);
            var_697 = wp::add(var_693, var_696);
            var_698 = wp::mul(var_690, var_697);
            var_699 = wp::mul(var_698, var_669);
            // rel_q[3] * invs,                                                                   <L 1146>
            var_700 = wp::extract(var_651, var_653);
            var_701 = wp::mul(var_700, var_667);
            // -rel_q[0] * invs,                                                                  <L 1147>
            var_702 = wp::extract(var_651, var_5);
            var_703 = wp::neg(var_702);
            var_704 = wp::mul(var_703, var_667);
            // rel_q[0] * (rel_q[3] * rel_q[2] + rel_q[0] * rel_q[1]) * invscube,                 <L 1148>
            var_705 = wp::extract(var_651, var_5);
            var_706 = wp::extract(var_651, var_653);
            var_707 = wp::extract(var_651, var_277);
            var_708 = wp::mul(var_706, var_707);
            var_709 = wp::extract(var_651, var_5);
            var_710 = wp::extract(var_651, var_99);
            var_711 = wp::mul(var_709, var_710);
            var_712 = wp::add(var_708, var_711);
            var_713 = wp::mul(var_705, var_712);
            var_714 = wp::mul(var_713, var_669);
            var_715 = wp::quat_t<wp::float32>(var_699, var_701, var_704, var_714);
            // grad_2 = wp.quat(                                                                  <L 1150>
            // rel_q[3] * (rel_q[3] * rel_q[1] - rel_q[0] * rel_q[2]) * invscube,                 <L 1151>
            var_716 = wp::extract(var_651, var_653);
            var_717 = wp::extract(var_651, var_653);
            var_718 = wp::extract(var_651, var_99);
            var_719 = wp::mul(var_717, var_718);
            var_720 = wp::extract(var_651, var_5);
            var_721 = wp::extract(var_651, var_277);
            var_722 = wp::mul(var_720, var_721);
            var_723 = wp::sub(var_719, var_722);
            var_724 = wp::mul(var_716, var_723);
            var_725 = wp::mul(var_724, var_669);
            // rel_q[0] * invs,                                                                   <L 1152>
            var_726 = wp::extract(var_651, var_5);
            var_727 = wp::mul(var_726, var_667);
            // rel_q[3] * invs,                                                                   <L 1153>
            var_728 = wp::extract(var_651, var_653);
            var_729 = wp::mul(var_728, var_667);
            // rel_q[0] * (rel_q[2] * rel_q[0] - rel_q[3] * rel_q[1]) * invscube,                 <L 1154>
            var_730 = wp::extract(var_651, var_5);
            var_731 = wp::extract(var_651, var_277);
            var_732 = wp::extract(var_651, var_5);
            var_733 = wp::mul(var_731, var_732);
            var_734 = wp::extract(var_651, var_653);
            var_735 = wp::extract(var_651, var_99);
            var_736 = wp::mul(var_734, var_735);
            var_737 = wp::sub(var_733, var_736);
            var_738 = wp::mul(var_730, var_737);
            var_739 = wp::mul(var_738, var_669);
            var_740 = wp::quat_t<wp::float32>(var_725, var_727, var_729, var_739);
            // grad_0 *= 2.0 / wp.abs(qtwist[3])                                                  <L 1156>
            var_741 = wp::extract(var_656, var_653);
            var_742 = wp::abs(var_741);
            var_743 = wp::div(var_670, var_742);
            var_744 = wp::mul(var_688, var_743);
            // swing_sq = qswing[3] * qswing[3]                                                   <L 1160>
            var_745 = wp::extract(var_658, var_653);
            var_746 = wp::extract(var_658, var_653);
            var_747 = wp::mul(var_745, var_746);
            // angularEps = 1.0e-4                                                                <L 1162>
            // if swing_sq + angularEps < 1.0:                                                    <L 1163>
            var_749 = wp::add(var_747, var_748);
            var_750 = (var_749 < var_157);
            if (var_750) {
                // d = wp.sqrt(1.0 - qswing[3] * qswing[3])                                       <L 1164>
                var_751 = wp::extract(var_658, var_653);
                var_752 = wp::extract(var_658, var_653);
                var_753 = wp::mul(var_751, var_752);
                var_754 = wp::sub(var_157, var_753);
                var_755 = wp::sqrt(var_754);
                // theta = 2.0 * wp.acos(wp.clamp(qswing[3], -1.0, 1.0))                          <L 1165>
                var_756 = wp::extract(var_658, var_653);
                var_757 = wp::neg(var_157);
                var_758 = wp::clamp(var_756, var_757, var_157);
                var_759 = wp::acos(var_758);
                var_760 = wp::mul(var_670, var_759);
                // scale = theta / d                                                              <L 1166>
                var_761 = wp::div(var_760, var_755);
                // err_1 *= scale                                                                 <L 1168>
                var_762 = wp::mul(var_676, var_761);
                // err_2 *= scale                                                                 <L 1169>
                var_763 = wp::mul(var_677, var_761);
                // grad_1 *= scale                                                                <L 1171>
                var_764 = wp::mul(var_715, var_761);
                // grad_2 *= scale                                                                <L 1172>
                var_765 = wp::mul(var_740, var_761);
            }
            var_766 = wp::select(var_750, var_120, var_755);
            var_767 = wp::select(var_750, var_676, var_762);
            var_768 = wp::select(var_750, var_677, var_763);
            var_769 = wp::select(var_750, var_715, var_764);
            var_770 = wp::select(var_750, var_740, var_765);
            // errs = wp.vec3(err_0, err_1, err_2)                                                <L 1174>
            var_771 = wp::vec_t<3,wp::float32>(var_675, var_767, var_768);
            // grad_x = wp.vec3(grad_0[0], grad_1[0], grad_2[0])                                  <L 1175>
            var_772 = wp::extract(var_744, var_5);
            var_773 = wp::extract(var_769, var_5);
            var_774 = wp::extract(var_770, var_5);
            var_775 = wp::vec_t<3,wp::float32>(var_772, var_773, var_774);
            // grad_y = wp.vec3(grad_0[1], grad_1[1], grad_2[1])                                  <L 1176>
            var_776 = wp::extract(var_744, var_99);
            var_777 = wp::extract(var_769, var_99);
            var_778 = wp::extract(var_770, var_99);
            var_779 = wp::vec_t<3,wp::float32>(var_776, var_777, var_778);
            // grad_z = wp.vec3(grad_0[2], grad_1[2], grad_2[2])                                  <L 1177>
            var_780 = wp::extract(var_744, var_277);
            var_781 = wp::extract(var_769, var_277);
            var_782 = wp::extract(var_770, var_277);
            var_783 = wp::vec_t<3,wp::float32>(var_780, var_781, var_782);
            // grad_w = wp.vec3(grad_0[3], grad_1[3], grad_2[3])                                  <L 1178>
            var_784 = wp::extract(var_744, var_653);
            var_785 = wp::extract(var_769, var_653);
            var_786 = wp::extract(var_770, var_653);
            var_787 = wp::vec_t<3,wp::float32>(var_784, var_785, var_786);
            // ke_sum = float(0.0)                                                                <L 1181>
            var_788 = wp::float(var_24);
            // axis_limits = wp.spatial_vector(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                      <L 1182>
            var_789 = wp::vec_t<6,wp::float32>({var_24, var_24, var_24, var_24, var_24, var_24});
            // axis_mode = wp.vec3ub(wp.uint8(0), wp.uint8(0), wp.uint8(0))                       <L 1183>
            var_790 = wp::uint8(var_5);
            var_791 = wp::uint8(var_5);
            var_792 = wp::uint8(var_5);
            var_793 = wp::vec_t<3,wp::uint8>(var_790, var_791, var_792);
            // axis_target_ke_kd = wp.mat33(0.0)                                                  <L 1184>
            var_794 = wp::mat_t<3,3,wp::float32>(var_24);
            // if ang_axis_count > 0:                                                             <L 1186>
            var_795 = (var_102 > var_5);
            if (var_795) {
                // axis_idx = axis_start + lin_axis_count                                         <L 1187>
                var_796 = wp::add(var_95, var_98);
                // axis = joint_axis[axis_idx]                                                    <L 1188>
                var_797 = wp::address(var_joint_axis, var_796);
                var_798 = wp::load(var_797);
                var_799 = wp::copy(var_798);
                // lo_temp = axis * joint_limit_lower[axis_idx]                                   <L 1189>
                var_800 = wp::address(var_joint_limit_lower, var_796);
                var_801 = wp::load(var_800);
                var_802 = wp::mul(var_799, var_801);
                // up_temp = axis * joint_limit_upper[axis_idx]                                   <L 1190>
                var_803 = wp::address(var_joint_limit_upper, var_796);
                var_804 = wp::load(var_803);
                var_805 = wp::mul(var_799, var_804);
                // axis_limits = wp.spatial_vector(vec_min(lo_temp, up_temp), vec_max(lo_temp, up_temp))       <L 1191>
                var_806 = vec_min(var_802, var_805);
                var_807 = vec_max(var_802, var_805);
                var_808 = wp::vec_t<6,wp::float32>(var_806, var_807);
                // mode = joint_axis_mode[axis_idx]                                               <L 1192>
                var_809 = wp::address(var_joint_axis_mode, var_796);
                var_810 = wp::load(var_809);
                var_811 = wp::copy(var_810);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1193>
                var_812 = (var_811 != var_209);
                if (var_812) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1194>
                    var_813 = wp::address(var_joint_target_ke, var_796);
                    var_814 = wp::load(var_813);
                    var_815 = wp::copy(var_814);
                    // kd = joint_target_kd[axis_idx]                                             <L 1195>
                    var_816 = wp::address(var_joint_target_kd, var_796);
                    var_817 = wp::load(var_816);
                    var_818 = wp::copy(var_817);
                    // target = joint_target[axis_idx]                                            <L 1196>
                    var_819 = wp::address(var_joint_target, var_796);
                    var_820 = wp::load(var_819);
                    var_821 = wp::copy(var_820);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1197>
                    var_822 = update_joint_axis_mode(var_811, var_799, var_793);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1198>
                    var_823 = update_joint_axis_target_ke_kd(var_799, var_821, var_815, var_818, var_794);
                    // ke_sum += ke                                                               <L 1199>
                    var_824 = wp::add(var_788, var_815);
                }
                var_825 = wp::select(var_812, var_627, var_815);
                var_826 = wp::select(var_812, var_788, var_824);
                var_827 = wp::select(var_812, var_793, var_822);
                var_828 = wp::select(var_812, var_794, var_823);
                var_829 = wp::select(var_812, var_321, var_818);
                var_830 = wp::select(var_812, var_591, var_821);
            }
            var_831 = wp::select(var_795, var_627, var_825);
            var_832 = wp::select(var_795, var_788, var_826);
            var_833 = wp::select(var_795, var_789, var_808);
            var_834 = wp::select(var_795, var_793, var_827);
            var_835 = wp::select(var_795, var_794, var_828);
            var_836 = wp::select(var_795, var_319, var_799);
            var_837 = wp::select(var_795, var_199, var_802);
            var_838 = wp::select(var_795, var_202, var_805);
            var_839 = wp::select(var_795, var_524, var_811);
            var_840 = wp::select(var_795, var_321, var_829);
            var_841 = wp::select(var_795, var_591, var_830);
            var_842 = wp::select(var_795, var_323, var_796);
            // if ang_axis_count > 1:                                                             <L 1200>
            var_843 = (var_102 > var_99);
            if (var_843) {
                // axis_idx = axis_start + lin_axis_count + 1                                     <L 1201>
                var_844 = wp::add(var_95, var_98);
                var_845 = wp::add(var_844, var_99);
                // axis = joint_axis[axis_idx]                                                    <L 1202>
                var_846 = wp::address(var_joint_axis, var_845);
                var_847 = wp::load(var_846);
                var_848 = wp::copy(var_847);
                // lower = joint_limit_lower[axis_idx]                                            <L 1203>
                var_849 = wp::address(var_joint_limit_lower, var_845);
                var_850 = wp::load(var_849);
                var_851 = wp::copy(var_850);
                // upper = joint_limit_upper[axis_idx]                                            <L 1204>
                var_852 = wp::address(var_joint_limit_upper, var_845);
                var_853 = wp::load(var_852);
                var_854 = wp::copy(var_853);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 1205>
                var_855 = update_joint_axis_limits(var_848, var_851, var_854, var_833);
                // mode = joint_axis_mode[axis_idx]                                               <L 1206>
                var_856 = wp::address(var_joint_axis_mode, var_845);
                var_857 = wp::load(var_856);
                var_858 = wp::copy(var_857);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1207>
                var_859 = (var_858 != var_209);
                if (var_859) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1208>
                    var_860 = wp::address(var_joint_target_ke, var_845);
                    var_861 = wp::load(var_860);
                    var_862 = wp::copy(var_861);
                    // kd = joint_target_kd[axis_idx]                                             <L 1209>
                    var_863 = wp::address(var_joint_target_kd, var_845);
                    var_864 = wp::load(var_863);
                    var_865 = wp::copy(var_864);
                    // target = joint_target[axis_idx]                                            <L 1210>
                    var_866 = wp::address(var_joint_target, var_845);
                    var_867 = wp::load(var_866);
                    var_868 = wp::copy(var_867);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1211>
                    var_869 = update_joint_axis_mode(var_858, var_848, var_834);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1212>
                    var_870 = update_joint_axis_target_ke_kd(var_848, var_868, var_862, var_865, var_835);
                    // ke_sum += ke                                                               <L 1213>
                    var_871 = wp::add(var_832, var_862);
                }
                var_872 = wp::select(var_859, var_831, var_862);
                var_873 = wp::select(var_859, var_832, var_871);
                var_874 = wp::select(var_859, var_834, var_869);
                var_875 = wp::select(var_859, var_835, var_870);
                var_876 = wp::select(var_859, var_840, var_865);
                var_877 = wp::select(var_859, var_841, var_868);
            }
            var_878 = wp::select(var_843, var_618, var_851);
            var_879 = wp::select(var_843, var_619, var_854);
            var_880 = wp::select(var_843, var_831, var_872);
            var_881 = wp::select(var_843, var_832, var_873);
            var_882 = wp::select(var_843, var_833, var_855);
            var_883 = wp::select(var_843, var_834, var_874);
            var_884 = wp::select(var_843, var_835, var_875);
            var_885 = wp::select(var_843, var_836, var_848);
            var_886 = wp::select(var_843, var_839, var_858);
            var_887 = wp::select(var_843, var_840, var_876);
            var_888 = wp::select(var_843, var_841, var_877);
            var_889 = wp::select(var_843, var_842, var_845);
            // if ang_axis_count > 2:                                                             <L 1214>
            var_890 = (var_102 > var_277);
            if (var_890) {
                // axis_idx = axis_start + lin_axis_count + 2                                     <L 1215>
                var_891 = wp::add(var_95, var_98);
                var_892 = wp::add(var_891, var_277);
                // axis = joint_axis[axis_idx]                                                    <L 1216>
                var_893 = wp::address(var_joint_axis, var_892);
                var_894 = wp::load(var_893);
                var_895 = wp::copy(var_894);
                // lower = joint_limit_lower[axis_idx]                                            <L 1217>
                var_896 = wp::address(var_joint_limit_lower, var_892);
                var_897 = wp::load(var_896);
                var_898 = wp::copy(var_897);
                // upper = joint_limit_upper[axis_idx]                                            <L 1218>
                var_899 = wp::address(var_joint_limit_upper, var_892);
                var_900 = wp::load(var_899);
                var_901 = wp::copy(var_900);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 1219>
                var_902 = update_joint_axis_limits(var_895, var_898, var_901, var_882);
                // mode = joint_axis_mode[axis_idx]                                               <L 1220>
                var_903 = wp::address(var_joint_axis_mode, var_892);
                var_904 = wp::load(var_903);
                var_905 = wp::copy(var_904);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1221>
                var_906 = (var_905 != var_209);
                if (var_906) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1222>
                    var_907 = wp::address(var_joint_target_ke, var_892);
                    var_908 = wp::load(var_907);
                    var_909 = wp::copy(var_908);
                    // kd = joint_target_kd[axis_idx]                                             <L 1223>
                    var_910 = wp::address(var_joint_target_kd, var_892);
                    var_911 = wp::load(var_910);
                    var_912 = wp::copy(var_911);
                    // target = joint_target[axis_idx]                                            <L 1224>
                    var_913 = wp::address(var_joint_target, var_892);
                    var_914 = wp::load(var_913);
                    var_915 = wp::copy(var_914);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1225>
                    var_916 = update_joint_axis_mode(var_905, var_895, var_883);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1226>
                    var_917 = update_joint_axis_target_ke_kd(var_895, var_915, var_909, var_912, var_884);
                    // ke_sum += ke                                                               <L 1227>
                    var_918 = wp::add(var_881, var_909);
                }
                var_919 = wp::select(var_906, var_880, var_909);
                var_920 = wp::select(var_906, var_881, var_918);
                var_921 = wp::select(var_906, var_883, var_916);
                var_922 = wp::select(var_906, var_884, var_917);
                var_923 = wp::select(var_906, var_887, var_912);
                var_924 = wp::select(var_906, var_888, var_915);
            }
            var_925 = wp::select(var_890, var_878, var_898);
            var_926 = wp::select(var_890, var_879, var_901);
            var_927 = wp::select(var_890, var_880, var_919);
            var_928 = wp::select(var_890, var_881, var_920);
            var_929 = wp::select(var_890, var_882, var_902);
            var_930 = wp::select(var_890, var_883, var_921);
            var_931 = wp::select(var_890, var_884, var_922);
            var_932 = wp::select(var_890, var_885, var_895);
            var_933 = wp::select(var_890, var_886, var_905);
            var_934 = wp::select(var_890, var_887, var_923);
            var_935 = wp::select(var_890, var_888, var_924);
            var_936 = wp::select(var_890, var_889, var_892);
            // axis_target = axis_target_ke_kd[0]                                                 <L 1229>
            var_937 = wp::extract(var_931, var_5);
            // axis_stiffness = axis_target_ke_kd[1]                                              <L 1230>
            var_938 = wp::extract(var_931, var_99);
            // axis_damping = axis_target_ke_kd[2]                                                <L 1231>
            var_939 = wp::extract(var_931, var_277);
            // if ke_sum > 0.0:                                                                   <L 1232>
            var_940 = (var_928 > var_24);
            if (var_940) {
                // axis_target /= ke_sum                                                          <L 1233>
                var_941 = wp::div(var_937, var_928);
            }
            var_942 = wp::select(var_940, var_937, var_941);
            // axis_limits_lower = wp.spatial_top(axis_limits)                                    <L 1234>
            var_943 = wp::spatial_top(var_929);
            // axis_limits_upper = wp.spatial_bottom(axis_limits)                                 <L 1235>
            var_944 = wp::spatial_bottom(var_929);
            // for dim in range(3):                                                               <L 1246>
            var_946 = wp::int(var_945);
            // e = errs[dim]                                                                      <L 1247>
            var_947 = wp::extract(var_771, var_946);
            // mode = axis_mode[dim]                                                              <L 1248>
            var_948 = wp::extract(var_930, var_946);
            // grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])                 <L 1251>
            var_949 = wp::extract(var_775, var_946);
            var_950 = wp::extract(var_779, var_946);
            var_951 = wp::extract(var_783, var_946);
            var_952 = wp::extract(var_787, var_946);
            var_953 = wp::quat_t<wp::float32>(var_949, var_950, var_951, var_952);
            // quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                                   <L 1253>
            var_955 = wp::mul(var_954, var_643);
            var_956 = wp::mul(var_955, var_953);
            var_957 = wp::quat_inverse(var_649);
            var_958 = wp::mul(var_956, var_957);
            // angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                               <L 1254>
            var_959 = wp::extract(var_958, var_5);
            var_960 = wp::extract(var_958, var_99);
            var_961 = wp::extract(var_958, var_277);
            var_962 = wp::vec_t<3,wp::float32>(var_959, var_960, var_961);
            // angular_p = -angular_c                                                             <L 1255>
            var_963 = wp::neg(var_962);
            // derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                     <L 1257>
            var_964 = wp::dot(var_963, var_56);
            var_965 = wp::dot(var_962, var_75);
            var_966 = wp::add(var_964, var_965);
            // err = 0.0                                                                          <L 1259>
            // compliance = angular_compliance                                                    <L 1260>
            var_967 = wp::copy(var_92);
            // damping = 0.0                                                                      <L 1261>
            // lower = axis_limits_lower[dim]                                                     <L 1264>
            var_968 = wp::extract(var_943, var_946);
            // upper = axis_limits_upper[dim]                                                     <L 1265>
            var_969 = wp::extract(var_944, var_946);
            // if e < lower:                                                                      <L 1266>
            var_970 = (var_947 < var_968);
            if (var_970) {
                // err = e - lower                                                                <L 1267>
                var_971 = wp::sub(var_947, var_968);
                // compliance = angular_compliance                                                <L 1268>
                var_972 = wp::copy(var_92);
                // damping = 0.0                                                                  <L 1269>
            }
            var_973 = wp::select(var_970, var_24, var_971);
            var_974 = wp::select(var_970, var_967, var_972);
            if (!var_970) {
                // elif e > upper:                                                                <L 1270>
                var_975 = (var_947 > var_969);
                if (var_975) {
                    // err = e - upper                                                            <L 1271>
                    var_976 = wp::sub(var_947, var_969);
                    // compliance = angular_compliance                                            <L 1272>
                    var_977 = wp::copy(var_92);
                    // damping = 0.0                                                              <L 1273>
                }
                var_978 = wp::select(var_975, var_973, var_976);
                var_979 = wp::select(var_975, var_974, var_977);
                if (!var_975) {
                    // target = axis_target[dim]                                                  <L 1275>
                    var_980 = wp::extract(var_942, var_946);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1276>
                    var_981 = (var_948 == var_370);
                    if (var_981) {
                        // target = wp.clamp(target, lower, upper)                                <L 1277>
                        var_982 = wp::clamp(var_980, var_968, var_969);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1278>
                        var_983 = wp::extract(var_938, var_946);
                        var_984 = (var_983 > var_24);
                        if (var_984) {
                            // err = e - target                                                   <L 1279>
                            var_985 = wp::sub(var_947, var_982);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1280>
                            var_986 = wp::extract(var_938, var_946);
                            var_987 = wp::div(var_157, var_986);
                        }
                        var_988 = wp::select(var_984, var_978, var_985);
                        var_989 = wp::select(var_984, var_979, var_987);
                        // damping = axis_damping[dim]                                            <L 1281>
                        var_990 = wp::extract(var_939, var_946);
                    }
                    var_991 = wp::select(var_981, var_978, var_988);
                    var_992 = wp::select(var_981, var_979, var_989);
                    var_993 = wp::select(var_981, var_24, var_990);
                    var_994 = wp::select(var_981, var_980, var_982);
                    if (!var_981) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1282>
                        var_995 = (var_948 == var_385);
                        if (var_995) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1283>
                            var_996 = wp::extract(var_938, var_946);
                            var_997 = (var_996 > var_24);
                            if (var_997) {
                                // err = (derr - target) * dt                                     <L 1284>
                                var_998 = wp::sub(var_966, var_994);
                                var_999 = wp::mul(var_998, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1285>
                                var_1000 = wp::extract(var_938, var_946);
                                var_1001 = wp::div(var_157, var_1000);
                            }
                            var_1002 = wp::select(var_997, var_991, var_999);
                            var_1003 = wp::select(var_997, var_992, var_1001);
                            // damping = axis_damping[dim]                                        <L 1286>
                            var_1004 = wp::extract(var_939, var_946);
                        }
                        var_1005 = wp::select(var_995, var_991, var_1002);
                        var_1006 = wp::select(var_995, var_992, var_1003);
                        var_1007 = wp::select(var_995, var_993, var_1004);
                    }
                    var_1008 = wp::select(var_981, var_1005, var_991);
                    var_1009 = wp::select(var_981, var_1006, var_992);
                    var_1010 = wp::select(var_981, var_1007, var_993);
                }
                var_1011 = wp::select(var_975, var_1008, var_978);
                var_1012 = wp::select(var_975, var_1009, var_979);
                var_1013 = wp::select(var_975, var_1010, var_24);
                var_1014 = wp::select(var_975, var_994, var_935);
            }
            var_1015 = wp::select(var_970, var_1011, var_973);
            var_1016 = wp::select(var_970, var_1012, var_974);
            var_1017 = wp::select(var_970, var_1013, var_24);
            var_1018 = wp::select(var_970, var_1014, var_935);
            // d_lambda = (                                                                       <L 1288>
            // compute_angular_correction(                                                        <L 1289>
            // err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt       <L 1290>
            var_1019 = compute_angular_correction(var_1015, var_966, var_53, var_59, var_52, var_69, var_963, var_962, var_24, var_1016, var_1017, var_dt);
            // * angular_relaxation                                                               <L 1292>
            var_1020 = wp::mul(var_1019, var_angular_relaxation);
            // ang_delta_p += angular_p * d_lambda                                                <L 1295>
            var_1021 = wp::mul(var_963, var_1020);
            var_1022 = wp::add(var_613, var_1021);
            // ang_delta_c += angular_c * d_lambda                                                <L 1296>
            var_1023 = wp::mul(var_962, var_1020);
            var_1024 = wp::add(var_615, var_1023);
            var_1026 = wp::int(var_1025);
            // e = errs[dim]                                                                      <L 1247>
            var_1027 = wp::extract(var_771, var_1026);
            // mode = axis_mode[dim]                                                              <L 1248>
            var_1028 = wp::extract(var_930, var_1026);
            // grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])                 <L 1251>
            var_1029 = wp::extract(var_775, var_1026);
            var_1030 = wp::extract(var_779, var_1026);
            var_1031 = wp::extract(var_783, var_1026);
            var_1032 = wp::extract(var_787, var_1026);
            var_1033 = wp::quat_t<wp::float32>(var_1029, var_1030, var_1031, var_1032);
            // quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                                   <L 1253>
            var_1034 = wp::mul(var_954, var_643);
            var_1035 = wp::mul(var_1034, var_1033);
            var_1036 = wp::quat_inverse(var_649);
            var_1037 = wp::mul(var_1035, var_1036);
            // angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                               <L 1254>
            var_1038 = wp::extract(var_1037, var_5);
            var_1039 = wp::extract(var_1037, var_99);
            var_1040 = wp::extract(var_1037, var_277);
            var_1041 = wp::vec_t<3,wp::float32>(var_1038, var_1039, var_1040);
            // angular_p = -angular_c                                                             <L 1255>
            var_1042 = wp::neg(var_1041);
            // derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                     <L 1257>
            var_1043 = wp::dot(var_1042, var_56);
            var_1044 = wp::dot(var_1041, var_75);
            var_1045 = wp::add(var_1043, var_1044);
            // err = 0.0                                                                          <L 1259>
            // compliance = angular_compliance                                                    <L 1260>
            var_1046 = wp::copy(var_92);
            // damping = 0.0                                                                      <L 1261>
            // lower = axis_limits_lower[dim]                                                     <L 1264>
            var_1047 = wp::extract(var_943, var_1026);
            // upper = axis_limits_upper[dim]                                                     <L 1265>
            var_1048 = wp::extract(var_944, var_1026);
            // if e < lower:                                                                      <L 1266>
            var_1049 = (var_1027 < var_1047);
            if (var_1049) {
                // err = e - lower                                                                <L 1267>
                var_1050 = wp::sub(var_1027, var_1047);
                // compliance = angular_compliance                                                <L 1268>
                var_1051 = wp::copy(var_92);
                // damping = 0.0                                                                  <L 1269>
            }
            var_1052 = wp::select(var_1049, var_24, var_1050);
            var_1053 = wp::select(var_1049, var_1046, var_1051);
            if (!var_1049) {
                // elif e > upper:                                                                <L 1270>
                var_1054 = (var_1027 > var_1048);
                if (var_1054) {
                    // err = e - upper                                                            <L 1271>
                    var_1055 = wp::sub(var_1027, var_1048);
                    // compliance = angular_compliance                                            <L 1272>
                    var_1056 = wp::copy(var_92);
                    // damping = 0.0                                                              <L 1273>
                }
                var_1057 = wp::select(var_1054, var_1052, var_1055);
                var_1058 = wp::select(var_1054, var_1053, var_1056);
                if (!var_1054) {
                    // target = axis_target[dim]                                                  <L 1275>
                    var_1059 = wp::extract(var_942, var_1026);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1276>
                    var_1060 = (var_1028 == var_370);
                    if (var_1060) {
                        // target = wp.clamp(target, lower, upper)                                <L 1277>
                        var_1061 = wp::clamp(var_1059, var_1047, var_1048);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1278>
                        var_1062 = wp::extract(var_938, var_1026);
                        var_1063 = (var_1062 > var_24);
                        if (var_1063) {
                            // err = e - target                                                   <L 1279>
                            var_1064 = wp::sub(var_1027, var_1061);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1280>
                            var_1065 = wp::extract(var_938, var_1026);
                            var_1066 = wp::div(var_157, var_1065);
                        }
                        var_1067 = wp::select(var_1063, var_1057, var_1064);
                        var_1068 = wp::select(var_1063, var_1058, var_1066);
                        // damping = axis_damping[dim]                                            <L 1281>
                        var_1069 = wp::extract(var_939, var_1026);
                    }
                    var_1070 = wp::select(var_1060, var_1057, var_1067);
                    var_1071 = wp::select(var_1060, var_1058, var_1068);
                    var_1072 = wp::select(var_1060, var_24, var_1069);
                    var_1073 = wp::select(var_1060, var_1059, var_1061);
                    if (!var_1060) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1282>
                        var_1074 = (var_1028 == var_385);
                        if (var_1074) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1283>
                            var_1075 = wp::extract(var_938, var_1026);
                            var_1076 = (var_1075 > var_24);
                            if (var_1076) {
                                // err = (derr - target) * dt                                     <L 1284>
                                var_1077 = wp::sub(var_1045, var_1073);
                                var_1078 = wp::mul(var_1077, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1285>
                                var_1079 = wp::extract(var_938, var_1026);
                                var_1080 = wp::div(var_157, var_1079);
                            }
                            var_1081 = wp::select(var_1076, var_1070, var_1078);
                            var_1082 = wp::select(var_1076, var_1071, var_1080);
                            // damping = axis_damping[dim]                                        <L 1286>
                            var_1083 = wp::extract(var_939, var_1026);
                        }
                        var_1084 = wp::select(var_1074, var_1070, var_1081);
                        var_1085 = wp::select(var_1074, var_1071, var_1082);
                        var_1086 = wp::select(var_1074, var_1072, var_1083);
                    }
                    var_1087 = wp::select(var_1060, var_1084, var_1070);
                    var_1088 = wp::select(var_1060, var_1085, var_1071);
                    var_1089 = wp::select(var_1060, var_1086, var_1072);
                }
                var_1090 = wp::select(var_1054, var_1087, var_1057);
                var_1091 = wp::select(var_1054, var_1088, var_1058);
                var_1092 = wp::select(var_1054, var_1089, var_24);
                var_1093 = wp::select(var_1054, var_1073, var_1018);
            }
            var_1094 = wp::select(var_1049, var_1090, var_1052);
            var_1095 = wp::select(var_1049, var_1091, var_1053);
            var_1096 = wp::select(var_1049, var_1092, var_24);
            var_1097 = wp::select(var_1049, var_1093, var_1018);
            // d_lambda = (                                                                       <L 1288>
            // compute_angular_correction(                                                        <L 1289>
            // err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt       <L 1290>
            var_1098 = compute_angular_correction(var_1094, var_1045, var_53, var_59, var_52, var_69, var_1042, var_1041, var_24, var_1095, var_1096, var_dt);
            // * angular_relaxation                                                               <L 1292>
            var_1099 = wp::mul(var_1098, var_angular_relaxation);
            // ang_delta_p += angular_p * d_lambda                                                <L 1295>
            var_1100 = wp::mul(var_1042, var_1099);
            var_1101 = wp::add(var_1022, var_1100);
            // ang_delta_c += angular_c * d_lambda                                                <L 1296>
            var_1102 = wp::mul(var_1041, var_1099);
            var_1103 = wp::add(var_1024, var_1102);
            var_1105 = wp::int(var_1104);
            // e = errs[dim]                                                                      <L 1247>
            var_1106 = wp::extract(var_771, var_1105);
            // mode = axis_mode[dim]                                                              <L 1248>
            var_1107 = wp::extract(var_930, var_1105);
            // grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])                 <L 1251>
            var_1108 = wp::extract(var_775, var_1105);
            var_1109 = wp::extract(var_779, var_1105);
            var_1110 = wp::extract(var_783, var_1105);
            var_1111 = wp::extract(var_787, var_1105);
            var_1112 = wp::quat_t<wp::float32>(var_1108, var_1109, var_1110, var_1111);
            // quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                                   <L 1253>
            var_1113 = wp::mul(var_954, var_643);
            var_1114 = wp::mul(var_1113, var_1112);
            var_1115 = wp::quat_inverse(var_649);
            var_1116 = wp::mul(var_1114, var_1115);
            // angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                               <L 1254>
            var_1117 = wp::extract(var_1116, var_5);
            var_1118 = wp::extract(var_1116, var_99);
            var_1119 = wp::extract(var_1116, var_277);
            var_1120 = wp::vec_t<3,wp::float32>(var_1117, var_1118, var_1119);
            // angular_p = -angular_c                                                             <L 1255>
            var_1121 = wp::neg(var_1120);
            // derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                     <L 1257>
            var_1122 = wp::dot(var_1121, var_56);
            var_1123 = wp::dot(var_1120, var_75);
            var_1124 = wp::add(var_1122, var_1123);
            // err = 0.0                                                                          <L 1259>
            // compliance = angular_compliance                                                    <L 1260>
            var_1125 = wp::copy(var_92);
            // damping = 0.0                                                                      <L 1261>
            // lower = axis_limits_lower[dim]                                                     <L 1264>
            var_1126 = wp::extract(var_943, var_1105);
            // upper = axis_limits_upper[dim]                                                     <L 1265>
            var_1127 = wp::extract(var_944, var_1105);
            // if e < lower:                                                                      <L 1266>
            var_1128 = (var_1106 < var_1126);
            if (var_1128) {
                // err = e - lower                                                                <L 1267>
                var_1129 = wp::sub(var_1106, var_1126);
                // compliance = angular_compliance                                                <L 1268>
                var_1130 = wp::copy(var_92);
                // damping = 0.0                                                                  <L 1269>
            }
            var_1131 = wp::select(var_1128, var_24, var_1129);
            var_1132 = wp::select(var_1128, var_1125, var_1130);
            if (!var_1128) {
                // elif e > upper:                                                                <L 1270>
                var_1133 = (var_1106 > var_1127);
                if (var_1133) {
                    // err = e - upper                                                            <L 1271>
                    var_1134 = wp::sub(var_1106, var_1127);
                    // compliance = angular_compliance                                            <L 1272>
                    var_1135 = wp::copy(var_92);
                    // damping = 0.0                                                              <L 1273>
                }
                var_1136 = wp::select(var_1133, var_1131, var_1134);
                var_1137 = wp::select(var_1133, var_1132, var_1135);
                if (!var_1133) {
                    // target = axis_target[dim]                                                  <L 1275>
                    var_1138 = wp::extract(var_942, var_1105);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1276>
                    var_1139 = (var_1107 == var_370);
                    if (var_1139) {
                        // target = wp.clamp(target, lower, upper)                                <L 1277>
                        var_1140 = wp::clamp(var_1138, var_1126, var_1127);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1278>
                        var_1141 = wp::extract(var_938, var_1105);
                        var_1142 = (var_1141 > var_24);
                        if (var_1142) {
                            // err = e - target                                                   <L 1279>
                            var_1143 = wp::sub(var_1106, var_1140);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1280>
                            var_1144 = wp::extract(var_938, var_1105);
                            var_1145 = wp::div(var_157, var_1144);
                        }
                        var_1146 = wp::select(var_1142, var_1136, var_1143);
                        var_1147 = wp::select(var_1142, var_1137, var_1145);
                        // damping = axis_damping[dim]                                            <L 1281>
                        var_1148 = wp::extract(var_939, var_1105);
                    }
                    var_1149 = wp::select(var_1139, var_1136, var_1146);
                    var_1150 = wp::select(var_1139, var_1137, var_1147);
                    var_1151 = wp::select(var_1139, var_24, var_1148);
                    var_1152 = wp::select(var_1139, var_1138, var_1140);
                    if (!var_1139) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1282>
                        var_1153 = (var_1107 == var_385);
                        if (var_1153) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1283>
                            var_1154 = wp::extract(var_938, var_1105);
                            var_1155 = (var_1154 > var_24);
                            if (var_1155) {
                                // err = (derr - target) * dt                                     <L 1284>
                                var_1156 = wp::sub(var_1124, var_1152);
                                var_1157 = wp::mul(var_1156, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1285>
                                var_1158 = wp::extract(var_938, var_1105);
                                var_1159 = wp::div(var_157, var_1158);
                            }
                            var_1160 = wp::select(var_1155, var_1149, var_1157);
                            var_1161 = wp::select(var_1155, var_1150, var_1159);
                            // damping = axis_damping[dim]                                        <L 1286>
                            var_1162 = wp::extract(var_939, var_1105);
                        }
                        var_1163 = wp::select(var_1153, var_1149, var_1160);
                        var_1164 = wp::select(var_1153, var_1150, var_1161);
                        var_1165 = wp::select(var_1153, var_1151, var_1162);
                    }
                    var_1166 = wp::select(var_1139, var_1163, var_1149);
                    var_1167 = wp::select(var_1139, var_1164, var_1150);
                    var_1168 = wp::select(var_1139, var_1165, var_1151);
                }
                var_1169 = wp::select(var_1133, var_1166, var_1136);
                var_1170 = wp::select(var_1133, var_1167, var_1137);
                var_1171 = wp::select(var_1133, var_1168, var_24);
                var_1172 = wp::select(var_1133, var_1152, var_1097);
            }
            var_1173 = wp::select(var_1128, var_1169, var_1131);
            var_1174 = wp::select(var_1128, var_1170, var_1132);
            var_1175 = wp::select(var_1128, var_1171, var_24);
            var_1176 = wp::select(var_1128, var_1172, var_1097);
            // d_lambda = (                                                                       <L 1288>
            // compute_angular_correction(                                                        <L 1289>
            // err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt       <L 1290>
            var_1177 = compute_angular_correction(var_1173, var_1124, var_53, var_59, var_52, var_69, var_1121, var_1120, var_24, var_1174, var_1175, var_dt);
            // * angular_relaxation                                                               <L 1292>
            var_1178 = wp::mul(var_1177, var_angular_relaxation);
            // ang_delta_p += angular_p * d_lambda                                                <L 1295>
            var_1179 = wp::mul(var_1121, var_1178);
            var_1180 = wp::add(var_1101, var_1179);
            // ang_delta_c += angular_c * d_lambda                                                <L 1296>
            var_1181 = wp::mul(var_1120, var_1178);
            var_1182 = wp::add(var_1103, var_1181);
        }
        var_1183 = wp::select(var_642, var_613, var_1180);
        var_1184 = wp::select(var_642, var_615, var_1182);
        var_1185 = wp::select(var_642, var_618, var_1126);
        var_1186 = wp::select(var_642, var_619, var_1127);
        var_1187 = wp::select(var_642, var_120, var_766);
        var_1188 = wp::select(var_642, var_620, var_1173);
        var_1189 = wp::select(var_642, var_623, var_1121);
        var_1190 = wp::select(var_642, var_624, var_1120);
        var_1191 = wp::select(var_642, var_625, var_1124);
        var_1192 = wp::select(var_642, var_626, var_1174);
        var_1193 = wp::select(var_642, var_627, var_927);
        var_1194 = wp::select(var_642, var_628, var_1175);
        var_1195 = wp::select(var_642, var_629, var_1178);
        var_1196 = wp::select(var_642, var_315, var_928);
        var_1197 = wp::select(var_642, var_316, var_929);
        var_1198 = wp::select(var_642, var_317, var_930);
        var_1199 = wp::select(var_642, var_318, var_931);
        var_1200 = wp::select(var_642, var_319, var_932);
        var_1201 = wp::select(var_642, var_199, var_837);
        var_1202 = wp::select(var_642, var_202, var_838);
        var_1203 = wp::select(var_642, var_524, var_1107);
        var_1204 = wp::select(var_642, var_321, var_934);
        var_1205 = wp::select(var_642, var_591, var_1176);
        var_1206 = wp::select(var_642, var_323, var_936);
        var_1207 = wp::select(var_642, var_329, var_942);
        var_1208 = wp::select(var_642, var_325, var_938);
        var_1209 = wp::select(var_642, var_326, var_939);
        var_1210 = wp::select(var_642, var_330, var_943);
        var_1211 = wp::select(var_642, var_331, var_944);
        var_1212 = wp::select(var_642, var_522, var_1105);
        var_1213 = wp::select(var_642, var_523, var_1106);
        // if id_p >= 0:                                                                          <L 1298>
        var_1214 = (var_16 >= var_5);
        if (var_1214) {
            // wp.atomic_add(deltas, id_p, wp.spatial_vector(ang_delta_p, lin_delta_p))           <L 1299>
            var_1215 = wp::vec_t<6,wp::float32>(var_1183, var_612);
            var_1216 = wp::atomic_add(var_deltas, var_16, var_1215);
        }
        // if id_c >= 0:                                                                          <L 1300>
        var_1217 = (var_13 >= var_5);
        if (var_1217) {
            // wp.atomic_add(deltas, id_c, wp.spatial_vector(ang_delta_c, lin_delta_c))           <L 1301>
            var_1218 = wp::vec_t<6,wp::float32>(var_1184, var_614);
            var_1219 = wp::atomic_add(var_deltas, var_13, var_1218);
        }
    }
}

extern "C" __global__ void solve_body_joints_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_inv_m,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_inv_I,
    wp::array_t<wp::int32> var_joint_type,
    wp::array_t<wp::int32> var_joint_enabled,
    wp::array_t<wp::int32> var_joint_parent,
    wp::array_t<wp::int32> var_joint_child,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_p,
    wp::array_t<wp::transform_t<wp::float32>> var_joint_X_c,
    wp::array_t<wp::float32> var_joint_limit_lower,
    wp::array_t<wp::float32> var_joint_limit_upper,
    wp::array_t<wp::int32> var_joint_axis_start,
    wp::array_t<wp::int32> var_joint_axis_dim,
    wp::array_t<wp::uint8> var_joint_axis_mode,
    wp::array_t<wp::vec_t<3,wp::float32>> var_joint_axis,
    wp::array_t<wp::float32> var_joint_target,
    wp::array_t<wp::float32> var_joint_target_ke,
    wp::array_t<wp::float32> var_joint_target_kd,
    wp::array_t<wp::float32> var_joint_linear_compliance,
    wp::array_t<wp::float32> var_joint_angular_compliance,
    wp::float32 var_angular_relaxation,
    wp::float32 var_linear_relaxation,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::transform_t<wp::float32>> adj_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::array_t<wp::float32> adj_body_inv_m,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_body_inv_I,
    wp::array_t<wp::int32> adj_joint_type,
    wp::array_t<wp::int32> adj_joint_enabled,
    wp::array_t<wp::int32> adj_joint_parent,
    wp::array_t<wp::int32> adj_joint_child,
    wp::array_t<wp::transform_t<wp::float32>> adj_joint_X_p,
    wp::array_t<wp::transform_t<wp::float32>> adj_joint_X_c,
    wp::array_t<wp::float32> adj_joint_limit_lower,
    wp::array_t<wp::float32> adj_joint_limit_upper,
    wp::array_t<wp::int32> adj_joint_axis_start,
    wp::array_t<wp::int32> adj_joint_axis_dim,
    wp::array_t<wp::uint8> adj_joint_axis_mode,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_joint_axis,
    wp::array_t<wp::float32> adj_joint_target,
    wp::array_t<wp::float32> adj_joint_target_ke,
    wp::array_t<wp::float32> adj_joint_target_kd,
    wp::array_t<wp::float32> adj_joint_linear_compliance,
    wp::array_t<wp::float32> adj_joint_angular_compliance,
    wp::float32 adj_angular_relaxation,
    wp::float32 adj_linear_relaxation,
    wp::float32 adj_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_deltas)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::int32* var_1;
        wp::int32 var_2;
        wp::int32 var_3;
        wp::int32* var_4;
        const wp::int32 var_5 = 0;
        bool var_6;
        wp::int32 var_7;
        const wp::int32 var_8 = 4;
        bool var_9;
        bool var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        wp::transform_t<wp::float32>* var_17;
        wp::transform_t<wp::float32> var_18;
        wp::transform_t<wp::float32> var_19;
        wp::transform_t<wp::float32>* var_20;
        wp::transform_t<wp::float32> var_21;
        wp::transform_t<wp::float32> var_22;
        wp::transform_t<wp::float32> var_23;
        const wp::float32 var_24 = 0.0;
        wp::mat_t<3,3,wp::float32> var_25;
        wp::transform_t<wp::float32> var_26;
        wp::vec_t<3,wp::float32> var_27;
        wp::vec_t<3,wp::float32> var_28;
        wp::vec_t<3,wp::float32> var_29;
        bool var_30;
        wp::transform_t<wp::float32>* var_31;
        wp::transform_t<wp::float32> var_32;
        wp::transform_t<wp::float32> var_33;
        wp::transform_t<wp::float32> var_34;
        wp::vec_t<3,wp::float32>* var_35;
        wp::vec_t<3,wp::float32> var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::float32* var_38;
        wp::float32 var_39;
        wp::float32 var_40;
        wp::mat_t<3,3,wp::float32>* var_41;
        wp::mat_t<3,3,wp::float32> var_42;
        wp::mat_t<3,3,wp::float32> var_43;
        wp::vec_t<6,wp::float32>* var_44;
        wp::vec_t<6,wp::float32> var_45;
        wp::vec_t<3,wp::float32> var_46;
        wp::vec_t<6,wp::float32>* var_47;
        wp::vec_t<6,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::transform_t<wp::float32> var_50;
        wp::float32 var_51;
        wp::mat_t<3,3,wp::float32> var_52;
        wp::transform_t<wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::transform_t<wp::float32>* var_57;
        wp::transform_t<wp::float32> var_58;
        wp::transform_t<wp::float32> var_59;
        wp::transform_t<wp::float32> var_60;
        wp::vec_t<3,wp::float32>* var_61;
        wp::vec_t<3,wp::float32> var_62;
        wp::vec_t<3,wp::float32> var_63;
        wp::float32* var_64;
        wp::float32 var_65;
        wp::float32 var_66;
        wp::mat_t<3,3,wp::float32>* var_67;
        wp::mat_t<3,3,wp::float32> var_68;
        wp::mat_t<3,3,wp::float32> var_69;
        wp::vec_t<6,wp::float32>* var_70;
        wp::vec_t<6,wp::float32> var_71;
        wp::vec_t<3,wp::float32> var_72;
        wp::vec_t<6,wp::float32>* var_73;
        wp::vec_t<6,wp::float32> var_74;
        wp::vec_t<3,wp::float32> var_75;
        bool var_76;
        bool var_77;
        bool var_78;
        wp::vec_t<3,wp::float32> var_79;
        wp::vec_t<3,wp::float32> var_80;
        wp::vec_t<3,wp::float32> var_81;
        wp::vec_t<3,wp::float32> var_82;
        wp::transform_t<wp::float32> var_83;
        wp::transform_t<wp::float32> var_84;
        wp::vec_t<3,wp::float32> var_85;
        wp::vec_t<3,wp::float32> var_86;
        wp::float32* var_87;
        wp::float32 var_88;
        wp::float32 var_89;
        wp::float32* var_90;
        wp::float32 var_91;
        wp::float32 var_92;
        wp::int32* var_93;
        wp::int32 var_94;
        wp::int32 var_95;
        wp::int32* var_96;
        wp::int32 var_97;
        wp::int32 var_98;
        const wp::int32 var_99 = 1;
        wp::int32* var_100;
        wp::int32 var_101;
        wp::int32 var_102;
        wp::vec_t<3,wp::float32> var_103;
        wp::vec_t<3,wp::float32> var_104;
        const wp::int32 var_105 = 7;
        bool var_106;
        wp::vec_t<3,wp::float32> var_107;
        wp::vec_t<3,wp::float32> var_108;
        wp::vec_t<3,wp::float32> var_109;
        wp::vec_t<3,wp::float32> var_110;
        wp::float32* var_111;
        wp::float32 var_112;
        wp::float32 var_113;
        wp::float32* var_114;
        wp::float32 var_115;
        wp::float32 var_116;
        bool var_117;
        bool var_118;
        bool var_119;
        wp::float32 var_120;
        bool var_121;
        bool var_122;
        bool var_123;
        wp::float32 var_124;
        wp::vec_t<3,wp::float32> var_125;
        wp::vec_t<3,wp::float32> var_126;
        wp::vec_t<3,wp::float32> var_127;
        wp::vec_t<3,wp::float32> var_128;
        wp::float32 var_129;
        bool var_130;
        bool var_131;
        bool var_132;
        wp::float32 var_133;
        wp::float32 var_134;
        wp::float32 var_135;
        wp::float32 var_136;
        const wp::float32 var_137 = 1e-09;
        bool var_138;
        wp::vec_t<3,wp::float32> var_139;
        wp::vec_t<3,wp::float32> var_140;
        wp::vec_t<3,wp::float32> var_141;
        wp::vec_t<3,wp::float32> var_142;
        wp::vec_t<3,wp::float32> var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::float32 var_145;
        wp::float32 var_146;
        wp::float32 var_147;
        wp::float32 var_148;
        wp::float32 var_149;
        wp::float32 var_150;
        wp::float32 var_151;
        wp::float32 var_152;
        wp::float32* var_153;
        wp::float32 var_154;
        wp::float32 var_155;
        bool var_156;
        const wp::float32 var_157 = 1.0;
        wp::float32 var_158;
        wp::float32 var_159;
        wp::float32* var_160;
        wp::float32 var_161;
        wp::float32 var_162;
        wp::float32 var_163;
        wp::float32 var_164;
        wp::vec_t<3,wp::float32> var_165;
        wp::vec_t<3,wp::float32> var_166;
        wp::float32 var_167;
        wp::vec_t<3,wp::float32> var_168;
        wp::vec_t<3,wp::float32> var_169;
        wp::float32 var_170;
        wp::vec_t<3,wp::float32> var_171;
        wp::vec_t<3,wp::float32> var_172;
        wp::float32 var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<3,wp::float32> var_176;
        wp::vec_t<3,wp::float32> var_177;
        wp::vec_t<3,wp::float32> var_178;
        wp::vec_t<3,wp::float32> var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::vec_t<3,wp::float32> var_182;
        wp::vec_t<3,wp::float32> var_183;
        wp::vec_t<3,wp::float32> var_184;
        wp::vec_t<3,wp::float32> var_185;
        wp::float32 var_186;
        wp::vec_t<6,wp::float32> var_187;
        wp::uint8 var_188;
        wp::uint8 var_189;
        wp::uint8 var_190;
        wp::vec_t<3,wp::uint8> var_191;
        wp::mat_t<3,3,wp::float32> var_192;
        bool var_193;
        wp::vec_t<3,wp::float32>* var_194;
        wp::vec_t<3,wp::float32> var_195;
        wp::vec_t<3,wp::float32> var_196;
        wp::float32* var_197;
        wp::float32 var_198;
        wp::vec_t<3,wp::float32> var_199;
        wp::float32* var_200;
        wp::float32 var_201;
        wp::vec_t<3,wp::float32> var_202;
        wp::vec_t<3,wp::float32> var_203;
        wp::vec_t<3,wp::float32> var_204;
        wp::vec_t<6,wp::float32> var_205;
        wp::uint8* var_206;
        wp::uint8 var_207;
        wp::uint8 var_208;
        const wp::int32 var_209 = 0;
        bool var_210;
        wp::float32* var_211;
        wp::float32 var_212;
        wp::float32 var_213;
        wp::float32* var_214;
        wp::float32 var_215;
        wp::float32 var_216;
        wp::float32* var_217;
        wp::float32 var_218;
        wp::float32 var_219;
        wp::vec_t<3,wp::uint8> var_220;
        wp::mat_t<3,3,wp::float32> var_221;
        wp::float32 var_222;
        wp::float32 var_223;
        wp::float32 var_224;
        wp::vec_t<3,wp::uint8> var_225;
        wp::mat_t<3,3,wp::float32> var_226;
        wp::float32 var_227;
        wp::float32 var_228;
        wp::vec_t<6,wp::float32> var_229;
        wp::vec_t<3,wp::uint8> var_230;
        wp::mat_t<3,3,wp::float32> var_231;
        bool var_232;
        wp::int32 var_233;
        wp::vec_t<3,wp::float32>* var_234;
        wp::vec_t<3,wp::float32> var_235;
        wp::vec_t<3,wp::float32> var_236;
        wp::float32* var_237;
        wp::float32 var_238;
        wp::float32 var_239;
        wp::float32* var_240;
        wp::float32 var_241;
        wp::float32 var_242;
        wp::vec_t<6,wp::float32> var_243;
        wp::uint8* var_244;
        wp::uint8 var_245;
        wp::uint8 var_246;
        bool var_247;
        wp::float32* var_248;
        wp::float32 var_249;
        wp::float32 var_250;
        wp::float32* var_251;
        wp::float32 var_252;
        wp::float32 var_253;
        wp::float32* var_254;
        wp::float32 var_255;
        wp::float32 var_256;
        wp::vec_t<3,wp::uint8> var_257;
        wp::mat_t<3,3,wp::float32> var_258;
        wp::float32 var_259;
        wp::float32 var_260;
        wp::float32 var_261;
        wp::vec_t<3,wp::uint8> var_262;
        wp::mat_t<3,3,wp::float32> var_263;
        wp::float32 var_264;
        wp::float32 var_265;
        wp::float32 var_266;
        wp::float32 var_267;
        wp::float32 var_268;
        wp::float32 var_269;
        wp::vec_t<6,wp::float32> var_270;
        wp::vec_t<3,wp::uint8> var_271;
        wp::mat_t<3,3,wp::float32> var_272;
        wp::vec_t<3,wp::float32> var_273;
        wp::uint8 var_274;
        wp::float32 var_275;
        wp::float32 var_276;
        const wp::int32 var_277 = 2;
        bool var_278;
        wp::int32 var_279;
        wp::vec_t<3,wp::float32>* var_280;
        wp::vec_t<3,wp::float32> var_281;
        wp::vec_t<3,wp::float32> var_282;
        wp::float32* var_283;
        wp::float32 var_284;
        wp::float32 var_285;
        wp::float32* var_286;
        wp::float32 var_287;
        wp::float32 var_288;
        wp::vec_t<6,wp::float32> var_289;
        wp::uint8* var_290;
        wp::uint8 var_291;
        wp::uint8 var_292;
        bool var_293;
        wp::float32* var_294;
        wp::float32 var_295;
        wp::float32 var_296;
        wp::float32* var_297;
        wp::float32 var_298;
        wp::float32 var_299;
        wp::float32* var_300;
        wp::float32 var_301;
        wp::float32 var_302;
        wp::vec_t<3,wp::uint8> var_303;
        wp::mat_t<3,3,wp::float32> var_304;
        wp::float32 var_305;
        wp::float32 var_306;
        wp::float32 var_307;
        wp::vec_t<3,wp::uint8> var_308;
        wp::mat_t<3,3,wp::float32> var_309;
        wp::float32 var_310;
        wp::float32 var_311;
        wp::float32 var_312;
        wp::float32 var_313;
        wp::float32 var_314;
        wp::float32 var_315;
        wp::vec_t<6,wp::float32> var_316;
        wp::vec_t<3,wp::uint8> var_317;
        wp::mat_t<3,3,wp::float32> var_318;
        wp::vec_t<3,wp::float32> var_319;
        wp::uint8 var_320;
        wp::float32 var_321;
        wp::float32 var_322;
        wp::int32 var_323;
        wp::vec_t<3,wp::float32> var_324;
        wp::vec_t<3,wp::float32> var_325;
        wp::vec_t<3,wp::float32> var_326;
        bool var_327;
        wp::vec_t<3,wp::float32> var_328;
        wp::vec_t<3,wp::float32> var_329;
        wp::vec_t<3,wp::float32> var_330;
        wp::vec_t<3,wp::float32> var_331;
        wp::quat_t<wp::float32> var_332;
        wp::mat_t<3,3,wp::float32> var_333;
        wp::vec_t<3,wp::float32> var_334;
        wp::vec_t<3,wp::float32> var_335;
        wp::vec_t<3,wp::float32> var_336;
        const wp::int32 var_337 = 0;
        wp::int32 var_338;
        wp::float32 var_339;
        wp::uint8 var_340;
        wp::float32 var_341;
        wp::float32 var_342;
        wp::float32 var_343;
        wp::vec_t<3,wp::float32> var_344;
        wp::vec_t<3,wp::float32> var_345;
        wp::vec_t<3,wp::float32> var_346;
        wp::vec_t<3,wp::float32> var_347;
        wp::vec_t<3,wp::float32> var_348;
        wp::float32 var_349;
        wp::float32 var_350;
        wp::float32 var_351;
        wp::float32 var_352;
        wp::float32 var_353;
        wp::float32 var_354;
        wp::float32 var_355;
        wp::float32 var_356;
        wp::float32 var_357;
        wp::float32 var_358;
        bool var_359;
        wp::float32 var_360;
        wp::float32 var_361;
        wp::float32 var_362;
        wp::float32 var_363;
        bool var_364;
        wp::float32 var_365;
        wp::float32 var_366;
        wp::float32 var_367;
        wp::float32 var_368;
        wp::float32 var_369;
        const wp::int32 var_370 = 1;
        bool var_371;
        wp::float32 var_372;
        wp::float32 var_373;
        bool var_374;
        wp::float32 var_375;
        wp::float32 var_376;
        wp::float32 var_377;
        wp::float32 var_378;
        wp::float32 var_379;
        wp::float32 var_380;
        wp::float32 var_381;
        wp::float32 var_382;
        wp::float32 var_383;
        wp::float32 var_384;
        const wp::int32 var_385 = 2;
        bool var_386;
        wp::float32 var_387;
        bool var_388;
        wp::float32 var_389;
        wp::float32 var_390;
        wp::float32 var_391;
        wp::float32 var_392;
        wp::float32 var_393;
        wp::float32 var_394;
        wp::float32 var_395;
        wp::float32 var_396;
        wp::float32 var_397;
        wp::float32 var_398;
        wp::float32 var_399;
        wp::float32 var_400;
        wp::float32 var_401;
        wp::float32 var_402;
        wp::float32 var_403;
        wp::float32 var_404;
        wp::float32 var_405;
        wp::float32 var_406;
        wp::float32 var_407;
        wp::float32 var_408;
        wp::float32 var_409;
        wp::float32 var_410;
        bool var_411;
        wp::float32 var_412;
        wp::float32 var_413;
        wp::vec_t<3,wp::float32> var_414;
        wp::vec_t<3,wp::float32> var_415;
        wp::float32 var_416;
        wp::vec_t<3,wp::float32> var_417;
        wp::vec_t<3,wp::float32> var_418;
        wp::float32 var_419;
        wp::vec_t<3,wp::float32> var_420;
        wp::vec_t<3,wp::float32> var_421;
        wp::float32 var_422;
        wp::vec_t<3,wp::float32> var_423;
        wp::vec_t<3,wp::float32> var_424;
        wp::vec_t<3,wp::float32> var_425;
        wp::vec_t<3,wp::float32> var_426;
        wp::vec_t<3,wp::float32> var_427;
        wp::vec_t<3,wp::float32> var_428;
        wp::float32 var_429;
        const wp::int32 var_430 = 1;
        wp::int32 var_431;
        wp::float32 var_432;
        wp::uint8 var_433;
        wp::float32 var_434;
        wp::float32 var_435;
        wp::float32 var_436;
        wp::vec_t<3,wp::float32> var_437;
        wp::vec_t<3,wp::float32> var_438;
        wp::vec_t<3,wp::float32> var_439;
        wp::vec_t<3,wp::float32> var_440;
        wp::vec_t<3,wp::float32> var_441;
        wp::float32 var_442;
        wp::float32 var_443;
        wp::float32 var_444;
        wp::float32 var_445;
        wp::float32 var_446;
        wp::float32 var_447;
        wp::float32 var_448;
        wp::float32 var_449;
        wp::float32 var_450;
        wp::float32 var_451;
        bool var_452;
        wp::float32 var_453;
        wp::float32 var_454;
        wp::float32 var_455;
        wp::float32 var_456;
        bool var_457;
        wp::float32 var_458;
        wp::float32 var_459;
        wp::float32 var_460;
        wp::float32 var_461;
        wp::float32 var_462;
        bool var_463;
        wp::float32 var_464;
        wp::float32 var_465;
        bool var_466;
        wp::float32 var_467;
        wp::float32 var_468;
        wp::float32 var_469;
        wp::float32 var_470;
        wp::float32 var_471;
        wp::float32 var_472;
        wp::float32 var_473;
        wp::float32 var_474;
        wp::float32 var_475;
        wp::float32 var_476;
        bool var_477;
        wp::float32 var_478;
        bool var_479;
        wp::float32 var_480;
        wp::float32 var_481;
        wp::float32 var_482;
        wp::float32 var_483;
        wp::float32 var_484;
        wp::float32 var_485;
        wp::float32 var_486;
        wp::float32 var_487;
        wp::float32 var_488;
        wp::float32 var_489;
        wp::float32 var_490;
        wp::float32 var_491;
        wp::float32 var_492;
        wp::float32 var_493;
        wp::float32 var_494;
        wp::float32 var_495;
        wp::float32 var_496;
        wp::float32 var_497;
        wp::float32 var_498;
        wp::float32 var_499;
        wp::float32 var_500;
        wp::float32 var_501;
        bool var_502;
        wp::float32 var_503;
        wp::float32 var_504;
        wp::vec_t<3,wp::float32> var_505;
        wp::vec_t<3,wp::float32> var_506;
        wp::float32 var_507;
        wp::vec_t<3,wp::float32> var_508;
        wp::vec_t<3,wp::float32> var_509;
        wp::float32 var_510;
        wp::vec_t<3,wp::float32> var_511;
        wp::vec_t<3,wp::float32> var_512;
        wp::float32 var_513;
        wp::vec_t<3,wp::float32> var_514;
        wp::vec_t<3,wp::float32> var_515;
        wp::vec_t<3,wp::float32> var_516;
        wp::vec_t<3,wp::float32> var_517;
        wp::vec_t<3,wp::float32> var_518;
        wp::vec_t<3,wp::float32> var_519;
        wp::float32 var_520;
        const wp::int32 var_521 = 2;
        wp::int32 var_522;
        wp::float32 var_523;
        wp::uint8 var_524;
        wp::float32 var_525;
        wp::float32 var_526;
        wp::float32 var_527;
        wp::vec_t<3,wp::float32> var_528;
        wp::vec_t<3,wp::float32> var_529;
        wp::vec_t<3,wp::float32> var_530;
        wp::vec_t<3,wp::float32> var_531;
        wp::vec_t<3,wp::float32> var_532;
        wp::float32 var_533;
        wp::float32 var_534;
        wp::float32 var_535;
        wp::float32 var_536;
        wp::float32 var_537;
        wp::float32 var_538;
        wp::float32 var_539;
        wp::float32 var_540;
        wp::float32 var_541;
        wp::float32 var_542;
        bool var_543;
        wp::float32 var_544;
        wp::float32 var_545;
        wp::float32 var_546;
        wp::float32 var_547;
        bool var_548;
        wp::float32 var_549;
        wp::float32 var_550;
        wp::float32 var_551;
        wp::float32 var_552;
        wp::float32 var_553;
        bool var_554;
        wp::float32 var_555;
        wp::float32 var_556;
        bool var_557;
        wp::float32 var_558;
        wp::float32 var_559;
        wp::float32 var_560;
        wp::float32 var_561;
        wp::float32 var_562;
        wp::float32 var_563;
        wp::float32 var_564;
        wp::float32 var_565;
        wp::float32 var_566;
        wp::float32 var_567;
        bool var_568;
        wp::float32 var_569;
        bool var_570;
        wp::float32 var_571;
        wp::float32 var_572;
        wp::float32 var_573;
        wp::float32 var_574;
        wp::float32 var_575;
        wp::float32 var_576;
        wp::float32 var_577;
        wp::float32 var_578;
        wp::float32 var_579;
        wp::float32 var_580;
        wp::float32 var_581;
        wp::float32 var_582;
        wp::float32 var_583;
        wp::float32 var_584;
        wp::float32 var_585;
        wp::float32 var_586;
        wp::float32 var_587;
        wp::float32 var_588;
        wp::float32 var_589;
        wp::float32 var_590;
        wp::float32 var_591;
        wp::float32 var_592;
        bool var_593;
        wp::float32 var_594;
        wp::float32 var_595;
        wp::vec_t<3,wp::float32> var_596;
        wp::vec_t<3,wp::float32> var_597;
        wp::float32 var_598;
        wp::vec_t<3,wp::float32> var_599;
        wp::vec_t<3,wp::float32> var_600;
        wp::float32 var_601;
        wp::vec_t<3,wp::float32> var_602;
        wp::vec_t<3,wp::float32> var_603;
        wp::float32 var_604;
        wp::vec_t<3,wp::float32> var_605;
        wp::vec_t<3,wp::float32> var_606;
        wp::vec_t<3,wp::float32> var_607;
        wp::vec_t<3,wp::float32> var_608;
        wp::vec_t<3,wp::float32> var_609;
        wp::vec_t<3,wp::float32> var_610;
        wp::float32 var_611;
        wp::vec_t<3,wp::float32> var_612;
        wp::vec_t<3,wp::float32> var_613;
        wp::vec_t<3,wp::float32> var_614;
        wp::vec_t<3,wp::float32> var_615;
        wp::vec_t<3,wp::float32> var_616;
        wp::vec_t<3,wp::float32> var_617;
        wp::float32 var_618;
        wp::float32 var_619;
        wp::float32 var_620;
        wp::vec_t<3,wp::float32> var_621;
        wp::vec_t<3,wp::float32> var_622;
        wp::vec_t<3,wp::float32> var_623;
        wp::vec_t<3,wp::float32> var_624;
        wp::float32 var_625;
        wp::float32 var_626;
        wp::float32 var_627;
        wp::float32 var_628;
        wp::float32 var_629;
        const wp::int32 var_630 = 3;
        bool var_631;
        const wp::int32 var_632 = 0;
        bool var_633;
        const wp::int32 var_634 = 1;
        bool var_635;
        const wp::int32 var_636 = 6;
        bool var_637;
        const wp::int32 var_638 = 5;
        bool var_639;
        const wp::int32 var_640 = 8;
        bool var_641;
        bool var_642;
        wp::quat_t<wp::float32> var_643;
        wp::quat_t<wp::float32> var_644;
        wp::float32 var_645;
        bool var_646;
        wp::float32 var_647;
        wp::quat_t<wp::float32> var_648;
        wp::quat_t<wp::float32> var_649;
        wp::quat_t<wp::float32> var_650;
        wp::quat_t<wp::float32> var_651;
        wp::float32 var_652;
        const wp::int32 var_653 = 3;
        wp::float32 var_654;
        wp::quat_t<wp::float32> var_655;
        wp::quat_t<wp::float32> var_656;
        wp::quat_t<wp::float32> var_657;
        wp::quat_t<wp::float32> var_658;
        wp::float32 var_659;
        wp::float32 var_660;
        wp::float32 var_661;
        wp::float32 var_662;
        wp::float32 var_663;
        wp::float32 var_664;
        wp::float32 var_665;
        wp::float32 var_666;
        wp::float32 var_667;
        wp::float32 var_668;
        wp::float32 var_669;
        const wp::float32 var_670 = 2.0;
        wp::float32 var_671;
        wp::float32 var_672;
        wp::float32 var_673;
        wp::float32 var_674;
        wp::float32 var_675;
        wp::float32 var_676;
        wp::float32 var_677;
        wp::float32 var_678;
        wp::float32 var_679;
        wp::float32 var_680;
        wp::float32 var_681;
        wp::float32 var_682;
        wp::float32 var_683;
        wp::float32 var_684;
        wp::float32 var_685;
        wp::float32 var_686;
        wp::float32 var_687;
        wp::quat_t<wp::float32> var_688;
        wp::float32 var_689;
        wp::float32 var_690;
        wp::float32 var_691;
        wp::float32 var_692;
        wp::float32 var_693;
        wp::float32 var_694;
        wp::float32 var_695;
        wp::float32 var_696;
        wp::float32 var_697;
        wp::float32 var_698;
        wp::float32 var_699;
        wp::float32 var_700;
        wp::float32 var_701;
        wp::float32 var_702;
        wp::float32 var_703;
        wp::float32 var_704;
        wp::float32 var_705;
        wp::float32 var_706;
        wp::float32 var_707;
        wp::float32 var_708;
        wp::float32 var_709;
        wp::float32 var_710;
        wp::float32 var_711;
        wp::float32 var_712;
        wp::float32 var_713;
        wp::float32 var_714;
        wp::quat_t<wp::float32> var_715;
        wp::float32 var_716;
        wp::float32 var_717;
        wp::float32 var_718;
        wp::float32 var_719;
        wp::float32 var_720;
        wp::float32 var_721;
        wp::float32 var_722;
        wp::float32 var_723;
        wp::float32 var_724;
        wp::float32 var_725;
        wp::float32 var_726;
        wp::float32 var_727;
        wp::float32 var_728;
        wp::float32 var_729;
        wp::float32 var_730;
        wp::float32 var_731;
        wp::float32 var_732;
        wp::float32 var_733;
        wp::float32 var_734;
        wp::float32 var_735;
        wp::float32 var_736;
        wp::float32 var_737;
        wp::float32 var_738;
        wp::float32 var_739;
        wp::quat_t<wp::float32> var_740;
        wp::float32 var_741;
        wp::float32 var_742;
        wp::float32 var_743;
        wp::quat_t<wp::float32> var_744;
        wp::float32 var_745;
        wp::float32 var_746;
        wp::float32 var_747;
        const wp::float32 var_748 = 0.0001;
        wp::float32 var_749;
        bool var_750;
        wp::float32 var_751;
        wp::float32 var_752;
        wp::float32 var_753;
        wp::float32 var_754;
        wp::float32 var_755;
        wp::float32 var_756;
        wp::float32 var_757;
        wp::float32 var_758;
        wp::float32 var_759;
        wp::float32 var_760;
        wp::float32 var_761;
        wp::float32 var_762;
        wp::float32 var_763;
        wp::quat_t<wp::float32> var_764;
        wp::quat_t<wp::float32> var_765;
        wp::float32 var_766;
        wp::float32 var_767;
        wp::float32 var_768;
        wp::quat_t<wp::float32> var_769;
        wp::quat_t<wp::float32> var_770;
        wp::vec_t<3,wp::float32> var_771;
        wp::float32 var_772;
        wp::float32 var_773;
        wp::float32 var_774;
        wp::vec_t<3,wp::float32> var_775;
        wp::float32 var_776;
        wp::float32 var_777;
        wp::float32 var_778;
        wp::vec_t<3,wp::float32> var_779;
        wp::float32 var_780;
        wp::float32 var_781;
        wp::float32 var_782;
        wp::vec_t<3,wp::float32> var_783;
        wp::float32 var_784;
        wp::float32 var_785;
        wp::float32 var_786;
        wp::vec_t<3,wp::float32> var_787;
        wp::float32 var_788;
        wp::vec_t<6,wp::float32> var_789;
        wp::uint8 var_790;
        wp::uint8 var_791;
        wp::uint8 var_792;
        wp::vec_t<3,wp::uint8> var_793;
        wp::mat_t<3,3,wp::float32> var_794;
        bool var_795;
        wp::int32 var_796;
        wp::vec_t<3,wp::float32>* var_797;
        wp::vec_t<3,wp::float32> var_798;
        wp::vec_t<3,wp::float32> var_799;
        wp::float32* var_800;
        wp::float32 var_801;
        wp::vec_t<3,wp::float32> var_802;
        wp::float32* var_803;
        wp::float32 var_804;
        wp::vec_t<3,wp::float32> var_805;
        wp::vec_t<3,wp::float32> var_806;
        wp::vec_t<3,wp::float32> var_807;
        wp::vec_t<6,wp::float32> var_808;
        wp::uint8* var_809;
        wp::uint8 var_810;
        wp::uint8 var_811;
        bool var_812;
        wp::float32* var_813;
        wp::float32 var_814;
        wp::float32 var_815;
        wp::float32* var_816;
        wp::float32 var_817;
        wp::float32 var_818;
        wp::float32* var_819;
        wp::float32 var_820;
        wp::float32 var_821;
        wp::vec_t<3,wp::uint8> var_822;
        wp::mat_t<3,3,wp::float32> var_823;
        wp::float32 var_824;
        wp::float32 var_825;
        wp::float32 var_826;
        wp::vec_t<3,wp::uint8> var_827;
        wp::mat_t<3,3,wp::float32> var_828;
        wp::float32 var_829;
        wp::float32 var_830;
        wp::float32 var_831;
        wp::float32 var_832;
        wp::vec_t<6,wp::float32> var_833;
        wp::vec_t<3,wp::uint8> var_834;
        wp::mat_t<3,3,wp::float32> var_835;
        wp::vec_t<3,wp::float32> var_836;
        wp::vec_t<3,wp::float32> var_837;
        wp::vec_t<3,wp::float32> var_838;
        wp::uint8 var_839;
        wp::float32 var_840;
        wp::float32 var_841;
        wp::int32 var_842;
        bool var_843;
        wp::int32 var_844;
        wp::int32 var_845;
        wp::vec_t<3,wp::float32>* var_846;
        wp::vec_t<3,wp::float32> var_847;
        wp::vec_t<3,wp::float32> var_848;
        wp::float32* var_849;
        wp::float32 var_850;
        wp::float32 var_851;
        wp::float32* var_852;
        wp::float32 var_853;
        wp::float32 var_854;
        wp::vec_t<6,wp::float32> var_855;
        wp::uint8* var_856;
        wp::uint8 var_857;
        wp::uint8 var_858;
        bool var_859;
        wp::float32* var_860;
        wp::float32 var_861;
        wp::float32 var_862;
        wp::float32* var_863;
        wp::float32 var_864;
        wp::float32 var_865;
        wp::float32* var_866;
        wp::float32 var_867;
        wp::float32 var_868;
        wp::vec_t<3,wp::uint8> var_869;
        wp::mat_t<3,3,wp::float32> var_870;
        wp::float32 var_871;
        wp::float32 var_872;
        wp::float32 var_873;
        wp::vec_t<3,wp::uint8> var_874;
        wp::mat_t<3,3,wp::float32> var_875;
        wp::float32 var_876;
        wp::float32 var_877;
        wp::float32 var_878;
        wp::float32 var_879;
        wp::float32 var_880;
        wp::float32 var_881;
        wp::vec_t<6,wp::float32> var_882;
        wp::vec_t<3,wp::uint8> var_883;
        wp::mat_t<3,3,wp::float32> var_884;
        wp::vec_t<3,wp::float32> var_885;
        wp::uint8 var_886;
        wp::float32 var_887;
        wp::float32 var_888;
        wp::int32 var_889;
        bool var_890;
        wp::int32 var_891;
        wp::int32 var_892;
        wp::vec_t<3,wp::float32>* var_893;
        wp::vec_t<3,wp::float32> var_894;
        wp::vec_t<3,wp::float32> var_895;
        wp::float32* var_896;
        wp::float32 var_897;
        wp::float32 var_898;
        wp::float32* var_899;
        wp::float32 var_900;
        wp::float32 var_901;
        wp::vec_t<6,wp::float32> var_902;
        wp::uint8* var_903;
        wp::uint8 var_904;
        wp::uint8 var_905;
        bool var_906;
        wp::float32* var_907;
        wp::float32 var_908;
        wp::float32 var_909;
        wp::float32* var_910;
        wp::float32 var_911;
        wp::float32 var_912;
        wp::float32* var_913;
        wp::float32 var_914;
        wp::float32 var_915;
        wp::vec_t<3,wp::uint8> var_916;
        wp::mat_t<3,3,wp::float32> var_917;
        wp::float32 var_918;
        wp::float32 var_919;
        wp::float32 var_920;
        wp::vec_t<3,wp::uint8> var_921;
        wp::mat_t<3,3,wp::float32> var_922;
        wp::float32 var_923;
        wp::float32 var_924;
        wp::float32 var_925;
        wp::float32 var_926;
        wp::float32 var_927;
        wp::float32 var_928;
        wp::vec_t<6,wp::float32> var_929;
        wp::vec_t<3,wp::uint8> var_930;
        wp::mat_t<3,3,wp::float32> var_931;
        wp::vec_t<3,wp::float32> var_932;
        wp::uint8 var_933;
        wp::float32 var_934;
        wp::float32 var_935;
        wp::int32 var_936;
        wp::vec_t<3,wp::float32> var_937;
        wp::vec_t<3,wp::float32> var_938;
        wp::vec_t<3,wp::float32> var_939;
        bool var_940;
        wp::vec_t<3,wp::float32> var_941;
        wp::vec_t<3,wp::float32> var_942;
        wp::vec_t<3,wp::float32> var_943;
        wp::vec_t<3,wp::float32> var_944;
        const wp::int32 var_945 = 0;
        wp::int32 var_946;
        wp::float32 var_947;
        wp::uint8 var_948;
        wp::float32 var_949;
        wp::float32 var_950;
        wp::float32 var_951;
        wp::float32 var_952;
        wp::quat_t<wp::float32> var_953;
        const wp::float32 var_954 = 0.5;
        wp::quat_t<wp::float32> var_955;
        wp::quat_t<wp::float32> var_956;
        wp::quat_t<wp::float32> var_957;
        wp::quat_t<wp::float32> var_958;
        wp::float32 var_959;
        wp::float32 var_960;
        wp::float32 var_961;
        wp::vec_t<3,wp::float32> var_962;
        wp::vec_t<3,wp::float32> var_963;
        wp::float32 var_964;
        wp::float32 var_965;
        wp::float32 var_966;
        wp::float32 var_967;
        wp::float32 var_968;
        wp::float32 var_969;
        bool var_970;
        wp::float32 var_971;
        wp::float32 var_972;
        wp::float32 var_973;
        wp::float32 var_974;
        bool var_975;
        wp::float32 var_976;
        wp::float32 var_977;
        wp::float32 var_978;
        wp::float32 var_979;
        wp::float32 var_980;
        bool var_981;
        wp::float32 var_982;
        wp::float32 var_983;
        bool var_984;
        wp::float32 var_985;
        wp::float32 var_986;
        wp::float32 var_987;
        wp::float32 var_988;
        wp::float32 var_989;
        wp::float32 var_990;
        wp::float32 var_991;
        wp::float32 var_992;
        wp::float32 var_993;
        wp::float32 var_994;
        bool var_995;
        wp::float32 var_996;
        bool var_997;
        wp::float32 var_998;
        wp::float32 var_999;
        wp::float32 var_1000;
        wp::float32 var_1001;
        wp::float32 var_1002;
        wp::float32 var_1003;
        wp::float32 var_1004;
        wp::float32 var_1005;
        wp::float32 var_1006;
        wp::float32 var_1007;
        wp::float32 var_1008;
        wp::float32 var_1009;
        wp::float32 var_1010;
        wp::float32 var_1011;
        wp::float32 var_1012;
        wp::float32 var_1013;
        wp::float32 var_1014;
        wp::float32 var_1015;
        wp::float32 var_1016;
        wp::float32 var_1017;
        wp::float32 var_1018;
        wp::float32 var_1019;
        wp::float32 var_1020;
        wp::vec_t<3,wp::float32> var_1021;
        wp::vec_t<3,wp::float32> var_1022;
        wp::vec_t<3,wp::float32> var_1023;
        wp::vec_t<3,wp::float32> var_1024;
        const wp::int32 var_1025 = 1;
        wp::int32 var_1026;
        wp::float32 var_1027;
        wp::uint8 var_1028;
        wp::float32 var_1029;
        wp::float32 var_1030;
        wp::float32 var_1031;
        wp::float32 var_1032;
        wp::quat_t<wp::float32> var_1033;
        wp::quat_t<wp::float32> var_1034;
        wp::quat_t<wp::float32> var_1035;
        wp::quat_t<wp::float32> var_1036;
        wp::quat_t<wp::float32> var_1037;
        wp::float32 var_1038;
        wp::float32 var_1039;
        wp::float32 var_1040;
        wp::vec_t<3,wp::float32> var_1041;
        wp::vec_t<3,wp::float32> var_1042;
        wp::float32 var_1043;
        wp::float32 var_1044;
        wp::float32 var_1045;
        wp::float32 var_1046;
        wp::float32 var_1047;
        wp::float32 var_1048;
        bool var_1049;
        wp::float32 var_1050;
        wp::float32 var_1051;
        wp::float32 var_1052;
        wp::float32 var_1053;
        bool var_1054;
        wp::float32 var_1055;
        wp::float32 var_1056;
        wp::float32 var_1057;
        wp::float32 var_1058;
        wp::float32 var_1059;
        bool var_1060;
        wp::float32 var_1061;
        wp::float32 var_1062;
        bool var_1063;
        wp::float32 var_1064;
        wp::float32 var_1065;
        wp::float32 var_1066;
        wp::float32 var_1067;
        wp::float32 var_1068;
        wp::float32 var_1069;
        wp::float32 var_1070;
        wp::float32 var_1071;
        wp::float32 var_1072;
        wp::float32 var_1073;
        bool var_1074;
        wp::float32 var_1075;
        bool var_1076;
        wp::float32 var_1077;
        wp::float32 var_1078;
        wp::float32 var_1079;
        wp::float32 var_1080;
        wp::float32 var_1081;
        wp::float32 var_1082;
        wp::float32 var_1083;
        wp::float32 var_1084;
        wp::float32 var_1085;
        wp::float32 var_1086;
        wp::float32 var_1087;
        wp::float32 var_1088;
        wp::float32 var_1089;
        wp::float32 var_1090;
        wp::float32 var_1091;
        wp::float32 var_1092;
        wp::float32 var_1093;
        wp::float32 var_1094;
        wp::float32 var_1095;
        wp::float32 var_1096;
        wp::float32 var_1097;
        wp::float32 var_1098;
        wp::float32 var_1099;
        wp::vec_t<3,wp::float32> var_1100;
        wp::vec_t<3,wp::float32> var_1101;
        wp::vec_t<3,wp::float32> var_1102;
        wp::vec_t<3,wp::float32> var_1103;
        const wp::int32 var_1104 = 2;
        wp::int32 var_1105;
        wp::float32 var_1106;
        wp::uint8 var_1107;
        wp::float32 var_1108;
        wp::float32 var_1109;
        wp::float32 var_1110;
        wp::float32 var_1111;
        wp::quat_t<wp::float32> var_1112;
        wp::quat_t<wp::float32> var_1113;
        wp::quat_t<wp::float32> var_1114;
        wp::quat_t<wp::float32> var_1115;
        wp::quat_t<wp::float32> var_1116;
        wp::float32 var_1117;
        wp::float32 var_1118;
        wp::float32 var_1119;
        wp::vec_t<3,wp::float32> var_1120;
        wp::vec_t<3,wp::float32> var_1121;
        wp::float32 var_1122;
        wp::float32 var_1123;
        wp::float32 var_1124;
        wp::float32 var_1125;
        wp::float32 var_1126;
        wp::float32 var_1127;
        bool var_1128;
        wp::float32 var_1129;
        wp::float32 var_1130;
        wp::float32 var_1131;
        wp::float32 var_1132;
        bool var_1133;
        wp::float32 var_1134;
        wp::float32 var_1135;
        wp::float32 var_1136;
        wp::float32 var_1137;
        wp::float32 var_1138;
        bool var_1139;
        wp::float32 var_1140;
        wp::float32 var_1141;
        bool var_1142;
        wp::float32 var_1143;
        wp::float32 var_1144;
        wp::float32 var_1145;
        wp::float32 var_1146;
        wp::float32 var_1147;
        wp::float32 var_1148;
        wp::float32 var_1149;
        wp::float32 var_1150;
        wp::float32 var_1151;
        wp::float32 var_1152;
        bool var_1153;
        wp::float32 var_1154;
        bool var_1155;
        wp::float32 var_1156;
        wp::float32 var_1157;
        wp::float32 var_1158;
        wp::float32 var_1159;
        wp::float32 var_1160;
        wp::float32 var_1161;
        wp::float32 var_1162;
        wp::float32 var_1163;
        wp::float32 var_1164;
        wp::float32 var_1165;
        wp::float32 var_1166;
        wp::float32 var_1167;
        wp::float32 var_1168;
        wp::float32 var_1169;
        wp::float32 var_1170;
        wp::float32 var_1171;
        wp::float32 var_1172;
        wp::float32 var_1173;
        wp::float32 var_1174;
        wp::float32 var_1175;
        wp::float32 var_1176;
        wp::float32 var_1177;
        wp::float32 var_1178;
        wp::vec_t<3,wp::float32> var_1179;
        wp::vec_t<3,wp::float32> var_1180;
        wp::vec_t<3,wp::float32> var_1181;
        wp::vec_t<3,wp::float32> var_1182;
        wp::vec_t<3,wp::float32> var_1183;
        wp::vec_t<3,wp::float32> var_1184;
        wp::float32 var_1185;
        wp::float32 var_1186;
        wp::float32 var_1187;
        wp::float32 var_1188;
        wp::vec_t<3,wp::float32> var_1189;
        wp::vec_t<3,wp::float32> var_1190;
        wp::float32 var_1191;
        wp::float32 var_1192;
        wp::float32 var_1193;
        wp::float32 var_1194;
        wp::float32 var_1195;
        wp::float32 var_1196;
        wp::vec_t<6,wp::float32> var_1197;
        wp::vec_t<3,wp::uint8> var_1198;
        wp::mat_t<3,3,wp::float32> var_1199;
        wp::vec_t<3,wp::float32> var_1200;
        wp::vec_t<3,wp::float32> var_1201;
        wp::vec_t<3,wp::float32> var_1202;
        wp::uint8 var_1203;
        wp::float32 var_1204;
        wp::float32 var_1205;
        wp::int32 var_1206;
        wp::vec_t<3,wp::float32> var_1207;
        wp::vec_t<3,wp::float32> var_1208;
        wp::vec_t<3,wp::float32> var_1209;
        wp::vec_t<3,wp::float32> var_1210;
        wp::vec_t<3,wp::float32> var_1211;
        wp::int32 var_1212;
        wp::float32 var_1213;
        bool var_1214;
        wp::vec_t<6,wp::float32> var_1215;
        wp::vec_t<6,wp::float32> var_1216;
        bool var_1217;
        wp::vec_t<6,wp::float32> var_1218;
        wp::vec_t<6,wp::float32> var_1219;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        wp::int32 adj_5 = {};
        bool adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        bool adj_9 = {};
        bool adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        wp::transform_t<wp::float32> adj_17 = {};
        wp::transform_t<wp::float32> adj_18 = {};
        wp::transform_t<wp::float32> adj_19 = {};
        wp::transform_t<wp::float32> adj_20 = {};
        wp::transform_t<wp::float32> adj_21 = {};
        wp::transform_t<wp::float32> adj_22 = {};
        wp::transform_t<wp::float32> adj_23 = {};
        wp::float32 adj_24 = {};
        wp::mat_t<3,3,wp::float32> adj_25 = {};
        wp::transform_t<wp::float32> adj_26 = {};
        wp::vec_t<3,wp::float32> adj_27 = {};
        wp::vec_t<3,wp::float32> adj_28 = {};
        wp::vec_t<3,wp::float32> adj_29 = {};
        bool adj_30 = {};
        wp::transform_t<wp::float32> adj_31 = {};
        wp::transform_t<wp::float32> adj_32 = {};
        wp::transform_t<wp::float32> adj_33 = {};
        wp::transform_t<wp::float32> adj_34 = {};
        wp::vec_t<3,wp::float32> adj_35 = {};
        wp::vec_t<3,wp::float32> adj_36 = {};
        wp::vec_t<3,wp::float32> adj_37 = {};
        wp::float32 adj_38 = {};
        wp::float32 adj_39 = {};
        wp::float32 adj_40 = {};
        wp::mat_t<3,3,wp::float32> adj_41 = {};
        wp::mat_t<3,3,wp::float32> adj_42 = {};
        wp::mat_t<3,3,wp::float32> adj_43 = {};
        wp::vec_t<6,wp::float32> adj_44 = {};
        wp::vec_t<6,wp::float32> adj_45 = {};
        wp::vec_t<3,wp::float32> adj_46 = {};
        wp::vec_t<6,wp::float32> adj_47 = {};
        wp::vec_t<6,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::transform_t<wp::float32> adj_50 = {};
        wp::float32 adj_51 = {};
        wp::mat_t<3,3,wp::float32> adj_52 = {};
        wp::transform_t<wp::float32> adj_53 = {};
        wp::vec_t<3,wp::float32> adj_54 = {};
        wp::vec_t<3,wp::float32> adj_55 = {};
        wp::vec_t<3,wp::float32> adj_56 = {};
        wp::transform_t<wp::float32> adj_57 = {};
        wp::transform_t<wp::float32> adj_58 = {};
        wp::transform_t<wp::float32> adj_59 = {};
        wp::transform_t<wp::float32> adj_60 = {};
        wp::vec_t<3,wp::float32> adj_61 = {};
        wp::vec_t<3,wp::float32> adj_62 = {};
        wp::vec_t<3,wp::float32> adj_63 = {};
        wp::float32 adj_64 = {};
        wp::float32 adj_65 = {};
        wp::float32 adj_66 = {};
        wp::mat_t<3,3,wp::float32> adj_67 = {};
        wp::mat_t<3,3,wp::float32> adj_68 = {};
        wp::mat_t<3,3,wp::float32> adj_69 = {};
        wp::vec_t<6,wp::float32> adj_70 = {};
        wp::vec_t<6,wp::float32> adj_71 = {};
        wp::vec_t<3,wp::float32> adj_72 = {};
        wp::vec_t<6,wp::float32> adj_73 = {};
        wp::vec_t<6,wp::float32> adj_74 = {};
        wp::vec_t<3,wp::float32> adj_75 = {};
        bool adj_76 = {};
        bool adj_77 = {};
        bool adj_78 = {};
        wp::vec_t<3,wp::float32> adj_79 = {};
        wp::vec_t<3,wp::float32> adj_80 = {};
        wp::vec_t<3,wp::float32> adj_81 = {};
        wp::vec_t<3,wp::float32> adj_82 = {};
        wp::transform_t<wp::float32> adj_83 = {};
        wp::transform_t<wp::float32> adj_84 = {};
        wp::vec_t<3,wp::float32> adj_85 = {};
        wp::vec_t<3,wp::float32> adj_86 = {};
        wp::float32 adj_87 = {};
        wp::float32 adj_88 = {};
        wp::float32 adj_89 = {};
        wp::float32 adj_90 = {};
        wp::float32 adj_91 = {};
        wp::float32 adj_92 = {};
        wp::int32 adj_93 = {};
        wp::int32 adj_94 = {};
        wp::int32 adj_95 = {};
        wp::int32 adj_96 = {};
        wp::int32 adj_97 = {};
        wp::int32 adj_98 = {};
        wp::int32 adj_99 = {};
        wp::int32 adj_100 = {};
        wp::int32 adj_101 = {};
        wp::int32 adj_102 = {};
        wp::vec_t<3,wp::float32> adj_103 = {};
        wp::vec_t<3,wp::float32> adj_104 = {};
        wp::int32 adj_105 = {};
        bool adj_106 = {};
        wp::vec_t<3,wp::float32> adj_107 = {};
        wp::vec_t<3,wp::float32> adj_108 = {};
        wp::vec_t<3,wp::float32> adj_109 = {};
        wp::vec_t<3,wp::float32> adj_110 = {};
        wp::float32 adj_111 = {};
        wp::float32 adj_112 = {};
        wp::float32 adj_113 = {};
        wp::float32 adj_114 = {};
        wp::float32 adj_115 = {};
        wp::float32 adj_116 = {};
        bool adj_117 = {};
        bool adj_118 = {};
        bool adj_119 = {};
        wp::float32 adj_120 = {};
        bool adj_121 = {};
        bool adj_122 = {};
        bool adj_123 = {};
        wp::float32 adj_124 = {};
        wp::vec_t<3,wp::float32> adj_125 = {};
        wp::vec_t<3,wp::float32> adj_126 = {};
        wp::vec_t<3,wp::float32> adj_127 = {};
        wp::vec_t<3,wp::float32> adj_128 = {};
        wp::float32 adj_129 = {};
        bool adj_130 = {};
        bool adj_131 = {};
        bool adj_132 = {};
        wp::float32 adj_133 = {};
        wp::float32 adj_134 = {};
        wp::float32 adj_135 = {};
        wp::float32 adj_136 = {};
        wp::float32 adj_137 = {};
        bool adj_138 = {};
        wp::vec_t<3,wp::float32> adj_139 = {};
        wp::vec_t<3,wp::float32> adj_140 = {};
        wp::vec_t<3,wp::float32> adj_141 = {};
        wp::vec_t<3,wp::float32> adj_142 = {};
        wp::vec_t<3,wp::float32> adj_143 = {};
        wp::vec_t<3,wp::float32> adj_144 = {};
        wp::float32 adj_145 = {};
        wp::float32 adj_146 = {};
        wp::float32 adj_147 = {};
        wp::float32 adj_148 = {};
        wp::float32 adj_149 = {};
        wp::float32 adj_150 = {};
        wp::float32 adj_151 = {};
        wp::float32 adj_152 = {};
        wp::float32 adj_153 = {};
        wp::float32 adj_154 = {};
        wp::float32 adj_155 = {};
        bool adj_156 = {};
        wp::float32 adj_157 = {};
        wp::float32 adj_158 = {};
        wp::float32 adj_159 = {};
        wp::float32 adj_160 = {};
        wp::float32 adj_161 = {};
        wp::float32 adj_162 = {};
        wp::float32 adj_163 = {};
        wp::float32 adj_164 = {};
        wp::vec_t<3,wp::float32> adj_165 = {};
        wp::vec_t<3,wp::float32> adj_166 = {};
        wp::float32 adj_167 = {};
        wp::vec_t<3,wp::float32> adj_168 = {};
        wp::vec_t<3,wp::float32> adj_169 = {};
        wp::float32 adj_170 = {};
        wp::vec_t<3,wp::float32> adj_171 = {};
        wp::vec_t<3,wp::float32> adj_172 = {};
        wp::float32 adj_173 = {};
        wp::vec_t<3,wp::float32> adj_174 = {};
        wp::vec_t<3,wp::float32> adj_175 = {};
        wp::vec_t<3,wp::float32> adj_176 = {};
        wp::vec_t<3,wp::float32> adj_177 = {};
        wp::vec_t<3,wp::float32> adj_178 = {};
        wp::vec_t<3,wp::float32> adj_179 = {};
        wp::vec_t<3,wp::float32> adj_180 = {};
        wp::vec_t<3,wp::float32> adj_181 = {};
        wp::vec_t<3,wp::float32> adj_182 = {};
        wp::vec_t<3,wp::float32> adj_183 = {};
        wp::vec_t<3,wp::float32> adj_184 = {};
        wp::vec_t<3,wp::float32> adj_185 = {};
        wp::float32 adj_186 = {};
        wp::vec_t<6,wp::float32> adj_187 = {};
        wp::uint8 adj_188 = {};
        wp::uint8 adj_189 = {};
        wp::uint8 adj_190 = {};
        wp::vec_t<3,wp::uint8> adj_191 = {};
        wp::mat_t<3,3,wp::float32> adj_192 = {};
        bool adj_193 = {};
        wp::vec_t<3,wp::float32> adj_194 = {};
        wp::vec_t<3,wp::float32> adj_195 = {};
        wp::vec_t<3,wp::float32> adj_196 = {};
        wp::float32 adj_197 = {};
        wp::float32 adj_198 = {};
        wp::vec_t<3,wp::float32> adj_199 = {};
        wp::float32 adj_200 = {};
        wp::float32 adj_201 = {};
        wp::vec_t<3,wp::float32> adj_202 = {};
        wp::vec_t<3,wp::float32> adj_203 = {};
        wp::vec_t<3,wp::float32> adj_204 = {};
        wp::vec_t<6,wp::float32> adj_205 = {};
        wp::uint8 adj_206 = {};
        wp::uint8 adj_207 = {};
        wp::uint8 adj_208 = {};
        wp::int32 adj_209 = {};
        bool adj_210 = {};
        wp::float32 adj_211 = {};
        wp::float32 adj_212 = {};
        wp::float32 adj_213 = {};
        wp::float32 adj_214 = {};
        wp::float32 adj_215 = {};
        wp::float32 adj_216 = {};
        wp::float32 adj_217 = {};
        wp::float32 adj_218 = {};
        wp::float32 adj_219 = {};
        wp::vec_t<3,wp::uint8> adj_220 = {};
        wp::mat_t<3,3,wp::float32> adj_221 = {};
        wp::float32 adj_222 = {};
        wp::float32 adj_223 = {};
        wp::float32 adj_224 = {};
        wp::vec_t<3,wp::uint8> adj_225 = {};
        wp::mat_t<3,3,wp::float32> adj_226 = {};
        wp::float32 adj_227 = {};
        wp::float32 adj_228 = {};
        wp::vec_t<6,wp::float32> adj_229 = {};
        wp::vec_t<3,wp::uint8> adj_230 = {};
        wp::mat_t<3,3,wp::float32> adj_231 = {};
        bool adj_232 = {};
        wp::int32 adj_233 = {};
        wp::vec_t<3,wp::float32> adj_234 = {};
        wp::vec_t<3,wp::float32> adj_235 = {};
        wp::vec_t<3,wp::float32> adj_236 = {};
        wp::float32 adj_237 = {};
        wp::float32 adj_238 = {};
        wp::float32 adj_239 = {};
        wp::float32 adj_240 = {};
        wp::float32 adj_241 = {};
        wp::float32 adj_242 = {};
        wp::vec_t<6,wp::float32> adj_243 = {};
        wp::uint8 adj_244 = {};
        wp::uint8 adj_245 = {};
        wp::uint8 adj_246 = {};
        bool adj_247 = {};
        wp::float32 adj_248 = {};
        wp::float32 adj_249 = {};
        wp::float32 adj_250 = {};
        wp::float32 adj_251 = {};
        wp::float32 adj_252 = {};
        wp::float32 adj_253 = {};
        wp::float32 adj_254 = {};
        wp::float32 adj_255 = {};
        wp::float32 adj_256 = {};
        wp::vec_t<3,wp::uint8> adj_257 = {};
        wp::mat_t<3,3,wp::float32> adj_258 = {};
        wp::float32 adj_259 = {};
        wp::float32 adj_260 = {};
        wp::float32 adj_261 = {};
        wp::vec_t<3,wp::uint8> adj_262 = {};
        wp::mat_t<3,3,wp::float32> adj_263 = {};
        wp::float32 adj_264 = {};
        wp::float32 adj_265 = {};
        wp::float32 adj_266 = {};
        wp::float32 adj_267 = {};
        wp::float32 adj_268 = {};
        wp::float32 adj_269 = {};
        wp::vec_t<6,wp::float32> adj_270 = {};
        wp::vec_t<3,wp::uint8> adj_271 = {};
        wp::mat_t<3,3,wp::float32> adj_272 = {};
        wp::vec_t<3,wp::float32> adj_273 = {};
        wp::uint8 adj_274 = {};
        wp::float32 adj_275 = {};
        wp::float32 adj_276 = {};
        wp::int32 adj_277 = {};
        bool adj_278 = {};
        wp::int32 adj_279 = {};
        wp::vec_t<3,wp::float32> adj_280 = {};
        wp::vec_t<3,wp::float32> adj_281 = {};
        wp::vec_t<3,wp::float32> adj_282 = {};
        wp::float32 adj_283 = {};
        wp::float32 adj_284 = {};
        wp::float32 adj_285 = {};
        wp::float32 adj_286 = {};
        wp::float32 adj_287 = {};
        wp::float32 adj_288 = {};
        wp::vec_t<6,wp::float32> adj_289 = {};
        wp::uint8 adj_290 = {};
        wp::uint8 adj_291 = {};
        wp::uint8 adj_292 = {};
        bool adj_293 = {};
        wp::float32 adj_294 = {};
        wp::float32 adj_295 = {};
        wp::float32 adj_296 = {};
        wp::float32 adj_297 = {};
        wp::float32 adj_298 = {};
        wp::float32 adj_299 = {};
        wp::float32 adj_300 = {};
        wp::float32 adj_301 = {};
        wp::float32 adj_302 = {};
        wp::vec_t<3,wp::uint8> adj_303 = {};
        wp::mat_t<3,3,wp::float32> adj_304 = {};
        wp::float32 adj_305 = {};
        wp::float32 adj_306 = {};
        wp::float32 adj_307 = {};
        wp::vec_t<3,wp::uint8> adj_308 = {};
        wp::mat_t<3,3,wp::float32> adj_309 = {};
        wp::float32 adj_310 = {};
        wp::float32 adj_311 = {};
        wp::float32 adj_312 = {};
        wp::float32 adj_313 = {};
        wp::float32 adj_314 = {};
        wp::float32 adj_315 = {};
        wp::vec_t<6,wp::float32> adj_316 = {};
        wp::vec_t<3,wp::uint8> adj_317 = {};
        wp::mat_t<3,3,wp::float32> adj_318 = {};
        wp::vec_t<3,wp::float32> adj_319 = {};
        wp::uint8 adj_320 = {};
        wp::float32 adj_321 = {};
        wp::float32 adj_322 = {};
        wp::int32 adj_323 = {};
        wp::vec_t<3,wp::float32> adj_324 = {};
        wp::vec_t<3,wp::float32> adj_325 = {};
        wp::vec_t<3,wp::float32> adj_326 = {};
        bool adj_327 = {};
        wp::vec_t<3,wp::float32> adj_328 = {};
        wp::vec_t<3,wp::float32> adj_329 = {};
        wp::vec_t<3,wp::float32> adj_330 = {};
        wp::vec_t<3,wp::float32> adj_331 = {};
        wp::quat_t<wp::float32> adj_332 = {};
        wp::mat_t<3,3,wp::float32> adj_333 = {};
        wp::vec_t<3,wp::float32> adj_334 = {};
        wp::vec_t<3,wp::float32> adj_335 = {};
        wp::vec_t<3,wp::float32> adj_336 = {};
        wp::int32 adj_337 = {};
        wp::int32 adj_338 = {};
        wp::float32 adj_339 = {};
        wp::uint8 adj_340 = {};
        wp::float32 adj_341 = {};
        wp::float32 adj_342 = {};
        wp::float32 adj_343 = {};
        wp::vec_t<3,wp::float32> adj_344 = {};
        wp::vec_t<3,wp::float32> adj_345 = {};
        wp::vec_t<3,wp::float32> adj_346 = {};
        wp::vec_t<3,wp::float32> adj_347 = {};
        wp::vec_t<3,wp::float32> adj_348 = {};
        wp::float32 adj_349 = {};
        wp::float32 adj_350 = {};
        wp::float32 adj_351 = {};
        wp::float32 adj_352 = {};
        wp::float32 adj_353 = {};
        wp::float32 adj_354 = {};
        wp::float32 adj_355 = {};
        wp::float32 adj_356 = {};
        wp::float32 adj_357 = {};
        wp::float32 adj_358 = {};
        bool adj_359 = {};
        wp::float32 adj_360 = {};
        wp::float32 adj_361 = {};
        wp::float32 adj_362 = {};
        wp::float32 adj_363 = {};
        bool adj_364 = {};
        wp::float32 adj_365 = {};
        wp::float32 adj_366 = {};
        wp::float32 adj_367 = {};
        wp::float32 adj_368 = {};
        wp::float32 adj_369 = {};
        wp::int32 adj_370 = {};
        bool adj_371 = {};
        wp::float32 adj_372 = {};
        wp::float32 adj_373 = {};
        bool adj_374 = {};
        wp::float32 adj_375 = {};
        wp::float32 adj_376 = {};
        wp::float32 adj_377 = {};
        wp::float32 adj_378 = {};
        wp::float32 adj_379 = {};
        wp::float32 adj_380 = {};
        wp::float32 adj_381 = {};
        wp::float32 adj_382 = {};
        wp::float32 adj_383 = {};
        wp::float32 adj_384 = {};
        wp::int32 adj_385 = {};
        bool adj_386 = {};
        wp::float32 adj_387 = {};
        bool adj_388 = {};
        wp::float32 adj_389 = {};
        wp::float32 adj_390 = {};
        wp::float32 adj_391 = {};
        wp::float32 adj_392 = {};
        wp::float32 adj_393 = {};
        wp::float32 adj_394 = {};
        wp::float32 adj_395 = {};
        wp::float32 adj_396 = {};
        wp::float32 adj_397 = {};
        wp::float32 adj_398 = {};
        wp::float32 adj_399 = {};
        wp::float32 adj_400 = {};
        wp::float32 adj_401 = {};
        wp::float32 adj_402 = {};
        wp::float32 adj_403 = {};
        wp::float32 adj_404 = {};
        wp::float32 adj_405 = {};
        wp::float32 adj_406 = {};
        wp::float32 adj_407 = {};
        wp::float32 adj_408 = {};
        wp::float32 adj_409 = {};
        wp::float32 adj_410 = {};
        bool adj_411 = {};
        wp::float32 adj_412 = {};
        wp::float32 adj_413 = {};
        wp::vec_t<3,wp::float32> adj_414 = {};
        wp::vec_t<3,wp::float32> adj_415 = {};
        wp::float32 adj_416 = {};
        wp::vec_t<3,wp::float32> adj_417 = {};
        wp::vec_t<3,wp::float32> adj_418 = {};
        wp::float32 adj_419 = {};
        wp::vec_t<3,wp::float32> adj_420 = {};
        wp::vec_t<3,wp::float32> adj_421 = {};
        wp::float32 adj_422 = {};
        wp::vec_t<3,wp::float32> adj_423 = {};
        wp::vec_t<3,wp::float32> adj_424 = {};
        wp::vec_t<3,wp::float32> adj_425 = {};
        wp::vec_t<3,wp::float32> adj_426 = {};
        wp::vec_t<3,wp::float32> adj_427 = {};
        wp::vec_t<3,wp::float32> adj_428 = {};
        wp::float32 adj_429 = {};
        wp::int32 adj_430 = {};
        wp::int32 adj_431 = {};
        wp::float32 adj_432 = {};
        wp::uint8 adj_433 = {};
        wp::float32 adj_434 = {};
        wp::float32 adj_435 = {};
        wp::float32 adj_436 = {};
        wp::vec_t<3,wp::float32> adj_437 = {};
        wp::vec_t<3,wp::float32> adj_438 = {};
        wp::vec_t<3,wp::float32> adj_439 = {};
        wp::vec_t<3,wp::float32> adj_440 = {};
        wp::vec_t<3,wp::float32> adj_441 = {};
        wp::float32 adj_442 = {};
        wp::float32 adj_443 = {};
        wp::float32 adj_444 = {};
        wp::float32 adj_445 = {};
        wp::float32 adj_446 = {};
        wp::float32 adj_447 = {};
        wp::float32 adj_448 = {};
        wp::float32 adj_449 = {};
        wp::float32 adj_450 = {};
        wp::float32 adj_451 = {};
        bool adj_452 = {};
        wp::float32 adj_453 = {};
        wp::float32 adj_454 = {};
        wp::float32 adj_455 = {};
        wp::float32 adj_456 = {};
        bool adj_457 = {};
        wp::float32 adj_458 = {};
        wp::float32 adj_459 = {};
        wp::float32 adj_460 = {};
        wp::float32 adj_461 = {};
        wp::float32 adj_462 = {};
        bool adj_463 = {};
        wp::float32 adj_464 = {};
        wp::float32 adj_465 = {};
        bool adj_466 = {};
        wp::float32 adj_467 = {};
        wp::float32 adj_468 = {};
        wp::float32 adj_469 = {};
        wp::float32 adj_470 = {};
        wp::float32 adj_471 = {};
        wp::float32 adj_472 = {};
        wp::float32 adj_473 = {};
        wp::float32 adj_474 = {};
        wp::float32 adj_475 = {};
        wp::float32 adj_476 = {};
        bool adj_477 = {};
        wp::float32 adj_478 = {};
        bool adj_479 = {};
        wp::float32 adj_480 = {};
        wp::float32 adj_481 = {};
        wp::float32 adj_482 = {};
        wp::float32 adj_483 = {};
        wp::float32 adj_484 = {};
        wp::float32 adj_485 = {};
        wp::float32 adj_486 = {};
        wp::float32 adj_487 = {};
        wp::float32 adj_488 = {};
        wp::float32 adj_489 = {};
        wp::float32 adj_490 = {};
        wp::float32 adj_491 = {};
        wp::float32 adj_492 = {};
        wp::float32 adj_493 = {};
        wp::float32 adj_494 = {};
        wp::float32 adj_495 = {};
        wp::float32 adj_496 = {};
        wp::float32 adj_497 = {};
        wp::float32 adj_498 = {};
        wp::float32 adj_499 = {};
        wp::float32 adj_500 = {};
        wp::float32 adj_501 = {};
        bool adj_502 = {};
        wp::float32 adj_503 = {};
        wp::float32 adj_504 = {};
        wp::vec_t<3,wp::float32> adj_505 = {};
        wp::vec_t<3,wp::float32> adj_506 = {};
        wp::float32 adj_507 = {};
        wp::vec_t<3,wp::float32> adj_508 = {};
        wp::vec_t<3,wp::float32> adj_509 = {};
        wp::float32 adj_510 = {};
        wp::vec_t<3,wp::float32> adj_511 = {};
        wp::vec_t<3,wp::float32> adj_512 = {};
        wp::float32 adj_513 = {};
        wp::vec_t<3,wp::float32> adj_514 = {};
        wp::vec_t<3,wp::float32> adj_515 = {};
        wp::vec_t<3,wp::float32> adj_516 = {};
        wp::vec_t<3,wp::float32> adj_517 = {};
        wp::vec_t<3,wp::float32> adj_518 = {};
        wp::vec_t<3,wp::float32> adj_519 = {};
        wp::float32 adj_520 = {};
        wp::int32 adj_521 = {};
        wp::int32 adj_522 = {};
        wp::float32 adj_523 = {};
        wp::uint8 adj_524 = {};
        wp::float32 adj_525 = {};
        wp::float32 adj_526 = {};
        wp::float32 adj_527 = {};
        wp::vec_t<3,wp::float32> adj_528 = {};
        wp::vec_t<3,wp::float32> adj_529 = {};
        wp::vec_t<3,wp::float32> adj_530 = {};
        wp::vec_t<3,wp::float32> adj_531 = {};
        wp::vec_t<3,wp::float32> adj_532 = {};
        wp::float32 adj_533 = {};
        wp::float32 adj_534 = {};
        wp::float32 adj_535 = {};
        wp::float32 adj_536 = {};
        wp::float32 adj_537 = {};
        wp::float32 adj_538 = {};
        wp::float32 adj_539 = {};
        wp::float32 adj_540 = {};
        wp::float32 adj_541 = {};
        wp::float32 adj_542 = {};
        bool adj_543 = {};
        wp::float32 adj_544 = {};
        wp::float32 adj_545 = {};
        wp::float32 adj_546 = {};
        wp::float32 adj_547 = {};
        bool adj_548 = {};
        wp::float32 adj_549 = {};
        wp::float32 adj_550 = {};
        wp::float32 adj_551 = {};
        wp::float32 adj_552 = {};
        wp::float32 adj_553 = {};
        bool adj_554 = {};
        wp::float32 adj_555 = {};
        wp::float32 adj_556 = {};
        bool adj_557 = {};
        wp::float32 adj_558 = {};
        wp::float32 adj_559 = {};
        wp::float32 adj_560 = {};
        wp::float32 adj_561 = {};
        wp::float32 adj_562 = {};
        wp::float32 adj_563 = {};
        wp::float32 adj_564 = {};
        wp::float32 adj_565 = {};
        wp::float32 adj_566 = {};
        wp::float32 adj_567 = {};
        bool adj_568 = {};
        wp::float32 adj_569 = {};
        bool adj_570 = {};
        wp::float32 adj_571 = {};
        wp::float32 adj_572 = {};
        wp::float32 adj_573 = {};
        wp::float32 adj_574 = {};
        wp::float32 adj_575 = {};
        wp::float32 adj_576 = {};
        wp::float32 adj_577 = {};
        wp::float32 adj_578 = {};
        wp::float32 adj_579 = {};
        wp::float32 adj_580 = {};
        wp::float32 adj_581 = {};
        wp::float32 adj_582 = {};
        wp::float32 adj_583 = {};
        wp::float32 adj_584 = {};
        wp::float32 adj_585 = {};
        wp::float32 adj_586 = {};
        wp::float32 adj_587 = {};
        wp::float32 adj_588 = {};
        wp::float32 adj_589 = {};
        wp::float32 adj_590 = {};
        wp::float32 adj_591 = {};
        wp::float32 adj_592 = {};
        bool adj_593 = {};
        wp::float32 adj_594 = {};
        wp::float32 adj_595 = {};
        wp::vec_t<3,wp::float32> adj_596 = {};
        wp::vec_t<3,wp::float32> adj_597 = {};
        wp::float32 adj_598 = {};
        wp::vec_t<3,wp::float32> adj_599 = {};
        wp::vec_t<3,wp::float32> adj_600 = {};
        wp::float32 adj_601 = {};
        wp::vec_t<3,wp::float32> adj_602 = {};
        wp::vec_t<3,wp::float32> adj_603 = {};
        wp::float32 adj_604 = {};
        wp::vec_t<3,wp::float32> adj_605 = {};
        wp::vec_t<3,wp::float32> adj_606 = {};
        wp::vec_t<3,wp::float32> adj_607 = {};
        wp::vec_t<3,wp::float32> adj_608 = {};
        wp::vec_t<3,wp::float32> adj_609 = {};
        wp::vec_t<3,wp::float32> adj_610 = {};
        wp::float32 adj_611 = {};
        wp::vec_t<3,wp::float32> adj_612 = {};
        wp::vec_t<3,wp::float32> adj_613 = {};
        wp::vec_t<3,wp::float32> adj_614 = {};
        wp::vec_t<3,wp::float32> adj_615 = {};
        wp::vec_t<3,wp::float32> adj_616 = {};
        wp::vec_t<3,wp::float32> adj_617 = {};
        wp::float32 adj_618 = {};
        wp::float32 adj_619 = {};
        wp::float32 adj_620 = {};
        wp::vec_t<3,wp::float32> adj_621 = {};
        wp::vec_t<3,wp::float32> adj_622 = {};
        wp::vec_t<3,wp::float32> adj_623 = {};
        wp::vec_t<3,wp::float32> adj_624 = {};
        wp::float32 adj_625 = {};
        wp::float32 adj_626 = {};
        wp::float32 adj_627 = {};
        wp::float32 adj_628 = {};
        wp::float32 adj_629 = {};
        wp::int32 adj_630 = {};
        bool adj_631 = {};
        wp::int32 adj_632 = {};
        bool adj_633 = {};
        wp::int32 adj_634 = {};
        bool adj_635 = {};
        wp::int32 adj_636 = {};
        bool adj_637 = {};
        wp::int32 adj_638 = {};
        bool adj_639 = {};
        wp::int32 adj_640 = {};
        bool adj_641 = {};
        bool adj_642 = {};
        wp::quat_t<wp::float32> adj_643 = {};
        wp::quat_t<wp::float32> adj_644 = {};
        wp::float32 adj_645 = {};
        bool adj_646 = {};
        wp::float32 adj_647 = {};
        wp::quat_t<wp::float32> adj_648 = {};
        wp::quat_t<wp::float32> adj_649 = {};
        wp::quat_t<wp::float32> adj_650 = {};
        wp::quat_t<wp::float32> adj_651 = {};
        wp::float32 adj_652 = {};
        wp::int32 adj_653 = {};
        wp::float32 adj_654 = {};
        wp::quat_t<wp::float32> adj_655 = {};
        wp::quat_t<wp::float32> adj_656 = {};
        wp::quat_t<wp::float32> adj_657 = {};
        wp::quat_t<wp::float32> adj_658 = {};
        wp::float32 adj_659 = {};
        wp::float32 adj_660 = {};
        wp::float32 adj_661 = {};
        wp::float32 adj_662 = {};
        wp::float32 adj_663 = {};
        wp::float32 adj_664 = {};
        wp::float32 adj_665 = {};
        wp::float32 adj_666 = {};
        wp::float32 adj_667 = {};
        wp::float32 adj_668 = {};
        wp::float32 adj_669 = {};
        wp::float32 adj_670 = {};
        wp::float32 adj_671 = {};
        wp::float32 adj_672 = {};
        wp::float32 adj_673 = {};
        wp::float32 adj_674 = {};
        wp::float32 adj_675 = {};
        wp::float32 adj_676 = {};
        wp::float32 adj_677 = {};
        wp::float32 adj_678 = {};
        wp::float32 adj_679 = {};
        wp::float32 adj_680 = {};
        wp::float32 adj_681 = {};
        wp::float32 adj_682 = {};
        wp::float32 adj_683 = {};
        wp::float32 adj_684 = {};
        wp::float32 adj_685 = {};
        wp::float32 adj_686 = {};
        wp::float32 adj_687 = {};
        wp::quat_t<wp::float32> adj_688 = {};
        wp::float32 adj_689 = {};
        wp::float32 adj_690 = {};
        wp::float32 adj_691 = {};
        wp::float32 adj_692 = {};
        wp::float32 adj_693 = {};
        wp::float32 adj_694 = {};
        wp::float32 adj_695 = {};
        wp::float32 adj_696 = {};
        wp::float32 adj_697 = {};
        wp::float32 adj_698 = {};
        wp::float32 adj_699 = {};
        wp::float32 adj_700 = {};
        wp::float32 adj_701 = {};
        wp::float32 adj_702 = {};
        wp::float32 adj_703 = {};
        wp::float32 adj_704 = {};
        wp::float32 adj_705 = {};
        wp::float32 adj_706 = {};
        wp::float32 adj_707 = {};
        wp::float32 adj_708 = {};
        wp::float32 adj_709 = {};
        wp::float32 adj_710 = {};
        wp::float32 adj_711 = {};
        wp::float32 adj_712 = {};
        wp::float32 adj_713 = {};
        wp::float32 adj_714 = {};
        wp::quat_t<wp::float32> adj_715 = {};
        wp::float32 adj_716 = {};
        wp::float32 adj_717 = {};
        wp::float32 adj_718 = {};
        wp::float32 adj_719 = {};
        wp::float32 adj_720 = {};
        wp::float32 adj_721 = {};
        wp::float32 adj_722 = {};
        wp::float32 adj_723 = {};
        wp::float32 adj_724 = {};
        wp::float32 adj_725 = {};
        wp::float32 adj_726 = {};
        wp::float32 adj_727 = {};
        wp::float32 adj_728 = {};
        wp::float32 adj_729 = {};
        wp::float32 adj_730 = {};
        wp::float32 adj_731 = {};
        wp::float32 adj_732 = {};
        wp::float32 adj_733 = {};
        wp::float32 adj_734 = {};
        wp::float32 adj_735 = {};
        wp::float32 adj_736 = {};
        wp::float32 adj_737 = {};
        wp::float32 adj_738 = {};
        wp::float32 adj_739 = {};
        wp::quat_t<wp::float32> adj_740 = {};
        wp::float32 adj_741 = {};
        wp::float32 adj_742 = {};
        wp::float32 adj_743 = {};
        wp::quat_t<wp::float32> adj_744 = {};
        wp::float32 adj_745 = {};
        wp::float32 adj_746 = {};
        wp::float32 adj_747 = {};
        wp::float32 adj_748 = {};
        wp::float32 adj_749 = {};
        bool adj_750 = {};
        wp::float32 adj_751 = {};
        wp::float32 adj_752 = {};
        wp::float32 adj_753 = {};
        wp::float32 adj_754 = {};
        wp::float32 adj_755 = {};
        wp::float32 adj_756 = {};
        wp::float32 adj_757 = {};
        wp::float32 adj_758 = {};
        wp::float32 adj_759 = {};
        wp::float32 adj_760 = {};
        wp::float32 adj_761 = {};
        wp::float32 adj_762 = {};
        wp::float32 adj_763 = {};
        wp::quat_t<wp::float32> adj_764 = {};
        wp::quat_t<wp::float32> adj_765 = {};
        wp::float32 adj_766 = {};
        wp::float32 adj_767 = {};
        wp::float32 adj_768 = {};
        wp::quat_t<wp::float32> adj_769 = {};
        wp::quat_t<wp::float32> adj_770 = {};
        wp::vec_t<3,wp::float32> adj_771 = {};
        wp::float32 adj_772 = {};
        wp::float32 adj_773 = {};
        wp::float32 adj_774 = {};
        wp::vec_t<3,wp::float32> adj_775 = {};
        wp::float32 adj_776 = {};
        wp::float32 adj_777 = {};
        wp::float32 adj_778 = {};
        wp::vec_t<3,wp::float32> adj_779 = {};
        wp::float32 adj_780 = {};
        wp::float32 adj_781 = {};
        wp::float32 adj_782 = {};
        wp::vec_t<3,wp::float32> adj_783 = {};
        wp::float32 adj_784 = {};
        wp::float32 adj_785 = {};
        wp::float32 adj_786 = {};
        wp::vec_t<3,wp::float32> adj_787 = {};
        wp::float32 adj_788 = {};
        wp::vec_t<6,wp::float32> adj_789 = {};
        wp::uint8 adj_790 = {};
        wp::uint8 adj_791 = {};
        wp::uint8 adj_792 = {};
        wp::vec_t<3,wp::uint8> adj_793 = {};
        wp::mat_t<3,3,wp::float32> adj_794 = {};
        bool adj_795 = {};
        wp::int32 adj_796 = {};
        wp::vec_t<3,wp::float32> adj_797 = {};
        wp::vec_t<3,wp::float32> adj_798 = {};
        wp::vec_t<3,wp::float32> adj_799 = {};
        wp::float32 adj_800 = {};
        wp::float32 adj_801 = {};
        wp::vec_t<3,wp::float32> adj_802 = {};
        wp::float32 adj_803 = {};
        wp::float32 adj_804 = {};
        wp::vec_t<3,wp::float32> adj_805 = {};
        wp::vec_t<3,wp::float32> adj_806 = {};
        wp::vec_t<3,wp::float32> adj_807 = {};
        wp::vec_t<6,wp::float32> adj_808 = {};
        wp::uint8 adj_809 = {};
        wp::uint8 adj_810 = {};
        wp::uint8 adj_811 = {};
        bool adj_812 = {};
        wp::float32 adj_813 = {};
        wp::float32 adj_814 = {};
        wp::float32 adj_815 = {};
        wp::float32 adj_816 = {};
        wp::float32 adj_817 = {};
        wp::float32 adj_818 = {};
        wp::float32 adj_819 = {};
        wp::float32 adj_820 = {};
        wp::float32 adj_821 = {};
        wp::vec_t<3,wp::uint8> adj_822 = {};
        wp::mat_t<3,3,wp::float32> adj_823 = {};
        wp::float32 adj_824 = {};
        wp::float32 adj_825 = {};
        wp::float32 adj_826 = {};
        wp::vec_t<3,wp::uint8> adj_827 = {};
        wp::mat_t<3,3,wp::float32> adj_828 = {};
        wp::float32 adj_829 = {};
        wp::float32 adj_830 = {};
        wp::float32 adj_831 = {};
        wp::float32 adj_832 = {};
        wp::vec_t<6,wp::float32> adj_833 = {};
        wp::vec_t<3,wp::uint8> adj_834 = {};
        wp::mat_t<3,3,wp::float32> adj_835 = {};
        wp::vec_t<3,wp::float32> adj_836 = {};
        wp::vec_t<3,wp::float32> adj_837 = {};
        wp::vec_t<3,wp::float32> adj_838 = {};
        wp::uint8 adj_839 = {};
        wp::float32 adj_840 = {};
        wp::float32 adj_841 = {};
        wp::int32 adj_842 = {};
        bool adj_843 = {};
        wp::int32 adj_844 = {};
        wp::int32 adj_845 = {};
        wp::vec_t<3,wp::float32> adj_846 = {};
        wp::vec_t<3,wp::float32> adj_847 = {};
        wp::vec_t<3,wp::float32> adj_848 = {};
        wp::float32 adj_849 = {};
        wp::float32 adj_850 = {};
        wp::float32 adj_851 = {};
        wp::float32 adj_852 = {};
        wp::float32 adj_853 = {};
        wp::float32 adj_854 = {};
        wp::vec_t<6,wp::float32> adj_855 = {};
        wp::uint8 adj_856 = {};
        wp::uint8 adj_857 = {};
        wp::uint8 adj_858 = {};
        bool adj_859 = {};
        wp::float32 adj_860 = {};
        wp::float32 adj_861 = {};
        wp::float32 adj_862 = {};
        wp::float32 adj_863 = {};
        wp::float32 adj_864 = {};
        wp::float32 adj_865 = {};
        wp::float32 adj_866 = {};
        wp::float32 adj_867 = {};
        wp::float32 adj_868 = {};
        wp::vec_t<3,wp::uint8> adj_869 = {};
        wp::mat_t<3,3,wp::float32> adj_870 = {};
        wp::float32 adj_871 = {};
        wp::float32 adj_872 = {};
        wp::float32 adj_873 = {};
        wp::vec_t<3,wp::uint8> adj_874 = {};
        wp::mat_t<3,3,wp::float32> adj_875 = {};
        wp::float32 adj_876 = {};
        wp::float32 adj_877 = {};
        wp::float32 adj_878 = {};
        wp::float32 adj_879 = {};
        wp::float32 adj_880 = {};
        wp::float32 adj_881 = {};
        wp::vec_t<6,wp::float32> adj_882 = {};
        wp::vec_t<3,wp::uint8> adj_883 = {};
        wp::mat_t<3,3,wp::float32> adj_884 = {};
        wp::vec_t<3,wp::float32> adj_885 = {};
        wp::uint8 adj_886 = {};
        wp::float32 adj_887 = {};
        wp::float32 adj_888 = {};
        wp::int32 adj_889 = {};
        bool adj_890 = {};
        wp::int32 adj_891 = {};
        wp::int32 adj_892 = {};
        wp::vec_t<3,wp::float32> adj_893 = {};
        wp::vec_t<3,wp::float32> adj_894 = {};
        wp::vec_t<3,wp::float32> adj_895 = {};
        wp::float32 adj_896 = {};
        wp::float32 adj_897 = {};
        wp::float32 adj_898 = {};
        wp::float32 adj_899 = {};
        wp::float32 adj_900 = {};
        wp::float32 adj_901 = {};
        wp::vec_t<6,wp::float32> adj_902 = {};
        wp::uint8 adj_903 = {};
        wp::uint8 adj_904 = {};
        wp::uint8 adj_905 = {};
        bool adj_906 = {};
        wp::float32 adj_907 = {};
        wp::float32 adj_908 = {};
        wp::float32 adj_909 = {};
        wp::float32 adj_910 = {};
        wp::float32 adj_911 = {};
        wp::float32 adj_912 = {};
        wp::float32 adj_913 = {};
        wp::float32 adj_914 = {};
        wp::float32 adj_915 = {};
        wp::vec_t<3,wp::uint8> adj_916 = {};
        wp::mat_t<3,3,wp::float32> adj_917 = {};
        wp::float32 adj_918 = {};
        wp::float32 adj_919 = {};
        wp::float32 adj_920 = {};
        wp::vec_t<3,wp::uint8> adj_921 = {};
        wp::mat_t<3,3,wp::float32> adj_922 = {};
        wp::float32 adj_923 = {};
        wp::float32 adj_924 = {};
        wp::float32 adj_925 = {};
        wp::float32 adj_926 = {};
        wp::float32 adj_927 = {};
        wp::float32 adj_928 = {};
        wp::vec_t<6,wp::float32> adj_929 = {};
        wp::vec_t<3,wp::uint8> adj_930 = {};
        wp::mat_t<3,3,wp::float32> adj_931 = {};
        wp::vec_t<3,wp::float32> adj_932 = {};
        wp::uint8 adj_933 = {};
        wp::float32 adj_934 = {};
        wp::float32 adj_935 = {};
        wp::int32 adj_936 = {};
        wp::vec_t<3,wp::float32> adj_937 = {};
        wp::vec_t<3,wp::float32> adj_938 = {};
        wp::vec_t<3,wp::float32> adj_939 = {};
        bool adj_940 = {};
        wp::vec_t<3,wp::float32> adj_941 = {};
        wp::vec_t<3,wp::float32> adj_942 = {};
        wp::vec_t<3,wp::float32> adj_943 = {};
        wp::vec_t<3,wp::float32> adj_944 = {};
        wp::int32 adj_945 = {};
        wp::int32 adj_946 = {};
        wp::float32 adj_947 = {};
        wp::uint8 adj_948 = {};
        wp::float32 adj_949 = {};
        wp::float32 adj_950 = {};
        wp::float32 adj_951 = {};
        wp::float32 adj_952 = {};
        wp::quat_t<wp::float32> adj_953 = {};
        wp::float32 adj_954 = {};
        wp::quat_t<wp::float32> adj_955 = {};
        wp::quat_t<wp::float32> adj_956 = {};
        wp::quat_t<wp::float32> adj_957 = {};
        wp::quat_t<wp::float32> adj_958 = {};
        wp::float32 adj_959 = {};
        wp::float32 adj_960 = {};
        wp::float32 adj_961 = {};
        wp::vec_t<3,wp::float32> adj_962 = {};
        wp::vec_t<3,wp::float32> adj_963 = {};
        wp::float32 adj_964 = {};
        wp::float32 adj_965 = {};
        wp::float32 adj_966 = {};
        wp::float32 adj_967 = {};
        wp::float32 adj_968 = {};
        wp::float32 adj_969 = {};
        bool adj_970 = {};
        wp::float32 adj_971 = {};
        wp::float32 adj_972 = {};
        wp::float32 adj_973 = {};
        wp::float32 adj_974 = {};
        bool adj_975 = {};
        wp::float32 adj_976 = {};
        wp::float32 adj_977 = {};
        wp::float32 adj_978 = {};
        wp::float32 adj_979 = {};
        wp::float32 adj_980 = {};
        bool adj_981 = {};
        wp::float32 adj_982 = {};
        wp::float32 adj_983 = {};
        bool adj_984 = {};
        wp::float32 adj_985 = {};
        wp::float32 adj_986 = {};
        wp::float32 adj_987 = {};
        wp::float32 adj_988 = {};
        wp::float32 adj_989 = {};
        wp::float32 adj_990 = {};
        wp::float32 adj_991 = {};
        wp::float32 adj_992 = {};
        wp::float32 adj_993 = {};
        wp::float32 adj_994 = {};
        bool adj_995 = {};
        wp::float32 adj_996 = {};
        bool adj_997 = {};
        wp::float32 adj_998 = {};
        wp::float32 adj_999 = {};
        wp::float32 adj_1000 = {};
        wp::float32 adj_1001 = {};
        wp::float32 adj_1002 = {};
        wp::float32 adj_1003 = {};
        wp::float32 adj_1004 = {};
        wp::float32 adj_1005 = {};
        wp::float32 adj_1006 = {};
        wp::float32 adj_1007 = {};
        wp::float32 adj_1008 = {};
        wp::float32 adj_1009 = {};
        wp::float32 adj_1010 = {};
        wp::float32 adj_1011 = {};
        wp::float32 adj_1012 = {};
        wp::float32 adj_1013 = {};
        wp::float32 adj_1014 = {};
        wp::float32 adj_1015 = {};
        wp::float32 adj_1016 = {};
        wp::float32 adj_1017 = {};
        wp::float32 adj_1018 = {};
        wp::float32 adj_1019 = {};
        wp::float32 adj_1020 = {};
        wp::vec_t<3,wp::float32> adj_1021 = {};
        wp::vec_t<3,wp::float32> adj_1022 = {};
        wp::vec_t<3,wp::float32> adj_1023 = {};
        wp::vec_t<3,wp::float32> adj_1024 = {};
        wp::int32 adj_1025 = {};
        wp::int32 adj_1026 = {};
        wp::float32 adj_1027 = {};
        wp::uint8 adj_1028 = {};
        wp::float32 adj_1029 = {};
        wp::float32 adj_1030 = {};
        wp::float32 adj_1031 = {};
        wp::float32 adj_1032 = {};
        wp::quat_t<wp::float32> adj_1033 = {};
        wp::quat_t<wp::float32> adj_1034 = {};
        wp::quat_t<wp::float32> adj_1035 = {};
        wp::quat_t<wp::float32> adj_1036 = {};
        wp::quat_t<wp::float32> adj_1037 = {};
        wp::float32 adj_1038 = {};
        wp::float32 adj_1039 = {};
        wp::float32 adj_1040 = {};
        wp::vec_t<3,wp::float32> adj_1041 = {};
        wp::vec_t<3,wp::float32> adj_1042 = {};
        wp::float32 adj_1043 = {};
        wp::float32 adj_1044 = {};
        wp::float32 adj_1045 = {};
        wp::float32 adj_1046 = {};
        wp::float32 adj_1047 = {};
        wp::float32 adj_1048 = {};
        bool adj_1049 = {};
        wp::float32 adj_1050 = {};
        wp::float32 adj_1051 = {};
        wp::float32 adj_1052 = {};
        wp::float32 adj_1053 = {};
        bool adj_1054 = {};
        wp::float32 adj_1055 = {};
        wp::float32 adj_1056 = {};
        wp::float32 adj_1057 = {};
        wp::float32 adj_1058 = {};
        wp::float32 adj_1059 = {};
        bool adj_1060 = {};
        wp::float32 adj_1061 = {};
        wp::float32 adj_1062 = {};
        bool adj_1063 = {};
        wp::float32 adj_1064 = {};
        wp::float32 adj_1065 = {};
        wp::float32 adj_1066 = {};
        wp::float32 adj_1067 = {};
        wp::float32 adj_1068 = {};
        wp::float32 adj_1069 = {};
        wp::float32 adj_1070 = {};
        wp::float32 adj_1071 = {};
        wp::float32 adj_1072 = {};
        wp::float32 adj_1073 = {};
        bool adj_1074 = {};
        wp::float32 adj_1075 = {};
        bool adj_1076 = {};
        wp::float32 adj_1077 = {};
        wp::float32 adj_1078 = {};
        wp::float32 adj_1079 = {};
        wp::float32 adj_1080 = {};
        wp::float32 adj_1081 = {};
        wp::float32 adj_1082 = {};
        wp::float32 adj_1083 = {};
        wp::float32 adj_1084 = {};
        wp::float32 adj_1085 = {};
        wp::float32 adj_1086 = {};
        wp::float32 adj_1087 = {};
        wp::float32 adj_1088 = {};
        wp::float32 adj_1089 = {};
        wp::float32 adj_1090 = {};
        wp::float32 adj_1091 = {};
        wp::float32 adj_1092 = {};
        wp::float32 adj_1093 = {};
        wp::float32 adj_1094 = {};
        wp::float32 adj_1095 = {};
        wp::float32 adj_1096 = {};
        wp::float32 adj_1097 = {};
        wp::float32 adj_1098 = {};
        wp::float32 adj_1099 = {};
        wp::vec_t<3,wp::float32> adj_1100 = {};
        wp::vec_t<3,wp::float32> adj_1101 = {};
        wp::vec_t<3,wp::float32> adj_1102 = {};
        wp::vec_t<3,wp::float32> adj_1103 = {};
        wp::int32 adj_1104 = {};
        wp::int32 adj_1105 = {};
        wp::float32 adj_1106 = {};
        wp::uint8 adj_1107 = {};
        wp::float32 adj_1108 = {};
        wp::float32 adj_1109 = {};
        wp::float32 adj_1110 = {};
        wp::float32 adj_1111 = {};
        wp::quat_t<wp::float32> adj_1112 = {};
        wp::quat_t<wp::float32> adj_1113 = {};
        wp::quat_t<wp::float32> adj_1114 = {};
        wp::quat_t<wp::float32> adj_1115 = {};
        wp::quat_t<wp::float32> adj_1116 = {};
        wp::float32 adj_1117 = {};
        wp::float32 adj_1118 = {};
        wp::float32 adj_1119 = {};
        wp::vec_t<3,wp::float32> adj_1120 = {};
        wp::vec_t<3,wp::float32> adj_1121 = {};
        wp::float32 adj_1122 = {};
        wp::float32 adj_1123 = {};
        wp::float32 adj_1124 = {};
        wp::float32 adj_1125 = {};
        wp::float32 adj_1126 = {};
        wp::float32 adj_1127 = {};
        bool adj_1128 = {};
        wp::float32 adj_1129 = {};
        wp::float32 adj_1130 = {};
        wp::float32 adj_1131 = {};
        wp::float32 adj_1132 = {};
        bool adj_1133 = {};
        wp::float32 adj_1134 = {};
        wp::float32 adj_1135 = {};
        wp::float32 adj_1136 = {};
        wp::float32 adj_1137 = {};
        wp::float32 adj_1138 = {};
        bool adj_1139 = {};
        wp::float32 adj_1140 = {};
        wp::float32 adj_1141 = {};
        bool adj_1142 = {};
        wp::float32 adj_1143 = {};
        wp::float32 adj_1144 = {};
        wp::float32 adj_1145 = {};
        wp::float32 adj_1146 = {};
        wp::float32 adj_1147 = {};
        wp::float32 adj_1148 = {};
        wp::float32 adj_1149 = {};
        wp::float32 adj_1150 = {};
        wp::float32 adj_1151 = {};
        wp::float32 adj_1152 = {};
        bool adj_1153 = {};
        wp::float32 adj_1154 = {};
        bool adj_1155 = {};
        wp::float32 adj_1156 = {};
        wp::float32 adj_1157 = {};
        wp::float32 adj_1158 = {};
        wp::float32 adj_1159 = {};
        wp::float32 adj_1160 = {};
        wp::float32 adj_1161 = {};
        wp::float32 adj_1162 = {};
        wp::float32 adj_1163 = {};
        wp::float32 adj_1164 = {};
        wp::float32 adj_1165 = {};
        wp::float32 adj_1166 = {};
        wp::float32 adj_1167 = {};
        wp::float32 adj_1168 = {};
        wp::float32 adj_1169 = {};
        wp::float32 adj_1170 = {};
        wp::float32 adj_1171 = {};
        wp::float32 adj_1172 = {};
        wp::float32 adj_1173 = {};
        wp::float32 adj_1174 = {};
        wp::float32 adj_1175 = {};
        wp::float32 adj_1176 = {};
        wp::float32 adj_1177 = {};
        wp::float32 adj_1178 = {};
        wp::vec_t<3,wp::float32> adj_1179 = {};
        wp::vec_t<3,wp::float32> adj_1180 = {};
        wp::vec_t<3,wp::float32> adj_1181 = {};
        wp::vec_t<3,wp::float32> adj_1182 = {};
        wp::vec_t<3,wp::float32> adj_1183 = {};
        wp::vec_t<3,wp::float32> adj_1184 = {};
        wp::float32 adj_1185 = {};
        wp::float32 adj_1186 = {};
        wp::float32 adj_1187 = {};
        wp::float32 adj_1188 = {};
        wp::vec_t<3,wp::float32> adj_1189 = {};
        wp::vec_t<3,wp::float32> adj_1190 = {};
        wp::float32 adj_1191 = {};
        wp::float32 adj_1192 = {};
        wp::float32 adj_1193 = {};
        wp::float32 adj_1194 = {};
        wp::float32 adj_1195 = {};
        wp::float32 adj_1196 = {};
        wp::vec_t<6,wp::float32> adj_1197 = {};
        wp::vec_t<3,wp::uint8> adj_1198 = {};
        wp::mat_t<3,3,wp::float32> adj_1199 = {};
        wp::vec_t<3,wp::float32> adj_1200 = {};
        wp::vec_t<3,wp::float32> adj_1201 = {};
        wp::vec_t<3,wp::float32> adj_1202 = {};
        wp::uint8 adj_1203 = {};
        wp::float32 adj_1204 = {};
        wp::float32 adj_1205 = {};
        wp::int32 adj_1206 = {};
        wp::vec_t<3,wp::float32> adj_1207 = {};
        wp::vec_t<3,wp::float32> adj_1208 = {};
        wp::vec_t<3,wp::float32> adj_1209 = {};
        wp::vec_t<3,wp::float32> adj_1210 = {};
        wp::vec_t<3,wp::float32> adj_1211 = {};
        wp::int32 adj_1212 = {};
        wp::float32 adj_1213 = {};
        bool adj_1214 = {};
        wp::vec_t<6,wp::float32> adj_1215 = {};
        wp::vec_t<6,wp::float32> adj_1216 = {};
        bool adj_1217 = {};
        wp::vec_t<6,wp::float32> adj_1218 = {};
        wp::vec_t<6,wp::float32> adj_1219 = {};
        //---------
        // forward
        // def solve_body_joints(                                                                 <L 817>
        // tid = wp.tid()                                                                         <L 845>
        var_0 = builtin_tid1d();
        // type = joint_type[tid]                                                                 <L 846>
        var_1 = wp::address(var_joint_type, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // if joint_enabled[tid] == 0 or type == fs5Model.JOINT_FREE:                             <L 848>
        var_4 = wp::address(var_joint_enabled, var_0);
        var_7 = wp::load(var_4);
        var_6 = (var_7 == var_5);
        var_9 = (var_3 == var_8);
        var_10 = var_6 || var_9;
        if (var_10) {
            // return                                                                             <L 849>
            goto label0;
        }
        // id_c = joint_child[tid]                                                                <L 852>
        var_11 = wp::address(var_joint_child, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // id_p = joint_parent[tid]                                                               <L 853>
        var_14 = wp::address(var_joint_parent, var_0);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // X_pj = joint_X_p[tid]                                                                  <L 855>
        var_17 = wp::address(var_joint_X_p, var_0);
        var_18 = wp::load(var_17);
        var_19 = wp::copy(var_18);
        // X_cj = joint_X_c[tid]                                                                  <L 856>
        var_20 = wp::address(var_joint_X_c, var_0);
        var_21 = wp::load(var_20);
        var_22 = wp::copy(var_21);
        // X_wp = X_pj                                                                            <L 858>
        var_23 = wp::copy(var_19);
        // m_inv_p = 0.0                                                                          <L 859>
        // I_inv_p = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 860>
        var_25 = wp::mat_t<3,3,wp::float32>(var_24, var_24, var_24, var_24, var_24, var_24, var_24, var_24, var_24);
        // pose_p = X_pj                                                                          <L 861>
        var_26 = wp::copy(var_19);
        // com_p = wp.vec3(0.0)                                                                   <L 862>
        var_27 = wp::vec_t<3,wp::float32>(var_24);
        // vel_p = wp.vec3(0.0)                                                                   <L 863>
        var_28 = wp::vec_t<3,wp::float32>(var_24);
        // omega_p = wp.vec3(0.0)                                                                 <L 864>
        var_29 = wp::vec_t<3,wp::float32>(var_24);
        // if id_p >= 0:                                                                          <L 866>
        var_30 = (var_16 >= var_5);
        if (var_30) {
            // pose_p = body_q[id_p]                                                              <L 867>
            var_31 = wp::address(var_body_q, var_16);
            var_32 = wp::load(var_31);
            var_33 = wp::copy(var_32);
            // X_wp = pose_p * X_wp                                                               <L 868>
            var_34 = wp::mul(var_33, var_23);
            // com_p = body_com[id_p]                                                             <L 869>
            var_35 = wp::address(var_body_com, var_16);
            var_36 = wp::load(var_35);
            var_37 = wp::copy(var_36);
            // m_inv_p = body_inv_m[id_p]                                                         <L 870>
            var_38 = wp::address(var_body_inv_m, var_16);
            var_39 = wp::load(var_38);
            var_40 = wp::copy(var_39);
            // I_inv_p = body_inv_I[id_p]                                                         <L 871>
            var_41 = wp::address(var_body_inv_I, var_16);
            var_42 = wp::load(var_41);
            var_43 = wp::copy(var_42);
            // vel_p = wp.spatial_bottom(body_qd[id_p])                                           <L 872>
            var_44 = wp::address(var_body_qd, var_16);
            var_45 = wp::load(var_44);
            var_46 = wp::spatial_bottom(var_45);
            // omega_p = wp.spatial_top(body_qd[id_p])                                            <L 873>
            var_47 = wp::address(var_body_qd, var_16);
            var_48 = wp::load(var_47);
            var_49 = wp::spatial_top(var_48);
        }
        var_50 = wp::select(var_30, var_23, var_34);
        var_51 = wp::select(var_30, var_24, var_40);
        var_52 = wp::select(var_30, var_25, var_43);
        var_53 = wp::select(var_30, var_26, var_33);
        var_54 = wp::select(var_30, var_27, var_37);
        var_55 = wp::select(var_30, var_28, var_46);
        var_56 = wp::select(var_30, var_29, var_49);
        // pose_c = body_q[id_c]                                                                  <L 876>
        var_57 = wp::address(var_body_q, var_13);
        var_58 = wp::load(var_57);
        var_59 = wp::copy(var_58);
        // X_wc = pose_c * X_cj                                                                   <L 877>
        var_60 = wp::mul(var_59, var_22);
        // com_c = body_com[id_c]                                                                 <L 878>
        var_61 = wp::address(var_body_com, var_13);
        var_62 = wp::load(var_61);
        var_63 = wp::copy(var_62);
        // m_inv_c = body_inv_m[id_c]                                                             <L 879>
        var_64 = wp::address(var_body_inv_m, var_13);
        var_65 = wp::load(var_64);
        var_66 = wp::copy(var_65);
        // I_inv_c = body_inv_I[id_c]                                                             <L 880>
        var_67 = wp::address(var_body_inv_I, var_13);
        var_68 = wp::load(var_67);
        var_69 = wp::copy(var_68);
        // vel_c = wp.spatial_bottom(body_qd[id_c])                                               <L 881>
        var_70 = wp::address(var_body_qd, var_13);
        var_71 = wp::load(var_70);
        var_72 = wp::spatial_bottom(var_71);
        // omega_c = wp.spatial_top(body_qd[id_c])                                                <L 882>
        var_73 = wp::address(var_body_qd, var_13);
        var_74 = wp::load(var_73);
        var_75 = wp::spatial_top(var_74);
        // if m_inv_p == 0.0 and m_inv_c == 0.0:                                                  <L 884>
        var_76 = (var_51 == var_24);
        var_77 = (var_66 == var_24);
        var_78 = var_76 && var_77;
        if (var_78) {
            // return                                                                             <L 886>
            goto label1;
        }
        // lin_delta_p = wp.vec3(0.0)                                                             <L 889>
        var_79 = wp::vec_t<3,wp::float32>(var_24);
        // ang_delta_p = wp.vec3(0.0)                                                             <L 890>
        var_80 = wp::vec_t<3,wp::float32>(var_24);
        // lin_delta_c = wp.vec3(0.0)                                                             <L 891>
        var_81 = wp::vec_t<3,wp::float32>(var_24);
        // ang_delta_c = wp.vec3(0.0)                                                             <L 892>
        var_82 = wp::vec_t<3,wp::float32>(var_24);
        // rel_pose = wp.transform_inverse(X_wp) * X_wc                                           <L 894>
        var_83 = wp::transform_inverse(var_50);
        var_84 = wp::mul(var_83, var_60);
        // rel_p = wp.transform_get_translation(rel_pose)                                         <L 895>
        var_85 = wp::transform_get_translation(var_84);
        // x_c = wp.transform_get_translation(X_wc)                                               <L 899>
        var_86 = wp::transform_get_translation(var_60);
        // linear_compliance = joint_linear_compliance[tid]                                       <L 901>
        var_87 = wp::address(var_joint_linear_compliance, var_0);
        var_88 = wp::load(var_87);
        var_89 = wp::copy(var_88);
        // angular_compliance = joint_angular_compliance[tid]                                     <L 902>
        var_90 = wp::address(var_joint_angular_compliance, var_0);
        var_91 = wp::load(var_90);
        var_92 = wp::copy(var_91);
        // axis_start = joint_axis_start[tid]                                                     <L 904>
        var_93 = wp::address(var_joint_axis_start, var_0);
        var_94 = wp::load(var_93);
        var_95 = wp::copy(var_94);
        // lin_axis_count = joint_axis_dim[tid, 0]                                                <L 905>
        var_96 = wp::address(var_joint_axis_dim, var_0, var_5);
        var_97 = wp::load(var_96);
        var_98 = wp::copy(var_97);
        // ang_axis_count = joint_axis_dim[tid, 1]                                                <L 906>
        var_100 = wp::address(var_joint_axis_dim, var_0, var_99);
        var_101 = wp::load(var_100);
        var_102 = wp::copy(var_101);
        // world_com_p = wp.transform_point(pose_p, com_p)                                        <L 908>
        var_103 = wp::transform_point(var_53, var_54);
        // world_com_c = wp.transform_point(pose_c, com_c)                                        <L 909>
        var_104 = wp::transform_point(var_59, var_63);
        // if type == fs5Model.JOINT_DISTANCE:                                                    <L 912>
        var_106 = (var_3 == var_105);
        if (var_106) {
            // r_p = wp.transform_get_translation(X_wp) - world_com_p                             <L 913>
            var_107 = wp::transform_get_translation(var_50);
            var_108 = wp::sub(var_107, var_103);
            // r_c = wp.transform_get_translation(X_wc) - world_com_c                             <L 914>
            var_109 = wp::transform_get_translation(var_60);
            var_110 = wp::sub(var_109, var_104);
            // lower = joint_limit_lower[axis_start]                                              <L 915>
            var_111 = wp::address(var_joint_limit_lower, var_95);
            var_112 = wp::load(var_111);
            var_113 = wp::copy(var_112);
            // upper = joint_limit_upper[axis_start]                                              <L 916>
            var_114 = wp::address(var_joint_limit_upper, var_95);
            var_115 = wp::load(var_114);
            var_116 = wp::copy(var_115);
            // if lower < 0.0 and upper < 0.0:                                                    <L 917>
            var_117 = (var_113 < var_24);
            var_118 = (var_116 < var_24);
            var_119 = var_117 && var_118;
            if (var_119) {
                // return                                                                         <L 919>
                goto label2;
            }
            // d = wp.length(rel_p)                                                               <L 920>
            var_120 = wp::length(var_85);
            // err = 0.0                                                                          <L 921>
            // if lower >= 0.0 and d < lower:                                                     <L 922>
            var_121 = (var_113 >= var_24);
            var_122 = (var_120 < var_113);
            var_123 = var_121 && var_122;
            if (var_123) {
                // err = d - lower                                                                <L 923>
                var_124 = wp::sub(var_120, var_113);
                // rel_p = err * wp.normalize(world_com_c - world_com_p)                          <L 926>
                var_125 = wp::sub(var_104, var_103);
                var_126 = wp::normalize(var_125);
                var_127 = wp::mul(var_124, var_126);
            }
            var_128 = wp::select(var_123, var_85, var_127);
            var_129 = wp::select(var_123, var_24, var_124);
            if (!var_123) {
                // elif upper >= 0.0 and d > upper:                                               <L 927>
                var_130 = (var_116 >= var_24);
                var_131 = (var_120 > var_116);
                var_132 = var_130 && var_131;
                if (var_132) {
                    // err = d - upper                                                            <L 928>
                    var_133 = wp::sub(var_120, var_116);
                }
                var_134 = wp::select(var_132, var_129, var_133);
            }
            var_135 = wp::select(var_123, var_134, var_129);
            // if wp.abs(err) > 1e-9:                                                             <L 930>
            var_136 = wp::abs(var_135);
            var_138 = (var_136 > var_137);
            if (var_138) {
                // linear_c = rel_p                                                               <L 932>
                var_139 = wp::copy(var_128);
                // linear_p = -linear_c                                                           <L 933>
                var_140 = wp::neg(var_139);
                // r_c = x_c - world_com_c                                                        <L 934>
                var_141 = wp::sub(var_86, var_104);
                // angular_p = -wp.cross(r_p, linear_c)                                           <L 935>
                var_142 = wp::cross(var_108, var_139);
                var_143 = wp::neg(var_142);
                // angular_c = wp.cross(r_c, linear_c)                                            <L 936>
                var_144 = wp::cross(var_141, var_139);
                // derr = (                                                                       <L 938>
                // wp.dot(linear_p, vel_p)                                                        <L 939>
                var_145 = wp::dot(var_140, var_55);
                // + wp.dot(linear_c, vel_c)                                                      <L 940>
                var_146 = wp::dot(var_139, var_72);
                var_147 = wp::add(var_145, var_146);
                // + wp.dot(angular_p, omega_p)                                                   <L 941>
                var_148 = wp::dot(var_143, var_56);
                var_149 = wp::add(var_147, var_148);
                // + wp.dot(angular_c, omega_c)                                                   <L 942>
                var_150 = wp::dot(var_144, var_75);
                var_151 = wp::add(var_149, var_150);
                // lambda_in = 0.0                                                                <L 944>
                // compliance = linear_compliance                                                 <L 945>
                var_152 = wp::copy(var_89);
                // ke = joint_target_ke[axis_start]                                               <L 946>
                var_153 = wp::address(var_joint_target_ke, var_95);
                var_154 = wp::load(var_153);
                var_155 = wp::copy(var_154);
                // if ke > 0.0:                                                                   <L 947>
                var_156 = (var_155 > var_24);
                if (var_156) {
                    // compliance = 1.0 / ke                                                      <L 948>
                    var_158 = wp::div(var_157, var_155);
                }
                var_159 = wp::select(var_156, var_152, var_158);
                // damping = joint_target_kd[axis_start]                                          <L 949>
                var_160 = wp::address(var_joint_target_kd, var_95);
                var_161 = wp::load(var_160);
                var_162 = wp::copy(var_161);
                // d_lambda = compute_positional_correction(                                      <L 950>
                // err,                                                                           <L 951>
                // derr,                                                                          <L 952>
                // pose_p,                                                                        <L 953>
                // pose_c,                                                                        <L 954>
                // m_inv_p,                                                                       <L 955>
                // m_inv_c,                                                                       <L 956>
                // I_inv_p,                                                                       <L 957>
                // I_inv_c,                                                                       <L 958>
                // linear_p,                                                                      <L 959>
                // linear_c,                                                                      <L 960>
                // angular_p,                                                                     <L 961>
                // angular_c,                                                                     <L 962>
                // lambda_in,                                                                     <L 963>
                // compliance,                                                                    <L 964>
                // damping,                                                                       <L 965>
                // dt,                                                                            <L 966>
                var_163 = compute_positional_correction(var_135, var_151, var_53, var_59, var_51, var_66, var_52, var_69, var_140, var_139, var_143, var_144, var_24, var_159, var_162, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 969>
                var_164 = wp::mul(var_163, var_linear_relaxation);
                var_165 = wp::mul(var_140, var_164);
                var_166 = wp::add(var_79, var_165);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 970>
                var_167 = wp::mul(var_163, var_angular_relaxation);
                var_168 = wp::mul(var_143, var_167);
                var_169 = wp::add(var_80, var_168);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 971>
                var_170 = wp::mul(var_163, var_linear_relaxation);
                var_171 = wp::mul(var_139, var_170);
                var_172 = wp::add(var_81, var_171);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 972>
                var_173 = wp::mul(var_163, var_angular_relaxation);
                var_174 = wp::mul(var_144, var_173);
                var_175 = wp::add(var_82, var_174);
            }
            var_176 = wp::select(var_138, var_79, var_166);
            var_177 = wp::select(var_138, var_80, var_169);
            var_178 = wp::select(var_138, var_81, var_172);
            var_179 = wp::select(var_138, var_82, var_175);
            var_180 = wp::select(var_138, var_110, var_141);
        }
        var_181 = wp::select(var_106, var_79, var_176);
        var_182 = wp::select(var_106, var_80, var_177);
        var_183 = wp::select(var_106, var_81, var_178);
        var_184 = wp::select(var_106, var_82, var_179);
        var_185 = wp::select(var_106, var_85, var_128);
        if (!var_106) {
            // ke_sum = float(0.0)                                                                <L 976>
            var_186 = wp::float(var_24);
            // axis_limits = wp.spatial_vector(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                      <L 977>
            var_187 = wp::vec_t<6,wp::float32>({var_24, var_24, var_24, var_24, var_24, var_24});
            // axis_mode = wp.vec3ub(wp.uint8(0), wp.uint8(0), wp.uint8(0))                       <L 978>
            var_188 = wp::uint8(var_5);
            var_189 = wp::uint8(var_5);
            var_190 = wp::uint8(var_5);
            var_191 = wp::vec_t<3,wp::uint8>(var_188, var_189, var_190);
            // axis_target_ke_kd = wp.mat33(0.0)                                                  <L 979>
            var_192 = wp::mat_t<3,3,wp::float32>(var_24);
            // if lin_axis_count > 0:                                                             <L 981>
            var_193 = (var_98 > var_5);
            if (var_193) {
                // axis = joint_axis[axis_start]                                                  <L 982>
                var_194 = wp::address(var_joint_axis, var_95);
                var_195 = wp::load(var_194);
                var_196 = wp::copy(var_195);
                // lo_temp = axis * joint_limit_lower[axis_start]                                 <L 983>
                var_197 = wp::address(var_joint_limit_lower, var_95);
                var_198 = wp::load(var_197);
                var_199 = wp::mul(var_196, var_198);
                // up_temp = axis * joint_limit_upper[axis_start]                                 <L 984>
                var_200 = wp::address(var_joint_limit_upper, var_95);
                var_201 = wp::load(var_200);
                var_202 = wp::mul(var_196, var_201);
                // axis_limits = wp.spatial_vector(vec_min(lo_temp, up_temp), vec_max(lo_temp, up_temp))       <L 985>
                var_203 = vec_min(var_199, var_202);
                var_204 = vec_max(var_199, var_202);
                var_205 = wp::vec_t<6,wp::float32>(var_203, var_204);
                // mode = joint_axis_mode[axis_start]                                             <L 986>
                var_206 = wp::address(var_joint_axis_mode, var_95);
                var_207 = wp::load(var_206);
                var_208 = wp::copy(var_207);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 987>
                var_210 = (var_208 != var_209);
                if (var_210) {
                    // ke = joint_target_ke[axis_start]                                           <L 988>
                    var_211 = wp::address(var_joint_target_ke, var_95);
                    var_212 = wp::load(var_211);
                    var_213 = wp::copy(var_212);
                    // kd = joint_target_kd[axis_start]                                           <L 989>
                    var_214 = wp::address(var_joint_target_kd, var_95);
                    var_215 = wp::load(var_214);
                    var_216 = wp::copy(var_215);
                    // target = joint_target[axis_start]                                          <L 990>
                    var_217 = wp::address(var_joint_target, var_95);
                    var_218 = wp::load(var_217);
                    var_219 = wp::copy(var_218);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 991>
                    var_220 = update_joint_axis_mode(var_208, var_196, var_191);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 992>
                    var_221 = update_joint_axis_target_ke_kd(var_196, var_219, var_213, var_216, var_192);
                    // ke_sum += ke                                                               <L 993>
                    var_222 = wp::add(var_186, var_213);
                }
                var_223 = wp::select(var_210, var_155, var_213);
                var_224 = wp::select(var_210, var_186, var_222);
                var_225 = wp::select(var_210, var_191, var_220);
                var_226 = wp::select(var_210, var_192, var_221);
            }
            var_227 = wp::select(var_193, var_155, var_223);
            var_228 = wp::select(var_193, var_186, var_224);
            var_229 = wp::select(var_193, var_187, var_205);
            var_230 = wp::select(var_193, var_191, var_225);
            var_231 = wp::select(var_193, var_192, var_226);
            // if lin_axis_count > 1:                                                             <L 994>
            var_232 = (var_98 > var_99);
            if (var_232) {
                // axis_idx = axis_start + 1                                                      <L 995>
                var_233 = wp::add(var_95, var_99);
                // axis = joint_axis[axis_idx]                                                    <L 996>
                var_234 = wp::address(var_joint_axis, var_233);
                var_235 = wp::load(var_234);
                var_236 = wp::copy(var_235);
                // lower = joint_limit_lower[axis_idx]                                            <L 997>
                var_237 = wp::address(var_joint_limit_lower, var_233);
                var_238 = wp::load(var_237);
                var_239 = wp::copy(var_238);
                // upper = joint_limit_upper[axis_idx]                                            <L 998>
                var_240 = wp::address(var_joint_limit_upper, var_233);
                var_241 = wp::load(var_240);
                var_242 = wp::copy(var_241);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 999>
                var_243 = update_joint_axis_limits(var_236, var_239, var_242, var_229);
                // mode = joint_axis_mode[axis_idx]                                               <L 1000>
                var_244 = wp::address(var_joint_axis_mode, var_233);
                var_245 = wp::load(var_244);
                var_246 = wp::copy(var_245);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1001>
                var_247 = (var_246 != var_209);
                if (var_247) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1002>
                    var_248 = wp::address(var_joint_target_ke, var_233);
                    var_249 = wp::load(var_248);
                    var_250 = wp::copy(var_249);
                    // kd = joint_target_kd[axis_idx]                                             <L 1003>
                    var_251 = wp::address(var_joint_target_kd, var_233);
                    var_252 = wp::load(var_251);
                    var_253 = wp::copy(var_252);
                    // target = joint_target[axis_idx]                                            <L 1004>
                    var_254 = wp::address(var_joint_target, var_233);
                    var_255 = wp::load(var_254);
                    var_256 = wp::copy(var_255);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1005>
                    var_257 = update_joint_axis_mode(var_246, var_236, var_230);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1006>
                    var_258 = update_joint_axis_target_ke_kd(var_236, var_256, var_250, var_253, var_231);
                    // ke_sum += ke                                                               <L 1007>
                    var_259 = wp::add(var_228, var_250);
                }
                var_260 = wp::select(var_247, var_227, var_250);
                var_261 = wp::select(var_247, var_228, var_259);
                var_262 = wp::select(var_247, var_230, var_257);
                var_263 = wp::select(var_247, var_231, var_258);
                var_264 = wp::select(var_247, var_216, var_253);
                var_265 = wp::select(var_247, var_219, var_256);
            }
            var_266 = wp::select(var_232, var_113, var_239);
            var_267 = wp::select(var_232, var_116, var_242);
            var_268 = wp::select(var_232, var_227, var_260);
            var_269 = wp::select(var_232, var_228, var_261);
            var_270 = wp::select(var_232, var_229, var_243);
            var_271 = wp::select(var_232, var_230, var_262);
            var_272 = wp::select(var_232, var_231, var_263);
            var_273 = wp::select(var_232, var_196, var_236);
            var_274 = wp::select(var_232, var_208, var_246);
            var_275 = wp::select(var_232, var_216, var_264);
            var_276 = wp::select(var_232, var_219, var_265);
            // if lin_axis_count > 2:                                                             <L 1008>
            var_278 = (var_98 > var_277);
            if (var_278) {
                // axis_idx = axis_start + 2                                                      <L 1009>
                var_279 = wp::add(var_95, var_277);
                // axis = joint_axis[axis_idx]                                                    <L 1010>
                var_280 = wp::address(var_joint_axis, var_279);
                var_281 = wp::load(var_280);
                var_282 = wp::copy(var_281);
                // lower = joint_limit_lower[axis_idx]                                            <L 1011>
                var_283 = wp::address(var_joint_limit_lower, var_279);
                var_284 = wp::load(var_283);
                var_285 = wp::copy(var_284);
                // upper = joint_limit_upper[axis_idx]                                            <L 1012>
                var_286 = wp::address(var_joint_limit_upper, var_279);
                var_287 = wp::load(var_286);
                var_288 = wp::copy(var_287);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 1013>
                var_289 = update_joint_axis_limits(var_282, var_285, var_288, var_270);
                // mode = joint_axis_mode[axis_idx]                                               <L 1014>
                var_290 = wp::address(var_joint_axis_mode, var_279);
                var_291 = wp::load(var_290);
                var_292 = wp::copy(var_291);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1015>
                var_293 = (var_292 != var_209);
                if (var_293) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1016>
                    var_294 = wp::address(var_joint_target_ke, var_279);
                    var_295 = wp::load(var_294);
                    var_296 = wp::copy(var_295);
                    // kd = joint_target_kd[axis_idx]                                             <L 1017>
                    var_297 = wp::address(var_joint_target_kd, var_279);
                    var_298 = wp::load(var_297);
                    var_299 = wp::copy(var_298);
                    // target = joint_target[axis_idx]                                            <L 1018>
                    var_300 = wp::address(var_joint_target, var_279);
                    var_301 = wp::load(var_300);
                    var_302 = wp::copy(var_301);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1019>
                    var_303 = update_joint_axis_mode(var_292, var_282, var_271);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1020>
                    var_304 = update_joint_axis_target_ke_kd(var_282, var_302, var_296, var_299, var_272);
                    // ke_sum += ke                                                               <L 1021>
                    var_305 = wp::add(var_269, var_296);
                }
                var_306 = wp::select(var_293, var_268, var_296);
                var_307 = wp::select(var_293, var_269, var_305);
                var_308 = wp::select(var_293, var_271, var_303);
                var_309 = wp::select(var_293, var_272, var_304);
                var_310 = wp::select(var_293, var_275, var_299);
                var_311 = wp::select(var_293, var_276, var_302);
            }
            var_312 = wp::select(var_278, var_266, var_285);
            var_313 = wp::select(var_278, var_267, var_288);
            var_314 = wp::select(var_278, var_268, var_306);
            var_315 = wp::select(var_278, var_269, var_307);
            var_316 = wp::select(var_278, var_270, var_289);
            var_317 = wp::select(var_278, var_271, var_308);
            var_318 = wp::select(var_278, var_272, var_309);
            var_319 = wp::select(var_278, var_273, var_282);
            var_320 = wp::select(var_278, var_274, var_292);
            var_321 = wp::select(var_278, var_275, var_310);
            var_322 = wp::select(var_278, var_276, var_311);
            var_323 = wp::select(var_278, var_233, var_279);
            // axis_target = axis_target_ke_kd[0]                                                 <L 1023>
            var_324 = wp::extract(var_318, var_5);
            // axis_stiffness = axis_target_ke_kd[1]                                              <L 1024>
            var_325 = wp::extract(var_318, var_99);
            // axis_damping = axis_target_ke_kd[2]                                                <L 1025>
            var_326 = wp::extract(var_318, var_277);
            // if ke_sum > 0.0:                                                                   <L 1026>
            var_327 = (var_315 > var_24);
            if (var_327) {
                // axis_target /= ke_sum                                                          <L 1027>
                var_328 = wp::div(var_324, var_315);
            }
            var_329 = wp::select(var_327, var_324, var_328);
            // axis_limits_lower = wp.spatial_top(axis_limits)                                    <L 1028>
            var_330 = wp::spatial_top(var_316);
            // axis_limits_upper = wp.spatial_bottom(axis_limits)                                 <L 1029>
            var_331 = wp::spatial_bottom(var_316);
            // frame_p = wp.quat_to_matrix(wp.transform_get_rotation(X_wp))                       <L 1031>
            var_332 = wp::transform_get_rotation(var_50);
            var_333 = wp::quat_to_matrix(var_332);
            // r_p = x_c - world_com_p                                                            <L 1033>
            var_334 = wp::sub(var_86, var_103);
            // r_c = x_c - wp.transform_point(pose_c, com_c)                                      <L 1034>
            var_335 = wp::transform_point(var_59, var_63);
            var_336 = wp::sub(var_86, var_335);
            // for dim in range(3):                                                               <L 1037>
            var_338 = wp::int(var_337);
            // e = rel_p[dim]                                                                     <L 1038>
            var_339 = wp::extract(var_185, var_338);
            // mode = axis_mode[dim]                                                              <L 1039>
            var_340 = wp::extract(var_317, var_338);
            // linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])              <L 1042>
            var_341 = wp::extract(var_333, var_5, var_338);
            var_342 = wp::extract(var_333, var_99, var_338);
            var_343 = wp::extract(var_333, var_277, var_338);
            var_344 = wp::vec_t<3,wp::float32>(var_341, var_342, var_343);
            // linear_p = -linear_c                                                               <L 1043>
            var_345 = wp::neg(var_344);
            // angular_p = -wp.cross(r_p, linear_c)                                               <L 1044>
            var_346 = wp::cross(var_334, var_344);
            var_347 = wp::neg(var_346);
            // angular_c = wp.cross(r_c, linear_c)                                                <L 1045>
            var_348 = wp::cross(var_336, var_344);
            // derr = (                                                                           <L 1047>
            // wp.dot(linear_p, vel_p)                                                            <L 1048>
            var_349 = wp::dot(var_345, var_55);
            // + wp.dot(linear_c, vel_c)                                                          <L 1049>
            var_350 = wp::dot(var_344, var_72);
            var_351 = wp::add(var_349, var_350);
            // + wp.dot(angular_p, omega_p)                                                       <L 1050>
            var_352 = wp::dot(var_347, var_56);
            var_353 = wp::add(var_351, var_352);
            // + wp.dot(angular_c, omega_c)                                                       <L 1051>
            var_354 = wp::dot(var_348, var_75);
            var_355 = wp::add(var_353, var_354);
            // err = 0.0                                                                          <L 1054>
            // compliance = linear_compliance                                                     <L 1055>
            var_356 = wp::copy(var_89);
            // damping = 0.0                                                                      <L 1056>
            // lower = axis_limits_lower[dim]                                                     <L 1058>
            var_357 = wp::extract(var_330, var_338);
            // upper = axis_limits_upper[dim]                                                     <L 1059>
            var_358 = wp::extract(var_331, var_338);
            // if e < lower:                                                                      <L 1060>
            var_359 = (var_339 < var_357);
            if (var_359) {
                // err = e - lower                                                                <L 1061>
                var_360 = wp::sub(var_339, var_357);
                // compliance = linear_compliance                                                 <L 1062>
                var_361 = wp::copy(var_89);
                // damping = 0.0                                                                  <L 1063>
            }
            var_362 = wp::select(var_359, var_24, var_360);
            var_363 = wp::select(var_359, var_356, var_361);
            if (!var_359) {
                // elif e > upper:                                                                <L 1064>
                var_364 = (var_339 > var_358);
                if (var_364) {
                    // err = e - upper                                                            <L 1065>
                    var_365 = wp::sub(var_339, var_358);
                    // compliance = linear_compliance                                             <L 1066>
                    var_366 = wp::copy(var_89);
                    // damping = 0.0                                                              <L 1067>
                }
                var_367 = wp::select(var_364, var_362, var_365);
                var_368 = wp::select(var_364, var_363, var_366);
                if (!var_364) {
                    // target = axis_target[dim]                                                  <L 1069>
                    var_369 = wp::extract(var_329, var_338);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1070>
                    var_371 = (var_340 == var_370);
                    if (var_371) {
                        // target = wp.clamp(target, lower, upper)                                <L 1071>
                        var_372 = wp::clamp(var_369, var_357, var_358);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1072>
                        var_373 = wp::extract(var_325, var_338);
                        var_374 = (var_373 > var_24);
                        if (var_374) {
                            // err = e - target                                                   <L 1073>
                            var_375 = wp::sub(var_339, var_372);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1074>
                            var_376 = wp::extract(var_325, var_338);
                            var_377 = wp::div(var_157, var_376);
                        }
                        var_378 = wp::select(var_374, var_367, var_375);
                        var_379 = wp::select(var_374, var_368, var_377);
                        // damping = axis_damping[dim]                                            <L 1075>
                        var_380 = wp::extract(var_326, var_338);
                    }
                    var_381 = wp::select(var_371, var_367, var_378);
                    var_382 = wp::select(var_371, var_368, var_379);
                    var_383 = wp::select(var_371, var_24, var_380);
                    var_384 = wp::select(var_371, var_369, var_372);
                    if (!var_371) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1076>
                        var_386 = (var_340 == var_385);
                        if (var_386) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1077>
                            var_387 = wp::extract(var_325, var_338);
                            var_388 = (var_387 > var_24);
                            if (var_388) {
                                // err = (derr - target) * dt                                     <L 1078>
                                var_389 = wp::sub(var_355, var_384);
                                var_390 = wp::mul(var_389, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1079>
                                var_391 = wp::extract(var_325, var_338);
                                var_392 = wp::div(var_157, var_391);
                            }
                            var_393 = wp::select(var_388, var_381, var_390);
                            var_394 = wp::select(var_388, var_382, var_392);
                            // damping = axis_damping[dim]                                        <L 1080>
                            var_395 = wp::extract(var_326, var_338);
                        }
                        var_396 = wp::select(var_386, var_381, var_393);
                        var_397 = wp::select(var_386, var_382, var_394);
                        var_398 = wp::select(var_386, var_383, var_395);
                    }
                    var_399 = wp::select(var_371, var_396, var_381);
                    var_400 = wp::select(var_371, var_397, var_382);
                    var_401 = wp::select(var_371, var_398, var_383);
                }
                var_402 = wp::select(var_364, var_399, var_367);
                var_403 = wp::select(var_364, var_400, var_368);
                var_404 = wp::select(var_364, var_401, var_24);
                var_405 = wp::select(var_364, var_384, var_322);
            }
            var_406 = wp::select(var_359, var_402, var_362);
            var_407 = wp::select(var_359, var_403, var_363);
            var_408 = wp::select(var_359, var_404, var_24);
            var_409 = wp::select(var_359, var_405, var_322);
            // if wp.abs(err) > 1e-9:                                                             <L 1082>
            var_410 = wp::abs(var_406);
            var_411 = (var_410 > var_137);
            if (var_411) {
                // lambda_in = 0.0                                                                <L 1083>
                // d_lambda = compute_positional_correction(                                      <L 1084>
                // err,                                                                           <L 1085>
                // derr,                                                                          <L 1086>
                // pose_p,                                                                        <L 1087>
                // pose_c,                                                                        <L 1088>
                // m_inv_p,                                                                       <L 1089>
                // m_inv_c,                                                                       <L 1090>
                // I_inv_p,                                                                       <L 1091>
                // I_inv_c,                                                                       <L 1092>
                // linear_p,                                                                      <L 1093>
                // linear_c,                                                                      <L 1094>
                // angular_p,                                                                     <L 1095>
                // angular_c,                                                                     <L 1096>
                // lambda_in,                                                                     <L 1097>
                // compliance,                                                                    <L 1098>
                // damping,                                                                       <L 1099>
                // dt,                                                                            <L 1100>
                var_412 = compute_positional_correction(var_406, var_355, var_53, var_59, var_51, var_66, var_52, var_69, var_345, var_344, var_347, var_348, var_24, var_407, var_408, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 1103>
                var_413 = wp::mul(var_412, var_linear_relaxation);
                var_414 = wp::mul(var_345, var_413);
                var_415 = wp::add(var_181, var_414);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 1104>
                var_416 = wp::mul(var_412, var_angular_relaxation);
                var_417 = wp::mul(var_347, var_416);
                var_418 = wp::add(var_182, var_417);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 1105>
                var_419 = wp::mul(var_412, var_linear_relaxation);
                var_420 = wp::mul(var_344, var_419);
                var_421 = wp::add(var_183, var_420);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 1106>
                var_422 = wp::mul(var_412, var_angular_relaxation);
                var_423 = wp::mul(var_348, var_422);
                var_424 = wp::add(var_184, var_423);
            }
            var_425 = wp::select(var_411, var_181, var_415);
            var_426 = wp::select(var_411, var_182, var_418);
            var_427 = wp::select(var_411, var_183, var_421);
            var_428 = wp::select(var_411, var_184, var_424);
            var_429 = wp::select(var_411, var_163, var_412);
            var_431 = wp::int(var_430);
            // e = rel_p[dim]                                                                     <L 1038>
            var_432 = wp::extract(var_185, var_431);
            // mode = axis_mode[dim]                                                              <L 1039>
            var_433 = wp::extract(var_317, var_431);
            // linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])              <L 1042>
            var_434 = wp::extract(var_333, var_5, var_431);
            var_435 = wp::extract(var_333, var_99, var_431);
            var_436 = wp::extract(var_333, var_277, var_431);
            var_437 = wp::vec_t<3,wp::float32>(var_434, var_435, var_436);
            // linear_p = -linear_c                                                               <L 1043>
            var_438 = wp::neg(var_437);
            // angular_p = -wp.cross(r_p, linear_c)                                               <L 1044>
            var_439 = wp::cross(var_334, var_437);
            var_440 = wp::neg(var_439);
            // angular_c = wp.cross(r_c, linear_c)                                                <L 1045>
            var_441 = wp::cross(var_336, var_437);
            // derr = (                                                                           <L 1047>
            // wp.dot(linear_p, vel_p)                                                            <L 1048>
            var_442 = wp::dot(var_438, var_55);
            // + wp.dot(linear_c, vel_c)                                                          <L 1049>
            var_443 = wp::dot(var_437, var_72);
            var_444 = wp::add(var_442, var_443);
            // + wp.dot(angular_p, omega_p)                                                       <L 1050>
            var_445 = wp::dot(var_440, var_56);
            var_446 = wp::add(var_444, var_445);
            // + wp.dot(angular_c, omega_c)                                                       <L 1051>
            var_447 = wp::dot(var_441, var_75);
            var_448 = wp::add(var_446, var_447);
            // err = 0.0                                                                          <L 1054>
            // compliance = linear_compliance                                                     <L 1055>
            var_449 = wp::copy(var_89);
            // damping = 0.0                                                                      <L 1056>
            // lower = axis_limits_lower[dim]                                                     <L 1058>
            var_450 = wp::extract(var_330, var_431);
            // upper = axis_limits_upper[dim]                                                     <L 1059>
            var_451 = wp::extract(var_331, var_431);
            // if e < lower:                                                                      <L 1060>
            var_452 = (var_432 < var_450);
            if (var_452) {
                // err = e - lower                                                                <L 1061>
                var_453 = wp::sub(var_432, var_450);
                // compliance = linear_compliance                                                 <L 1062>
                var_454 = wp::copy(var_89);
                // damping = 0.0                                                                  <L 1063>
            }
            var_455 = wp::select(var_452, var_24, var_453);
            var_456 = wp::select(var_452, var_449, var_454);
            if (!var_452) {
                // elif e > upper:                                                                <L 1064>
                var_457 = (var_432 > var_451);
                if (var_457) {
                    // err = e - upper                                                            <L 1065>
                    var_458 = wp::sub(var_432, var_451);
                    // compliance = linear_compliance                                             <L 1066>
                    var_459 = wp::copy(var_89);
                    // damping = 0.0                                                              <L 1067>
                }
                var_460 = wp::select(var_457, var_455, var_458);
                var_461 = wp::select(var_457, var_456, var_459);
                if (!var_457) {
                    // target = axis_target[dim]                                                  <L 1069>
                    var_462 = wp::extract(var_329, var_431);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1070>
                    var_463 = (var_433 == var_370);
                    if (var_463) {
                        // target = wp.clamp(target, lower, upper)                                <L 1071>
                        var_464 = wp::clamp(var_462, var_450, var_451);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1072>
                        var_465 = wp::extract(var_325, var_431);
                        var_466 = (var_465 > var_24);
                        if (var_466) {
                            // err = e - target                                                   <L 1073>
                            var_467 = wp::sub(var_432, var_464);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1074>
                            var_468 = wp::extract(var_325, var_431);
                            var_469 = wp::div(var_157, var_468);
                        }
                        var_470 = wp::select(var_466, var_460, var_467);
                        var_471 = wp::select(var_466, var_461, var_469);
                        // damping = axis_damping[dim]                                            <L 1075>
                        var_472 = wp::extract(var_326, var_431);
                    }
                    var_473 = wp::select(var_463, var_460, var_470);
                    var_474 = wp::select(var_463, var_461, var_471);
                    var_475 = wp::select(var_463, var_24, var_472);
                    var_476 = wp::select(var_463, var_462, var_464);
                    if (!var_463) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1076>
                        var_477 = (var_433 == var_385);
                        if (var_477) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1077>
                            var_478 = wp::extract(var_325, var_431);
                            var_479 = (var_478 > var_24);
                            if (var_479) {
                                // err = (derr - target) * dt                                     <L 1078>
                                var_480 = wp::sub(var_448, var_476);
                                var_481 = wp::mul(var_480, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1079>
                                var_482 = wp::extract(var_325, var_431);
                                var_483 = wp::div(var_157, var_482);
                            }
                            var_484 = wp::select(var_479, var_473, var_481);
                            var_485 = wp::select(var_479, var_474, var_483);
                            // damping = axis_damping[dim]                                        <L 1080>
                            var_486 = wp::extract(var_326, var_431);
                        }
                        var_487 = wp::select(var_477, var_473, var_484);
                        var_488 = wp::select(var_477, var_474, var_485);
                        var_489 = wp::select(var_477, var_475, var_486);
                    }
                    var_490 = wp::select(var_463, var_487, var_473);
                    var_491 = wp::select(var_463, var_488, var_474);
                    var_492 = wp::select(var_463, var_489, var_475);
                }
                var_493 = wp::select(var_457, var_490, var_460);
                var_494 = wp::select(var_457, var_491, var_461);
                var_495 = wp::select(var_457, var_492, var_24);
                var_496 = wp::select(var_457, var_476, var_409);
            }
            var_497 = wp::select(var_452, var_493, var_455);
            var_498 = wp::select(var_452, var_494, var_456);
            var_499 = wp::select(var_452, var_495, var_24);
            var_500 = wp::select(var_452, var_496, var_409);
            // if wp.abs(err) > 1e-9:                                                             <L 1082>
            var_501 = wp::abs(var_497);
            var_502 = (var_501 > var_137);
            if (var_502) {
                // lambda_in = 0.0                                                                <L 1083>
                // d_lambda = compute_positional_correction(                                      <L 1084>
                // err,                                                                           <L 1085>
                // derr,                                                                          <L 1086>
                // pose_p,                                                                        <L 1087>
                // pose_c,                                                                        <L 1088>
                // m_inv_p,                                                                       <L 1089>
                // m_inv_c,                                                                       <L 1090>
                // I_inv_p,                                                                       <L 1091>
                // I_inv_c,                                                                       <L 1092>
                // linear_p,                                                                      <L 1093>
                // linear_c,                                                                      <L 1094>
                // angular_p,                                                                     <L 1095>
                // angular_c,                                                                     <L 1096>
                // lambda_in,                                                                     <L 1097>
                // compliance,                                                                    <L 1098>
                // damping,                                                                       <L 1099>
                // dt,                                                                            <L 1100>
                var_503 = compute_positional_correction(var_497, var_448, var_53, var_59, var_51, var_66, var_52, var_69, var_438, var_437, var_440, var_441, var_24, var_498, var_499, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 1103>
                var_504 = wp::mul(var_503, var_linear_relaxation);
                var_505 = wp::mul(var_438, var_504);
                var_506 = wp::add(var_425, var_505);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 1104>
                var_507 = wp::mul(var_503, var_angular_relaxation);
                var_508 = wp::mul(var_440, var_507);
                var_509 = wp::add(var_426, var_508);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 1105>
                var_510 = wp::mul(var_503, var_linear_relaxation);
                var_511 = wp::mul(var_437, var_510);
                var_512 = wp::add(var_427, var_511);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 1106>
                var_513 = wp::mul(var_503, var_angular_relaxation);
                var_514 = wp::mul(var_441, var_513);
                var_515 = wp::add(var_428, var_514);
            }
            var_516 = wp::select(var_502, var_425, var_506);
            var_517 = wp::select(var_502, var_426, var_509);
            var_518 = wp::select(var_502, var_427, var_512);
            var_519 = wp::select(var_502, var_428, var_515);
            var_520 = wp::select(var_502, var_429, var_503);
            var_522 = wp::int(var_521);
            // e = rel_p[dim]                                                                     <L 1038>
            var_523 = wp::extract(var_185, var_522);
            // mode = axis_mode[dim]                                                              <L 1039>
            var_524 = wp::extract(var_317, var_522);
            // linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])              <L 1042>
            var_525 = wp::extract(var_333, var_5, var_522);
            var_526 = wp::extract(var_333, var_99, var_522);
            var_527 = wp::extract(var_333, var_277, var_522);
            var_528 = wp::vec_t<3,wp::float32>(var_525, var_526, var_527);
            // linear_p = -linear_c                                                               <L 1043>
            var_529 = wp::neg(var_528);
            // angular_p = -wp.cross(r_p, linear_c)                                               <L 1044>
            var_530 = wp::cross(var_334, var_528);
            var_531 = wp::neg(var_530);
            // angular_c = wp.cross(r_c, linear_c)                                                <L 1045>
            var_532 = wp::cross(var_336, var_528);
            // derr = (                                                                           <L 1047>
            // wp.dot(linear_p, vel_p)                                                            <L 1048>
            var_533 = wp::dot(var_529, var_55);
            // + wp.dot(linear_c, vel_c)                                                          <L 1049>
            var_534 = wp::dot(var_528, var_72);
            var_535 = wp::add(var_533, var_534);
            // + wp.dot(angular_p, omega_p)                                                       <L 1050>
            var_536 = wp::dot(var_531, var_56);
            var_537 = wp::add(var_535, var_536);
            // + wp.dot(angular_c, omega_c)                                                       <L 1051>
            var_538 = wp::dot(var_532, var_75);
            var_539 = wp::add(var_537, var_538);
            // err = 0.0                                                                          <L 1054>
            // compliance = linear_compliance                                                     <L 1055>
            var_540 = wp::copy(var_89);
            // damping = 0.0                                                                      <L 1056>
            // lower = axis_limits_lower[dim]                                                     <L 1058>
            var_541 = wp::extract(var_330, var_522);
            // upper = axis_limits_upper[dim]                                                     <L 1059>
            var_542 = wp::extract(var_331, var_522);
            // if e < lower:                                                                      <L 1060>
            var_543 = (var_523 < var_541);
            if (var_543) {
                // err = e - lower                                                                <L 1061>
                var_544 = wp::sub(var_523, var_541);
                // compliance = linear_compliance                                                 <L 1062>
                var_545 = wp::copy(var_89);
                // damping = 0.0                                                                  <L 1063>
            }
            var_546 = wp::select(var_543, var_24, var_544);
            var_547 = wp::select(var_543, var_540, var_545);
            if (!var_543) {
                // elif e > upper:                                                                <L 1064>
                var_548 = (var_523 > var_542);
                if (var_548) {
                    // err = e - upper                                                            <L 1065>
                    var_549 = wp::sub(var_523, var_542);
                    // compliance = linear_compliance                                             <L 1066>
                    var_550 = wp::copy(var_89);
                    // damping = 0.0                                                              <L 1067>
                }
                var_551 = wp::select(var_548, var_546, var_549);
                var_552 = wp::select(var_548, var_547, var_550);
                if (!var_548) {
                    // target = axis_target[dim]                                                  <L 1069>
                    var_553 = wp::extract(var_329, var_522);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1070>
                    var_554 = (var_524 == var_370);
                    if (var_554) {
                        // target = wp.clamp(target, lower, upper)                                <L 1071>
                        var_555 = wp::clamp(var_553, var_541, var_542);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1072>
                        var_556 = wp::extract(var_325, var_522);
                        var_557 = (var_556 > var_24);
                        if (var_557) {
                            // err = e - target                                                   <L 1073>
                            var_558 = wp::sub(var_523, var_555);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1074>
                            var_559 = wp::extract(var_325, var_522);
                            var_560 = wp::div(var_157, var_559);
                        }
                        var_561 = wp::select(var_557, var_551, var_558);
                        var_562 = wp::select(var_557, var_552, var_560);
                        // damping = axis_damping[dim]                                            <L 1075>
                        var_563 = wp::extract(var_326, var_522);
                    }
                    var_564 = wp::select(var_554, var_551, var_561);
                    var_565 = wp::select(var_554, var_552, var_562);
                    var_566 = wp::select(var_554, var_24, var_563);
                    var_567 = wp::select(var_554, var_553, var_555);
                    if (!var_554) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1076>
                        var_568 = (var_524 == var_385);
                        if (var_568) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1077>
                            var_569 = wp::extract(var_325, var_522);
                            var_570 = (var_569 > var_24);
                            if (var_570) {
                                // err = (derr - target) * dt                                     <L 1078>
                                var_571 = wp::sub(var_539, var_567);
                                var_572 = wp::mul(var_571, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1079>
                                var_573 = wp::extract(var_325, var_522);
                                var_574 = wp::div(var_157, var_573);
                            }
                            var_575 = wp::select(var_570, var_564, var_572);
                            var_576 = wp::select(var_570, var_565, var_574);
                            // damping = axis_damping[dim]                                        <L 1080>
                            var_577 = wp::extract(var_326, var_522);
                        }
                        var_578 = wp::select(var_568, var_564, var_575);
                        var_579 = wp::select(var_568, var_565, var_576);
                        var_580 = wp::select(var_568, var_566, var_577);
                    }
                    var_581 = wp::select(var_554, var_578, var_564);
                    var_582 = wp::select(var_554, var_579, var_565);
                    var_583 = wp::select(var_554, var_580, var_566);
                }
                var_584 = wp::select(var_548, var_581, var_551);
                var_585 = wp::select(var_548, var_582, var_552);
                var_586 = wp::select(var_548, var_583, var_24);
                var_587 = wp::select(var_548, var_567, var_500);
            }
            var_588 = wp::select(var_543, var_584, var_546);
            var_589 = wp::select(var_543, var_585, var_547);
            var_590 = wp::select(var_543, var_586, var_24);
            var_591 = wp::select(var_543, var_587, var_500);
            // if wp.abs(err) > 1e-9:                                                             <L 1082>
            var_592 = wp::abs(var_588);
            var_593 = (var_592 > var_137);
            if (var_593) {
                // lambda_in = 0.0                                                                <L 1083>
                // d_lambda = compute_positional_correction(                                      <L 1084>
                // err,                                                                           <L 1085>
                // derr,                                                                          <L 1086>
                // pose_p,                                                                        <L 1087>
                // pose_c,                                                                        <L 1088>
                // m_inv_p,                                                                       <L 1089>
                // m_inv_c,                                                                       <L 1090>
                // I_inv_p,                                                                       <L 1091>
                // I_inv_c,                                                                       <L 1092>
                // linear_p,                                                                      <L 1093>
                // linear_c,                                                                      <L 1094>
                // angular_p,                                                                     <L 1095>
                // angular_c,                                                                     <L 1096>
                // lambda_in,                                                                     <L 1097>
                // compliance,                                                                    <L 1098>
                // damping,                                                                       <L 1099>
                // dt,                                                                            <L 1100>
                var_594 = compute_positional_correction(var_588, var_539, var_53, var_59, var_51, var_66, var_52, var_69, var_529, var_528, var_531, var_532, var_24, var_589, var_590, var_dt);
                // lin_delta_p += linear_p * (d_lambda * linear_relaxation)                       <L 1103>
                var_595 = wp::mul(var_594, var_linear_relaxation);
                var_596 = wp::mul(var_529, var_595);
                var_597 = wp::add(var_516, var_596);
                // ang_delta_p += angular_p * (d_lambda * angular_relaxation)                     <L 1104>
                var_598 = wp::mul(var_594, var_angular_relaxation);
                var_599 = wp::mul(var_531, var_598);
                var_600 = wp::add(var_517, var_599);
                // lin_delta_c += linear_c * (d_lambda * linear_relaxation)                       <L 1105>
                var_601 = wp::mul(var_594, var_linear_relaxation);
                var_602 = wp::mul(var_528, var_601);
                var_603 = wp::add(var_518, var_602);
                // ang_delta_c += angular_c * (d_lambda * angular_relaxation)                     <L 1106>
                var_604 = wp::mul(var_594, var_angular_relaxation);
                var_605 = wp::mul(var_532, var_604);
                var_606 = wp::add(var_519, var_605);
            }
            var_607 = wp::select(var_593, var_516, var_597);
            var_608 = wp::select(var_593, var_517, var_600);
            var_609 = wp::select(var_593, var_518, var_603);
            var_610 = wp::select(var_593, var_519, var_606);
            var_611 = wp::select(var_593, var_520, var_594);
        }
        var_612 = wp::select(var_106, var_607, var_181);
        var_613 = wp::select(var_106, var_608, var_182);
        var_614 = wp::select(var_106, var_609, var_183);
        var_615 = wp::select(var_106, var_610, var_184);
        var_616 = wp::select(var_106, var_334, var_108);
        var_617 = wp::select(var_106, var_336, var_180);
        var_618 = wp::select(var_106, var_541, var_113);
        var_619 = wp::select(var_106, var_542, var_116);
        var_620 = wp::select(var_106, var_588, var_135);
        var_621 = wp::select(var_106, var_528, var_139);
        var_622 = wp::select(var_106, var_529, var_140);
        var_623 = wp::select(var_106, var_531, var_143);
        var_624 = wp::select(var_106, var_532, var_144);
        var_625 = wp::select(var_106, var_539, var_151);
        var_626 = wp::select(var_106, var_589, var_159);
        var_627 = wp::select(var_106, var_314, var_155);
        var_628 = wp::select(var_106, var_590, var_162);
        var_629 = wp::select(var_106, var_611, var_163);
        // if (                                                                                   <L 1108>
        // type == fs5Model.JOINT_FIXED                                                           <L 1109>
        var_631 = (var_3 == var_630);
        // or type == fs5Model.JOINT_PRISMATIC                                                    <L 1110>
        var_633 = (var_3 == var_632);
        // or type == fs5Model.JOINT_REVOLUTE                                                     <L 1111>
        var_635 = (var_3 == var_634);
        // or type == fs5Model.JOINT_UNIVERSAL                                                    <L 1112>
        var_637 = (var_3 == var_636);
        // or type == fs5Model.JOINT_COMPOUND                                                     <L 1113>
        var_639 = (var_3 == var_638);
        // or type == fs5Model.JOINT_D6                                                           <L 1114>
        var_641 = (var_3 == var_640);
        var_642 = var_631 || var_633 || var_635 || var_637 || var_639 || var_641;
        if (var_642) {
            // q_p = wp.transform_get_rotation(X_wp)                                              <L 1119>
            var_643 = wp::transform_get_rotation(var_50);
            // q_c = wp.transform_get_rotation(X_wc)                                              <L 1120>
            var_644 = wp::transform_get_rotation(var_60);
            // if wp.dot(q_p, q_c) < 0.0:                                                         <L 1123>
            var_645 = wp::dot(var_643, var_644);
            var_646 = (var_645 < var_24);
            if (var_646) {
                // q_c *= -1.0                                                                    <L 1124>
                var_647 = wp::neg(var_157);
                var_648 = wp::mul(var_644, var_647);
            }
            var_649 = wp::select(var_646, var_644, var_648);
            // rel_q = wp.quat_inverse(q_p) * q_c                                                 <L 1126>
            var_650 = wp::quat_inverse(var_643);
            var_651 = wp::mul(var_650, var_649);
            // qtwist = wp.normalize(wp.quat(rel_q[0], 0.0, 0.0, rel_q[3]))                       <L 1128>
            var_652 = wp::extract(var_651, var_5);
            var_654 = wp::extract(var_651, var_653);
            var_655 = wp::quat_t<wp::float32>(var_652, var_24, var_24, var_654);
            var_656 = wp::normalize(var_655);
            // qswing = rel_q * wp.quat_inverse(qtwist)                                           <L 1129>
            var_657 = wp::quat_inverse(var_656);
            var_658 = wp::mul(var_651, var_657);
            // s = wp.sqrt(rel_q[0] * rel_q[0] + rel_q[3] * rel_q[3])                             <L 1132>
            var_659 = wp::extract(var_651, var_5);
            var_660 = wp::extract(var_651, var_5);
            var_661 = wp::mul(var_659, var_660);
            var_662 = wp::extract(var_651, var_653);
            var_663 = wp::extract(var_651, var_653);
            var_664 = wp::mul(var_662, var_663);
            var_665 = wp::add(var_661, var_664);
            var_666 = wp::sqrt(var_665);
            // invs = 1.0 / s                                                                     <L 1133>
            var_667 = wp::div(var_157, var_666);
            // invscube = invs * invs * invs                                                      <L 1134>
            var_668 = wp::mul(var_667, var_667);
            var_669 = wp::mul(var_668, var_667);
            // err_0 = 2.0 * wp.asin(wp.clamp(qtwist[0], -1.0, 1.0))                              <L 1139>
            var_671 = wp::extract(var_656, var_5);
            var_672 = wp::neg(var_157);
            var_673 = wp::clamp(var_671, var_672, var_157);
            var_674 = wp::asin(var_673);
            var_675 = wp::mul(var_670, var_674);
            // err_1 = qswing[1]                                                                  <L 1140>
            var_676 = wp::extract(var_658, var_99);
            // err_2 = qswing[2]                                                                  <L 1141>
            var_677 = wp::extract(var_658, var_277);
            // grad_0 = wp.quat(invs - rel_q[0] * rel_q[0] * invscube, 0.0, 0.0, -(rel_q[3] * rel_q[0]) * invscube)       <L 1143>
            var_678 = wp::extract(var_651, var_5);
            var_679 = wp::extract(var_651, var_5);
            var_680 = wp::mul(var_678, var_679);
            var_681 = wp::mul(var_680, var_669);
            var_682 = wp::sub(var_667, var_681);
            var_683 = wp::extract(var_651, var_653);
            var_684 = wp::extract(var_651, var_5);
            var_685 = wp::mul(var_683, var_684);
            var_686 = wp::neg(var_685);
            var_687 = wp::mul(var_686, var_669);
            var_688 = wp::quat_t<wp::float32>(var_682, var_24, var_24, var_687);
            // grad_1 = wp.quat(                                                                  <L 1144>
            // -rel_q[3] * (rel_q[3] * rel_q[2] + rel_q[0] * rel_q[1]) * invscube,                <L 1145>
            var_689 = wp::extract(var_651, var_653);
            var_690 = wp::neg(var_689);
            var_691 = wp::extract(var_651, var_653);
            var_692 = wp::extract(var_651, var_277);
            var_693 = wp::mul(var_691, var_692);
            var_694 = wp::extract(var_651, var_5);
            var_695 = wp::extract(var_651, var_99);
            var_696 = wp::mul(var_694, var_695);
            var_697 = wp::add(var_693, var_696);
            var_698 = wp::mul(var_690, var_697);
            var_699 = wp::mul(var_698, var_669);
            // rel_q[3] * invs,                                                                   <L 1146>
            var_700 = wp::extract(var_651, var_653);
            var_701 = wp::mul(var_700, var_667);
            // -rel_q[0] * invs,                                                                  <L 1147>
            var_702 = wp::extract(var_651, var_5);
            var_703 = wp::neg(var_702);
            var_704 = wp::mul(var_703, var_667);
            // rel_q[0] * (rel_q[3] * rel_q[2] + rel_q[0] * rel_q[1]) * invscube,                 <L 1148>
            var_705 = wp::extract(var_651, var_5);
            var_706 = wp::extract(var_651, var_653);
            var_707 = wp::extract(var_651, var_277);
            var_708 = wp::mul(var_706, var_707);
            var_709 = wp::extract(var_651, var_5);
            var_710 = wp::extract(var_651, var_99);
            var_711 = wp::mul(var_709, var_710);
            var_712 = wp::add(var_708, var_711);
            var_713 = wp::mul(var_705, var_712);
            var_714 = wp::mul(var_713, var_669);
            var_715 = wp::quat_t<wp::float32>(var_699, var_701, var_704, var_714);
            // grad_2 = wp.quat(                                                                  <L 1150>
            // rel_q[3] * (rel_q[3] * rel_q[1] - rel_q[0] * rel_q[2]) * invscube,                 <L 1151>
            var_716 = wp::extract(var_651, var_653);
            var_717 = wp::extract(var_651, var_653);
            var_718 = wp::extract(var_651, var_99);
            var_719 = wp::mul(var_717, var_718);
            var_720 = wp::extract(var_651, var_5);
            var_721 = wp::extract(var_651, var_277);
            var_722 = wp::mul(var_720, var_721);
            var_723 = wp::sub(var_719, var_722);
            var_724 = wp::mul(var_716, var_723);
            var_725 = wp::mul(var_724, var_669);
            // rel_q[0] * invs,                                                                   <L 1152>
            var_726 = wp::extract(var_651, var_5);
            var_727 = wp::mul(var_726, var_667);
            // rel_q[3] * invs,                                                                   <L 1153>
            var_728 = wp::extract(var_651, var_653);
            var_729 = wp::mul(var_728, var_667);
            // rel_q[0] * (rel_q[2] * rel_q[0] - rel_q[3] * rel_q[1]) * invscube,                 <L 1154>
            var_730 = wp::extract(var_651, var_5);
            var_731 = wp::extract(var_651, var_277);
            var_732 = wp::extract(var_651, var_5);
            var_733 = wp::mul(var_731, var_732);
            var_734 = wp::extract(var_651, var_653);
            var_735 = wp::extract(var_651, var_99);
            var_736 = wp::mul(var_734, var_735);
            var_737 = wp::sub(var_733, var_736);
            var_738 = wp::mul(var_730, var_737);
            var_739 = wp::mul(var_738, var_669);
            var_740 = wp::quat_t<wp::float32>(var_725, var_727, var_729, var_739);
            // grad_0 *= 2.0 / wp.abs(qtwist[3])                                                  <L 1156>
            var_741 = wp::extract(var_656, var_653);
            var_742 = wp::abs(var_741);
            var_743 = wp::div(var_670, var_742);
            var_744 = wp::mul(var_688, var_743);
            // swing_sq = qswing[3] * qswing[3]                                                   <L 1160>
            var_745 = wp::extract(var_658, var_653);
            var_746 = wp::extract(var_658, var_653);
            var_747 = wp::mul(var_745, var_746);
            // angularEps = 1.0e-4                                                                <L 1162>
            // if swing_sq + angularEps < 1.0:                                                    <L 1163>
            var_749 = wp::add(var_747, var_748);
            var_750 = (var_749 < var_157);
            if (var_750) {
                // d = wp.sqrt(1.0 - qswing[3] * qswing[3])                                       <L 1164>
                var_751 = wp::extract(var_658, var_653);
                var_752 = wp::extract(var_658, var_653);
                var_753 = wp::mul(var_751, var_752);
                var_754 = wp::sub(var_157, var_753);
                var_755 = wp::sqrt(var_754);
                // theta = 2.0 * wp.acos(wp.clamp(qswing[3], -1.0, 1.0))                          <L 1165>
                var_756 = wp::extract(var_658, var_653);
                var_757 = wp::neg(var_157);
                var_758 = wp::clamp(var_756, var_757, var_157);
                var_759 = wp::acos(var_758);
                var_760 = wp::mul(var_670, var_759);
                // scale = theta / d                                                              <L 1166>
                var_761 = wp::div(var_760, var_755);
                // err_1 *= scale                                                                 <L 1168>
                var_762 = wp::mul(var_676, var_761);
                // err_2 *= scale                                                                 <L 1169>
                var_763 = wp::mul(var_677, var_761);
                // grad_1 *= scale                                                                <L 1171>
                var_764 = wp::mul(var_715, var_761);
                // grad_2 *= scale                                                                <L 1172>
                var_765 = wp::mul(var_740, var_761);
            }
            var_766 = wp::select(var_750, var_120, var_755);
            var_767 = wp::select(var_750, var_676, var_762);
            var_768 = wp::select(var_750, var_677, var_763);
            var_769 = wp::select(var_750, var_715, var_764);
            var_770 = wp::select(var_750, var_740, var_765);
            // errs = wp.vec3(err_0, err_1, err_2)                                                <L 1174>
            var_771 = wp::vec_t<3,wp::float32>(var_675, var_767, var_768);
            // grad_x = wp.vec3(grad_0[0], grad_1[0], grad_2[0])                                  <L 1175>
            var_772 = wp::extract(var_744, var_5);
            var_773 = wp::extract(var_769, var_5);
            var_774 = wp::extract(var_770, var_5);
            var_775 = wp::vec_t<3,wp::float32>(var_772, var_773, var_774);
            // grad_y = wp.vec3(grad_0[1], grad_1[1], grad_2[1])                                  <L 1176>
            var_776 = wp::extract(var_744, var_99);
            var_777 = wp::extract(var_769, var_99);
            var_778 = wp::extract(var_770, var_99);
            var_779 = wp::vec_t<3,wp::float32>(var_776, var_777, var_778);
            // grad_z = wp.vec3(grad_0[2], grad_1[2], grad_2[2])                                  <L 1177>
            var_780 = wp::extract(var_744, var_277);
            var_781 = wp::extract(var_769, var_277);
            var_782 = wp::extract(var_770, var_277);
            var_783 = wp::vec_t<3,wp::float32>(var_780, var_781, var_782);
            // grad_w = wp.vec3(grad_0[3], grad_1[3], grad_2[3])                                  <L 1178>
            var_784 = wp::extract(var_744, var_653);
            var_785 = wp::extract(var_769, var_653);
            var_786 = wp::extract(var_770, var_653);
            var_787 = wp::vec_t<3,wp::float32>(var_784, var_785, var_786);
            // ke_sum = float(0.0)                                                                <L 1181>
            var_788 = wp::float(var_24);
            // axis_limits = wp.spatial_vector(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                      <L 1182>
            var_789 = wp::vec_t<6,wp::float32>({var_24, var_24, var_24, var_24, var_24, var_24});
            // axis_mode = wp.vec3ub(wp.uint8(0), wp.uint8(0), wp.uint8(0))                       <L 1183>
            var_790 = wp::uint8(var_5);
            var_791 = wp::uint8(var_5);
            var_792 = wp::uint8(var_5);
            var_793 = wp::vec_t<3,wp::uint8>(var_790, var_791, var_792);
            // axis_target_ke_kd = wp.mat33(0.0)                                                  <L 1184>
            var_794 = wp::mat_t<3,3,wp::float32>(var_24);
            // if ang_axis_count > 0:                                                             <L 1186>
            var_795 = (var_102 > var_5);
            if (var_795) {
                // axis_idx = axis_start + lin_axis_count                                         <L 1187>
                var_796 = wp::add(var_95, var_98);
                // axis = joint_axis[axis_idx]                                                    <L 1188>
                var_797 = wp::address(var_joint_axis, var_796);
                var_798 = wp::load(var_797);
                var_799 = wp::copy(var_798);
                // lo_temp = axis * joint_limit_lower[axis_idx]                                   <L 1189>
                var_800 = wp::address(var_joint_limit_lower, var_796);
                var_801 = wp::load(var_800);
                var_802 = wp::mul(var_799, var_801);
                // up_temp = axis * joint_limit_upper[axis_idx]                                   <L 1190>
                var_803 = wp::address(var_joint_limit_upper, var_796);
                var_804 = wp::load(var_803);
                var_805 = wp::mul(var_799, var_804);
                // axis_limits = wp.spatial_vector(vec_min(lo_temp, up_temp), vec_max(lo_temp, up_temp))       <L 1191>
                var_806 = vec_min(var_802, var_805);
                var_807 = vec_max(var_802, var_805);
                var_808 = wp::vec_t<6,wp::float32>(var_806, var_807);
                // mode = joint_axis_mode[axis_idx]                                               <L 1192>
                var_809 = wp::address(var_joint_axis_mode, var_796);
                var_810 = wp::load(var_809);
                var_811 = wp::copy(var_810);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1193>
                var_812 = (var_811 != var_209);
                if (var_812) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1194>
                    var_813 = wp::address(var_joint_target_ke, var_796);
                    var_814 = wp::load(var_813);
                    var_815 = wp::copy(var_814);
                    // kd = joint_target_kd[axis_idx]                                             <L 1195>
                    var_816 = wp::address(var_joint_target_kd, var_796);
                    var_817 = wp::load(var_816);
                    var_818 = wp::copy(var_817);
                    // target = joint_target[axis_idx]                                            <L 1196>
                    var_819 = wp::address(var_joint_target, var_796);
                    var_820 = wp::load(var_819);
                    var_821 = wp::copy(var_820);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1197>
                    var_822 = update_joint_axis_mode(var_811, var_799, var_793);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1198>
                    var_823 = update_joint_axis_target_ke_kd(var_799, var_821, var_815, var_818, var_794);
                    // ke_sum += ke                                                               <L 1199>
                    var_824 = wp::add(var_788, var_815);
                }
                var_825 = wp::select(var_812, var_627, var_815);
                var_826 = wp::select(var_812, var_788, var_824);
                var_827 = wp::select(var_812, var_793, var_822);
                var_828 = wp::select(var_812, var_794, var_823);
                var_829 = wp::select(var_812, var_321, var_818);
                var_830 = wp::select(var_812, var_591, var_821);
            }
            var_831 = wp::select(var_795, var_627, var_825);
            var_832 = wp::select(var_795, var_788, var_826);
            var_833 = wp::select(var_795, var_789, var_808);
            var_834 = wp::select(var_795, var_793, var_827);
            var_835 = wp::select(var_795, var_794, var_828);
            var_836 = wp::select(var_795, var_319, var_799);
            var_837 = wp::select(var_795, var_199, var_802);
            var_838 = wp::select(var_795, var_202, var_805);
            var_839 = wp::select(var_795, var_524, var_811);
            var_840 = wp::select(var_795, var_321, var_829);
            var_841 = wp::select(var_795, var_591, var_830);
            var_842 = wp::select(var_795, var_323, var_796);
            // if ang_axis_count > 1:                                                             <L 1200>
            var_843 = (var_102 > var_99);
            if (var_843) {
                // axis_idx = axis_start + lin_axis_count + 1                                     <L 1201>
                var_844 = wp::add(var_95, var_98);
                var_845 = wp::add(var_844, var_99);
                // axis = joint_axis[axis_idx]                                                    <L 1202>
                var_846 = wp::address(var_joint_axis, var_845);
                var_847 = wp::load(var_846);
                var_848 = wp::copy(var_847);
                // lower = joint_limit_lower[axis_idx]                                            <L 1203>
                var_849 = wp::address(var_joint_limit_lower, var_845);
                var_850 = wp::load(var_849);
                var_851 = wp::copy(var_850);
                // upper = joint_limit_upper[axis_idx]                                            <L 1204>
                var_852 = wp::address(var_joint_limit_upper, var_845);
                var_853 = wp::load(var_852);
                var_854 = wp::copy(var_853);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 1205>
                var_855 = update_joint_axis_limits(var_848, var_851, var_854, var_833);
                // mode = joint_axis_mode[axis_idx]                                               <L 1206>
                var_856 = wp::address(var_joint_axis_mode, var_845);
                var_857 = wp::load(var_856);
                var_858 = wp::copy(var_857);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1207>
                var_859 = (var_858 != var_209);
                if (var_859) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1208>
                    var_860 = wp::address(var_joint_target_ke, var_845);
                    var_861 = wp::load(var_860);
                    var_862 = wp::copy(var_861);
                    // kd = joint_target_kd[axis_idx]                                             <L 1209>
                    var_863 = wp::address(var_joint_target_kd, var_845);
                    var_864 = wp::load(var_863);
                    var_865 = wp::copy(var_864);
                    // target = joint_target[axis_idx]                                            <L 1210>
                    var_866 = wp::address(var_joint_target, var_845);
                    var_867 = wp::load(var_866);
                    var_868 = wp::copy(var_867);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1211>
                    var_869 = update_joint_axis_mode(var_858, var_848, var_834);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1212>
                    var_870 = update_joint_axis_target_ke_kd(var_848, var_868, var_862, var_865, var_835);
                    // ke_sum += ke                                                               <L 1213>
                    var_871 = wp::add(var_832, var_862);
                }
                var_872 = wp::select(var_859, var_831, var_862);
                var_873 = wp::select(var_859, var_832, var_871);
                var_874 = wp::select(var_859, var_834, var_869);
                var_875 = wp::select(var_859, var_835, var_870);
                var_876 = wp::select(var_859, var_840, var_865);
                var_877 = wp::select(var_859, var_841, var_868);
            }
            var_878 = wp::select(var_843, var_618, var_851);
            var_879 = wp::select(var_843, var_619, var_854);
            var_880 = wp::select(var_843, var_831, var_872);
            var_881 = wp::select(var_843, var_832, var_873);
            var_882 = wp::select(var_843, var_833, var_855);
            var_883 = wp::select(var_843, var_834, var_874);
            var_884 = wp::select(var_843, var_835, var_875);
            var_885 = wp::select(var_843, var_836, var_848);
            var_886 = wp::select(var_843, var_839, var_858);
            var_887 = wp::select(var_843, var_840, var_876);
            var_888 = wp::select(var_843, var_841, var_877);
            var_889 = wp::select(var_843, var_842, var_845);
            // if ang_axis_count > 2:                                                             <L 1214>
            var_890 = (var_102 > var_277);
            if (var_890) {
                // axis_idx = axis_start + lin_axis_count + 2                                     <L 1215>
                var_891 = wp::add(var_95, var_98);
                var_892 = wp::add(var_891, var_277);
                // axis = joint_axis[axis_idx]                                                    <L 1216>
                var_893 = wp::address(var_joint_axis, var_892);
                var_894 = wp::load(var_893);
                var_895 = wp::copy(var_894);
                // lower = joint_limit_lower[axis_idx]                                            <L 1217>
                var_896 = wp::address(var_joint_limit_lower, var_892);
                var_897 = wp::load(var_896);
                var_898 = wp::copy(var_897);
                // upper = joint_limit_upper[axis_idx]                                            <L 1218>
                var_899 = wp::address(var_joint_limit_upper, var_892);
                var_900 = wp::load(var_899);
                var_901 = wp::copy(var_900);
                // axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)        <L 1219>
                var_902 = update_joint_axis_limits(var_895, var_898, var_901, var_882);
                // mode = joint_axis_mode[axis_idx]                                               <L 1220>
                var_903 = wp::address(var_joint_axis_mode, var_892);
                var_904 = wp::load(var_903);
                var_905 = wp::copy(var_904);
                // if mode != JOINT_MODE_LIMIT:  # position or velocity target                    <L 1221>
                var_906 = (var_905 != var_209);
                if (var_906) {
                    // ke = joint_target_ke[axis_idx]                                             <L 1222>
                    var_907 = wp::address(var_joint_target_ke, var_892);
                    var_908 = wp::load(var_907);
                    var_909 = wp::copy(var_908);
                    // kd = joint_target_kd[axis_idx]                                             <L 1223>
                    var_910 = wp::address(var_joint_target_kd, var_892);
                    var_911 = wp::load(var_910);
                    var_912 = wp::copy(var_911);
                    // target = joint_target[axis_idx]                                            <L 1224>
                    var_913 = wp::address(var_joint_target, var_892);
                    var_914 = wp::load(var_913);
                    var_915 = wp::copy(var_914);
                    // axis_mode = update_joint_axis_mode(mode, axis, axis_mode)                  <L 1225>
                    var_916 = update_joint_axis_mode(var_905, var_895, var_883);
                    // axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)       <L 1226>
                    var_917 = update_joint_axis_target_ke_kd(var_895, var_915, var_909, var_912, var_884);
                    // ke_sum += ke                                                               <L 1227>
                    var_918 = wp::add(var_881, var_909);
                }
                var_919 = wp::select(var_906, var_880, var_909);
                var_920 = wp::select(var_906, var_881, var_918);
                var_921 = wp::select(var_906, var_883, var_916);
                var_922 = wp::select(var_906, var_884, var_917);
                var_923 = wp::select(var_906, var_887, var_912);
                var_924 = wp::select(var_906, var_888, var_915);
            }
            var_925 = wp::select(var_890, var_878, var_898);
            var_926 = wp::select(var_890, var_879, var_901);
            var_927 = wp::select(var_890, var_880, var_919);
            var_928 = wp::select(var_890, var_881, var_920);
            var_929 = wp::select(var_890, var_882, var_902);
            var_930 = wp::select(var_890, var_883, var_921);
            var_931 = wp::select(var_890, var_884, var_922);
            var_932 = wp::select(var_890, var_885, var_895);
            var_933 = wp::select(var_890, var_886, var_905);
            var_934 = wp::select(var_890, var_887, var_923);
            var_935 = wp::select(var_890, var_888, var_924);
            var_936 = wp::select(var_890, var_889, var_892);
            // axis_target = axis_target_ke_kd[0]                                                 <L 1229>
            var_937 = wp::extract(var_931, var_5);
            // axis_stiffness = axis_target_ke_kd[1]                                              <L 1230>
            var_938 = wp::extract(var_931, var_99);
            // axis_damping = axis_target_ke_kd[2]                                                <L 1231>
            var_939 = wp::extract(var_931, var_277);
            // if ke_sum > 0.0:                                                                   <L 1232>
            var_940 = (var_928 > var_24);
            if (var_940) {
                // axis_target /= ke_sum                                                          <L 1233>
                var_941 = wp::div(var_937, var_928);
            }
            var_942 = wp::select(var_940, var_937, var_941);
            // axis_limits_lower = wp.spatial_top(axis_limits)                                    <L 1234>
            var_943 = wp::spatial_top(var_929);
            // axis_limits_upper = wp.spatial_bottom(axis_limits)                                 <L 1235>
            var_944 = wp::spatial_bottom(var_929);
            // for dim in range(3):                                                               <L 1246>
            var_946 = wp::int(var_945);
            // e = errs[dim]                                                                      <L 1247>
            var_947 = wp::extract(var_771, var_946);
            // mode = axis_mode[dim]                                                              <L 1248>
            var_948 = wp::extract(var_930, var_946);
            // grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])                 <L 1251>
            var_949 = wp::extract(var_775, var_946);
            var_950 = wp::extract(var_779, var_946);
            var_951 = wp::extract(var_783, var_946);
            var_952 = wp::extract(var_787, var_946);
            var_953 = wp::quat_t<wp::float32>(var_949, var_950, var_951, var_952);
            // quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                                   <L 1253>
            var_955 = wp::mul(var_954, var_643);
            var_956 = wp::mul(var_955, var_953);
            var_957 = wp::quat_inverse(var_649);
            var_958 = wp::mul(var_956, var_957);
            // angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                               <L 1254>
            var_959 = wp::extract(var_958, var_5);
            var_960 = wp::extract(var_958, var_99);
            var_961 = wp::extract(var_958, var_277);
            var_962 = wp::vec_t<3,wp::float32>(var_959, var_960, var_961);
            // angular_p = -angular_c                                                             <L 1255>
            var_963 = wp::neg(var_962);
            // derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                     <L 1257>
            var_964 = wp::dot(var_963, var_56);
            var_965 = wp::dot(var_962, var_75);
            var_966 = wp::add(var_964, var_965);
            // err = 0.0                                                                          <L 1259>
            // compliance = angular_compliance                                                    <L 1260>
            var_967 = wp::copy(var_92);
            // damping = 0.0                                                                      <L 1261>
            // lower = axis_limits_lower[dim]                                                     <L 1264>
            var_968 = wp::extract(var_943, var_946);
            // upper = axis_limits_upper[dim]                                                     <L 1265>
            var_969 = wp::extract(var_944, var_946);
            // if e < lower:                                                                      <L 1266>
            var_970 = (var_947 < var_968);
            if (var_970) {
                // err = e - lower                                                                <L 1267>
                var_971 = wp::sub(var_947, var_968);
                // compliance = angular_compliance                                                <L 1268>
                var_972 = wp::copy(var_92);
                // damping = 0.0                                                                  <L 1269>
            }
            var_973 = wp::select(var_970, var_24, var_971);
            var_974 = wp::select(var_970, var_967, var_972);
            if (!var_970) {
                // elif e > upper:                                                                <L 1270>
                var_975 = (var_947 > var_969);
                if (var_975) {
                    // err = e - upper                                                            <L 1271>
                    var_976 = wp::sub(var_947, var_969);
                    // compliance = angular_compliance                                            <L 1272>
                    var_977 = wp::copy(var_92);
                    // damping = 0.0                                                              <L 1273>
                }
                var_978 = wp::select(var_975, var_973, var_976);
                var_979 = wp::select(var_975, var_974, var_977);
                if (!var_975) {
                    // target = axis_target[dim]                                                  <L 1275>
                    var_980 = wp::extract(var_942, var_946);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1276>
                    var_981 = (var_948 == var_370);
                    if (var_981) {
                        // target = wp.clamp(target, lower, upper)                                <L 1277>
                        var_982 = wp::clamp(var_980, var_968, var_969);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1278>
                        var_983 = wp::extract(var_938, var_946);
                        var_984 = (var_983 > var_24);
                        if (var_984) {
                            // err = e - target                                                   <L 1279>
                            var_985 = wp::sub(var_947, var_982);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1280>
                            var_986 = wp::extract(var_938, var_946);
                            var_987 = wp::div(var_157, var_986);
                        }
                        var_988 = wp::select(var_984, var_978, var_985);
                        var_989 = wp::select(var_984, var_979, var_987);
                        // damping = axis_damping[dim]                                            <L 1281>
                        var_990 = wp::extract(var_939, var_946);
                    }
                    var_991 = wp::select(var_981, var_978, var_988);
                    var_992 = wp::select(var_981, var_979, var_989);
                    var_993 = wp::select(var_981, var_24, var_990);
                    var_994 = wp::select(var_981, var_980, var_982);
                    if (!var_981) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1282>
                        var_995 = (var_948 == var_385);
                        if (var_995) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1283>
                            var_996 = wp::extract(var_938, var_946);
                            var_997 = (var_996 > var_24);
                            if (var_997) {
                                // err = (derr - target) * dt                                     <L 1284>
                                var_998 = wp::sub(var_966, var_994);
                                var_999 = wp::mul(var_998, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1285>
                                var_1000 = wp::extract(var_938, var_946);
                                var_1001 = wp::div(var_157, var_1000);
                            }
                            var_1002 = wp::select(var_997, var_991, var_999);
                            var_1003 = wp::select(var_997, var_992, var_1001);
                            // damping = axis_damping[dim]                                        <L 1286>
                            var_1004 = wp::extract(var_939, var_946);
                        }
                        var_1005 = wp::select(var_995, var_991, var_1002);
                        var_1006 = wp::select(var_995, var_992, var_1003);
                        var_1007 = wp::select(var_995, var_993, var_1004);
                    }
                    var_1008 = wp::select(var_981, var_1005, var_991);
                    var_1009 = wp::select(var_981, var_1006, var_992);
                    var_1010 = wp::select(var_981, var_1007, var_993);
                }
                var_1011 = wp::select(var_975, var_1008, var_978);
                var_1012 = wp::select(var_975, var_1009, var_979);
                var_1013 = wp::select(var_975, var_1010, var_24);
                var_1014 = wp::select(var_975, var_994, var_935);
            }
            var_1015 = wp::select(var_970, var_1011, var_973);
            var_1016 = wp::select(var_970, var_1012, var_974);
            var_1017 = wp::select(var_970, var_1013, var_24);
            var_1018 = wp::select(var_970, var_1014, var_935);
            // d_lambda = (                                                                       <L 1288>
            // compute_angular_correction(                                                        <L 1289>
            // err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt       <L 1290>
            var_1019 = compute_angular_correction(var_1015, var_966, var_53, var_59, var_52, var_69, var_963, var_962, var_24, var_1016, var_1017, var_dt);
            // * angular_relaxation                                                               <L 1292>
            var_1020 = wp::mul(var_1019, var_angular_relaxation);
            // ang_delta_p += angular_p * d_lambda                                                <L 1295>
            var_1021 = wp::mul(var_963, var_1020);
            var_1022 = wp::add(var_613, var_1021);
            // ang_delta_c += angular_c * d_lambda                                                <L 1296>
            var_1023 = wp::mul(var_962, var_1020);
            var_1024 = wp::add(var_615, var_1023);
            var_1026 = wp::int(var_1025);
            // e = errs[dim]                                                                      <L 1247>
            var_1027 = wp::extract(var_771, var_1026);
            // mode = axis_mode[dim]                                                              <L 1248>
            var_1028 = wp::extract(var_930, var_1026);
            // grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])                 <L 1251>
            var_1029 = wp::extract(var_775, var_1026);
            var_1030 = wp::extract(var_779, var_1026);
            var_1031 = wp::extract(var_783, var_1026);
            var_1032 = wp::extract(var_787, var_1026);
            var_1033 = wp::quat_t<wp::float32>(var_1029, var_1030, var_1031, var_1032);
            // quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                                   <L 1253>
            var_1034 = wp::mul(var_954, var_643);
            var_1035 = wp::mul(var_1034, var_1033);
            var_1036 = wp::quat_inverse(var_649);
            var_1037 = wp::mul(var_1035, var_1036);
            // angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                               <L 1254>
            var_1038 = wp::extract(var_1037, var_5);
            var_1039 = wp::extract(var_1037, var_99);
            var_1040 = wp::extract(var_1037, var_277);
            var_1041 = wp::vec_t<3,wp::float32>(var_1038, var_1039, var_1040);
            // angular_p = -angular_c                                                             <L 1255>
            var_1042 = wp::neg(var_1041);
            // derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                     <L 1257>
            var_1043 = wp::dot(var_1042, var_56);
            var_1044 = wp::dot(var_1041, var_75);
            var_1045 = wp::add(var_1043, var_1044);
            // err = 0.0                                                                          <L 1259>
            // compliance = angular_compliance                                                    <L 1260>
            var_1046 = wp::copy(var_92);
            // damping = 0.0                                                                      <L 1261>
            // lower = axis_limits_lower[dim]                                                     <L 1264>
            var_1047 = wp::extract(var_943, var_1026);
            // upper = axis_limits_upper[dim]                                                     <L 1265>
            var_1048 = wp::extract(var_944, var_1026);
            // if e < lower:                                                                      <L 1266>
            var_1049 = (var_1027 < var_1047);
            if (var_1049) {
                // err = e - lower                                                                <L 1267>
                var_1050 = wp::sub(var_1027, var_1047);
                // compliance = angular_compliance                                                <L 1268>
                var_1051 = wp::copy(var_92);
                // damping = 0.0                                                                  <L 1269>
            }
            var_1052 = wp::select(var_1049, var_24, var_1050);
            var_1053 = wp::select(var_1049, var_1046, var_1051);
            if (!var_1049) {
                // elif e > upper:                                                                <L 1270>
                var_1054 = (var_1027 > var_1048);
                if (var_1054) {
                    // err = e - upper                                                            <L 1271>
                    var_1055 = wp::sub(var_1027, var_1048);
                    // compliance = angular_compliance                                            <L 1272>
                    var_1056 = wp::copy(var_92);
                    // damping = 0.0                                                              <L 1273>
                }
                var_1057 = wp::select(var_1054, var_1052, var_1055);
                var_1058 = wp::select(var_1054, var_1053, var_1056);
                if (!var_1054) {
                    // target = axis_target[dim]                                                  <L 1275>
                    var_1059 = wp::extract(var_942, var_1026);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1276>
                    var_1060 = (var_1028 == var_370);
                    if (var_1060) {
                        // target = wp.clamp(target, lower, upper)                                <L 1277>
                        var_1061 = wp::clamp(var_1059, var_1047, var_1048);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1278>
                        var_1062 = wp::extract(var_938, var_1026);
                        var_1063 = (var_1062 > var_24);
                        if (var_1063) {
                            // err = e - target                                                   <L 1279>
                            var_1064 = wp::sub(var_1027, var_1061);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1280>
                            var_1065 = wp::extract(var_938, var_1026);
                            var_1066 = wp::div(var_157, var_1065);
                        }
                        var_1067 = wp::select(var_1063, var_1057, var_1064);
                        var_1068 = wp::select(var_1063, var_1058, var_1066);
                        // damping = axis_damping[dim]                                            <L 1281>
                        var_1069 = wp::extract(var_939, var_1026);
                    }
                    var_1070 = wp::select(var_1060, var_1057, var_1067);
                    var_1071 = wp::select(var_1060, var_1058, var_1068);
                    var_1072 = wp::select(var_1060, var_24, var_1069);
                    var_1073 = wp::select(var_1060, var_1059, var_1061);
                    if (!var_1060) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1282>
                        var_1074 = (var_1028 == var_385);
                        if (var_1074) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1283>
                            var_1075 = wp::extract(var_938, var_1026);
                            var_1076 = (var_1075 > var_24);
                            if (var_1076) {
                                // err = (derr - target) * dt                                     <L 1284>
                                var_1077 = wp::sub(var_1045, var_1073);
                                var_1078 = wp::mul(var_1077, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1285>
                                var_1079 = wp::extract(var_938, var_1026);
                                var_1080 = wp::div(var_157, var_1079);
                            }
                            var_1081 = wp::select(var_1076, var_1070, var_1078);
                            var_1082 = wp::select(var_1076, var_1071, var_1080);
                            // damping = axis_damping[dim]                                        <L 1286>
                            var_1083 = wp::extract(var_939, var_1026);
                        }
                        var_1084 = wp::select(var_1074, var_1070, var_1081);
                        var_1085 = wp::select(var_1074, var_1071, var_1082);
                        var_1086 = wp::select(var_1074, var_1072, var_1083);
                    }
                    var_1087 = wp::select(var_1060, var_1084, var_1070);
                    var_1088 = wp::select(var_1060, var_1085, var_1071);
                    var_1089 = wp::select(var_1060, var_1086, var_1072);
                }
                var_1090 = wp::select(var_1054, var_1087, var_1057);
                var_1091 = wp::select(var_1054, var_1088, var_1058);
                var_1092 = wp::select(var_1054, var_1089, var_24);
                var_1093 = wp::select(var_1054, var_1073, var_1018);
            }
            var_1094 = wp::select(var_1049, var_1090, var_1052);
            var_1095 = wp::select(var_1049, var_1091, var_1053);
            var_1096 = wp::select(var_1049, var_1092, var_24);
            var_1097 = wp::select(var_1049, var_1093, var_1018);
            // d_lambda = (                                                                       <L 1288>
            // compute_angular_correction(                                                        <L 1289>
            // err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt       <L 1290>
            var_1098 = compute_angular_correction(var_1094, var_1045, var_53, var_59, var_52, var_69, var_1042, var_1041, var_24, var_1095, var_1096, var_dt);
            // * angular_relaxation                                                               <L 1292>
            var_1099 = wp::mul(var_1098, var_angular_relaxation);
            // ang_delta_p += angular_p * d_lambda                                                <L 1295>
            var_1100 = wp::mul(var_1042, var_1099);
            var_1101 = wp::add(var_1022, var_1100);
            // ang_delta_c += angular_c * d_lambda                                                <L 1296>
            var_1102 = wp::mul(var_1041, var_1099);
            var_1103 = wp::add(var_1024, var_1102);
            var_1105 = wp::int(var_1104);
            // e = errs[dim]                                                                      <L 1247>
            var_1106 = wp::extract(var_771, var_1105);
            // mode = axis_mode[dim]                                                              <L 1248>
            var_1107 = wp::extract(var_930, var_1105);
            // grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])                 <L 1251>
            var_1108 = wp::extract(var_775, var_1105);
            var_1109 = wp::extract(var_779, var_1105);
            var_1110 = wp::extract(var_783, var_1105);
            var_1111 = wp::extract(var_787, var_1105);
            var_1112 = wp::quat_t<wp::float32>(var_1108, var_1109, var_1110, var_1111);
            // quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                                   <L 1253>
            var_1113 = wp::mul(var_954, var_643);
            var_1114 = wp::mul(var_1113, var_1112);
            var_1115 = wp::quat_inverse(var_649);
            var_1116 = wp::mul(var_1114, var_1115);
            // angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                               <L 1254>
            var_1117 = wp::extract(var_1116, var_5);
            var_1118 = wp::extract(var_1116, var_99);
            var_1119 = wp::extract(var_1116, var_277);
            var_1120 = wp::vec_t<3,wp::float32>(var_1117, var_1118, var_1119);
            // angular_p = -angular_c                                                             <L 1255>
            var_1121 = wp::neg(var_1120);
            // derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                     <L 1257>
            var_1122 = wp::dot(var_1121, var_56);
            var_1123 = wp::dot(var_1120, var_75);
            var_1124 = wp::add(var_1122, var_1123);
            // err = 0.0                                                                          <L 1259>
            // compliance = angular_compliance                                                    <L 1260>
            var_1125 = wp::copy(var_92);
            // damping = 0.0                                                                      <L 1261>
            // lower = axis_limits_lower[dim]                                                     <L 1264>
            var_1126 = wp::extract(var_943, var_1105);
            // upper = axis_limits_upper[dim]                                                     <L 1265>
            var_1127 = wp::extract(var_944, var_1105);
            // if e < lower:                                                                      <L 1266>
            var_1128 = (var_1106 < var_1126);
            if (var_1128) {
                // err = e - lower                                                                <L 1267>
                var_1129 = wp::sub(var_1106, var_1126);
                // compliance = angular_compliance                                                <L 1268>
                var_1130 = wp::copy(var_92);
                // damping = 0.0                                                                  <L 1269>
            }
            var_1131 = wp::select(var_1128, var_24, var_1129);
            var_1132 = wp::select(var_1128, var_1125, var_1130);
            if (!var_1128) {
                // elif e > upper:                                                                <L 1270>
                var_1133 = (var_1106 > var_1127);
                if (var_1133) {
                    // err = e - upper                                                            <L 1271>
                    var_1134 = wp::sub(var_1106, var_1127);
                    // compliance = angular_compliance                                            <L 1272>
                    var_1135 = wp::copy(var_92);
                    // damping = 0.0                                                              <L 1273>
                }
                var_1136 = wp::select(var_1133, var_1131, var_1134);
                var_1137 = wp::select(var_1133, var_1132, var_1135);
                if (!var_1133) {
                    // target = axis_target[dim]                                                  <L 1275>
                    var_1138 = wp::extract(var_942, var_1105);
                    // if mode == JOINT_MODE_TARGET_POSITION:                                     <L 1276>
                    var_1139 = (var_1107 == var_370);
                    if (var_1139) {
                        // target = wp.clamp(target, lower, upper)                                <L 1277>
                        var_1140 = wp::clamp(var_1138, var_1126, var_1127);
                        // if axis_stiffness[dim] > 0.0:                                          <L 1278>
                        var_1141 = wp::extract(var_938, var_1105);
                        var_1142 = (var_1141 > var_24);
                        if (var_1142) {
                            // err = e - target                                                   <L 1279>
                            var_1143 = wp::sub(var_1106, var_1140);
                            // compliance = 1.0 / axis_stiffness[dim]                             <L 1280>
                            var_1144 = wp::extract(var_938, var_1105);
                            var_1145 = wp::div(var_157, var_1144);
                        }
                        var_1146 = wp::select(var_1142, var_1136, var_1143);
                        var_1147 = wp::select(var_1142, var_1137, var_1145);
                        // damping = axis_damping[dim]                                            <L 1281>
                        var_1148 = wp::extract(var_939, var_1105);
                    }
                    var_1149 = wp::select(var_1139, var_1136, var_1146);
                    var_1150 = wp::select(var_1139, var_1137, var_1147);
                    var_1151 = wp::select(var_1139, var_24, var_1148);
                    var_1152 = wp::select(var_1139, var_1138, var_1140);
                    if (!var_1139) {
                        // elif mode == JOINT_MODE_TARGET_VELOCITY:                               <L 1282>
                        var_1153 = (var_1107 == var_385);
                        if (var_1153) {
                            // if axis_stiffness[dim] > 0.0:                                      <L 1283>
                            var_1154 = wp::extract(var_938, var_1105);
                            var_1155 = (var_1154 > var_24);
                            if (var_1155) {
                                // err = (derr - target) * dt                                     <L 1284>
                                var_1156 = wp::sub(var_1124, var_1152);
                                var_1157 = wp::mul(var_1156, var_dt);
                                // compliance = 1.0 / axis_stiffness[dim]                         <L 1285>
                                var_1158 = wp::extract(var_938, var_1105);
                                var_1159 = wp::div(var_157, var_1158);
                            }
                            var_1160 = wp::select(var_1155, var_1149, var_1157);
                            var_1161 = wp::select(var_1155, var_1150, var_1159);
                            // damping = axis_damping[dim]                                        <L 1286>
                            var_1162 = wp::extract(var_939, var_1105);
                        }
                        var_1163 = wp::select(var_1153, var_1149, var_1160);
                        var_1164 = wp::select(var_1153, var_1150, var_1161);
                        var_1165 = wp::select(var_1153, var_1151, var_1162);
                    }
                    var_1166 = wp::select(var_1139, var_1163, var_1149);
                    var_1167 = wp::select(var_1139, var_1164, var_1150);
                    var_1168 = wp::select(var_1139, var_1165, var_1151);
                }
                var_1169 = wp::select(var_1133, var_1166, var_1136);
                var_1170 = wp::select(var_1133, var_1167, var_1137);
                var_1171 = wp::select(var_1133, var_1168, var_24);
                var_1172 = wp::select(var_1133, var_1152, var_1097);
            }
            var_1173 = wp::select(var_1128, var_1169, var_1131);
            var_1174 = wp::select(var_1128, var_1170, var_1132);
            var_1175 = wp::select(var_1128, var_1171, var_24);
            var_1176 = wp::select(var_1128, var_1172, var_1097);
            // d_lambda = (                                                                       <L 1288>
            // compute_angular_correction(                                                        <L 1289>
            // err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt       <L 1290>
            var_1177 = compute_angular_correction(var_1173, var_1124, var_53, var_59, var_52, var_69, var_1121, var_1120, var_24, var_1174, var_1175, var_dt);
            // * angular_relaxation                                                               <L 1292>
            var_1178 = wp::mul(var_1177, var_angular_relaxation);
            // ang_delta_p += angular_p * d_lambda                                                <L 1295>
            var_1179 = wp::mul(var_1121, var_1178);
            var_1180 = wp::add(var_1101, var_1179);
            // ang_delta_c += angular_c * d_lambda                                                <L 1296>
            var_1181 = wp::mul(var_1120, var_1178);
            var_1182 = wp::add(var_1103, var_1181);
        }
        var_1183 = wp::select(var_642, var_613, var_1180);
        var_1184 = wp::select(var_642, var_615, var_1182);
        var_1185 = wp::select(var_642, var_618, var_1126);
        var_1186 = wp::select(var_642, var_619, var_1127);
        var_1187 = wp::select(var_642, var_120, var_766);
        var_1188 = wp::select(var_642, var_620, var_1173);
        var_1189 = wp::select(var_642, var_623, var_1121);
        var_1190 = wp::select(var_642, var_624, var_1120);
        var_1191 = wp::select(var_642, var_625, var_1124);
        var_1192 = wp::select(var_642, var_626, var_1174);
        var_1193 = wp::select(var_642, var_627, var_927);
        var_1194 = wp::select(var_642, var_628, var_1175);
        var_1195 = wp::select(var_642, var_629, var_1178);
        var_1196 = wp::select(var_642, var_315, var_928);
        var_1197 = wp::select(var_642, var_316, var_929);
        var_1198 = wp::select(var_642, var_317, var_930);
        var_1199 = wp::select(var_642, var_318, var_931);
        var_1200 = wp::select(var_642, var_319, var_932);
        var_1201 = wp::select(var_642, var_199, var_837);
        var_1202 = wp::select(var_642, var_202, var_838);
        var_1203 = wp::select(var_642, var_524, var_1107);
        var_1204 = wp::select(var_642, var_321, var_934);
        var_1205 = wp::select(var_642, var_591, var_1176);
        var_1206 = wp::select(var_642, var_323, var_936);
        var_1207 = wp::select(var_642, var_329, var_942);
        var_1208 = wp::select(var_642, var_325, var_938);
        var_1209 = wp::select(var_642, var_326, var_939);
        var_1210 = wp::select(var_642, var_330, var_943);
        var_1211 = wp::select(var_642, var_331, var_944);
        var_1212 = wp::select(var_642, var_522, var_1105);
        var_1213 = wp::select(var_642, var_523, var_1106);
        // if id_p >= 0:                                                                          <L 1298>
        var_1214 = (var_16 >= var_5);
        if (var_1214) {
            // wp.atomic_add(deltas, id_p, wp.spatial_vector(ang_delta_p, lin_delta_p))           <L 1299>
            var_1215 = wp::vec_t<6,wp::float32>(var_1183, var_612);
            // var_1216 = wp::atomic_add(var_deltas, var_16, var_1215);
        }
        // if id_c >= 0:                                                                          <L 1300>
        var_1217 = (var_13 >= var_5);
        if (var_1217) {
            // wp.atomic_add(deltas, id_c, wp.spatial_vector(ang_delta_c, lin_delta_c))           <L 1301>
            var_1218 = wp::vec_t<6,wp::float32>(var_1184, var_614);
            // var_1219 = wp::atomic_add(var_deltas, var_13, var_1218);
        }
        //---------
        // reverse
        if (var_1217) {
            wp::adj_atomic_add(var_deltas, var_13, var_1218, adj_deltas, adj_13, adj_1218, adj_1219);
            wp::adj_vec_t(var_1184, var_614, adj_1184, adj_614, adj_1218);
            // adj: wp.atomic_add(deltas, id_c, wp.spatial_vector(ang_delta_c, lin_delta_c))      <L 1301>
        }
        // adj: if id_c >= 0:                                                                     <L 1300>
        if (var_1214) {
            wp::adj_atomic_add(var_deltas, var_16, var_1215, adj_deltas, adj_16, adj_1215, adj_1216);
            wp::adj_vec_t(var_1183, var_612, adj_1183, adj_612, adj_1215);
            // adj: wp.atomic_add(deltas, id_p, wp.spatial_vector(ang_delta_p, lin_delta_p))      <L 1299>
        }
        // adj: if id_p >= 0:                                                                     <L 1298>
        wp::adj_select(var_642, var_523, var_1106, adj_642, adj_523, adj_1106, adj_1213);
        wp::adj_select(var_642, var_522, var_1105, adj_642, adj_522, adj_1105, adj_1212);
        wp::adj_select(var_642, var_331, var_944, adj_642, adj_331, adj_944, adj_1211);
        wp::adj_select(var_642, var_330, var_943, adj_642, adj_330, adj_943, adj_1210);
        wp::adj_select(var_642, var_326, var_939, adj_642, adj_326, adj_939, adj_1209);
        wp::adj_select(var_642, var_325, var_938, adj_642, adj_325, adj_938, adj_1208);
        wp::adj_select(var_642, var_329, var_942, adj_642, adj_329, adj_942, adj_1207);
        wp::adj_select(var_642, var_323, var_936, adj_642, adj_323, adj_936, adj_1206);
        wp::adj_select(var_642, var_591, var_1176, adj_642, adj_591, adj_1176, adj_1205);
        wp::adj_select(var_642, var_321, var_934, adj_642, adj_321, adj_934, adj_1204);
        wp::adj_select(var_642, var_524, var_1107, adj_642, adj_524, adj_1107, adj_1203);
        wp::adj_select(var_642, var_202, var_838, adj_642, adj_202, adj_838, adj_1202);
        wp::adj_select(var_642, var_199, var_837, adj_642, adj_199, adj_837, adj_1201);
        wp::adj_select(var_642, var_319, var_932, adj_642, adj_319, adj_932, adj_1200);
        wp::adj_select(var_642, var_318, var_931, adj_642, adj_318, adj_931, adj_1199);
        wp::adj_select(var_642, var_317, var_930, adj_642, adj_317, adj_930, adj_1198);
        wp::adj_select(var_642, var_316, var_929, adj_642, adj_316, adj_929, adj_1197);
        wp::adj_select(var_642, var_315, var_928, adj_642, adj_315, adj_928, adj_1196);
        wp::adj_select(var_642, var_629, var_1178, adj_642, adj_629, adj_1178, adj_1195);
        wp::adj_select(var_642, var_628, var_1175, adj_642, adj_628, adj_1175, adj_1194);
        wp::adj_select(var_642, var_627, var_927, adj_642, adj_627, adj_927, adj_1193);
        wp::adj_select(var_642, var_626, var_1174, adj_642, adj_626, adj_1174, adj_1192);
        wp::adj_select(var_642, var_625, var_1124, adj_642, adj_625, adj_1124, adj_1191);
        wp::adj_select(var_642, var_624, var_1120, adj_642, adj_624, adj_1120, adj_1190);
        wp::adj_select(var_642, var_623, var_1121, adj_642, adj_623, adj_1121, adj_1189);
        wp::adj_select(var_642, var_620, var_1173, adj_642, adj_620, adj_1173, adj_1188);
        wp::adj_select(var_642, var_120, var_766, adj_642, adj_120, adj_766, adj_1187);
        wp::adj_select(var_642, var_619, var_1127, adj_642, adj_619, adj_1127, adj_1186);
        wp::adj_select(var_642, var_618, var_1126, adj_642, adj_618, adj_1126, adj_1185);
        wp::adj_select(var_642, var_615, var_1182, adj_642, adj_615, adj_1182, adj_1184);
        wp::adj_select(var_642, var_613, var_1180, adj_642, adj_613, adj_1180, adj_1183);
        if (var_642) {
            wp::adj_add(var_1103, var_1181, adj_1103, adj_1181, adj_1182);
            wp::adj_mul(var_1120, var_1178, adj_1120, adj_1178, adj_1181);
            // adj: ang_delta_c += angular_c * d_lambda                                           <L 1296>
            wp::adj_add(var_1101, var_1179, adj_1101, adj_1179, adj_1180);
            wp::adj_mul(var_1121, var_1178, adj_1121, adj_1178, adj_1179);
            // adj: ang_delta_p += angular_p * d_lambda                                           <L 1295>
            wp::adj_mul(var_1177, var_angular_relaxation, adj_1177, adj_angular_relaxation, adj_1178);
            // adj: * angular_relaxation                                                          <L 1292>
            adj_compute_angular_correction(var_1173, var_1124, var_53, var_59, var_52, var_69, var_1121, var_1120, var_24, var_1174, var_1175, var_dt, adj_1173, adj_1124, adj_53, adj_59, adj_52, adj_69, adj_1121, adj_1120, adj_24, adj_1174, adj_1175, adj_dt, adj_1177);
            // adj: err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt  <L 1290>
            // adj: compute_angular_correction(                                                   <L 1289>
            // adj: d_lambda = (                                                                  <L 1288>
            wp::adj_select(var_1128, var_1172, var_1097, adj_1128, adj_1172, adj_1097, adj_1176);
            wp::adj_select(var_1128, var_1171, var_24, adj_1128, adj_1171, adj_24, adj_1175);
            wp::adj_select(var_1128, var_1170, var_1132, adj_1128, adj_1170, adj_1132, adj_1174);
            wp::adj_select(var_1128, var_1169, var_1131, adj_1128, adj_1169, adj_1131, adj_1173);
            if (!var_1128) {
                wp::adj_select(var_1133, var_1152, var_1097, adj_1133, adj_1152, adj_1097, adj_1172);
                wp::adj_select(var_1133, var_1168, var_24, adj_1133, adj_1168, adj_24, adj_1171);
                wp::adj_select(var_1133, var_1167, var_1137, adj_1133, adj_1167, adj_1137, adj_1170);
                wp::adj_select(var_1133, var_1166, var_1136, adj_1133, adj_1166, adj_1136, adj_1169);
                if (!var_1133) {
                    wp::adj_select(var_1139, var_1165, var_1151, adj_1139, adj_1165, adj_1151, adj_1168);
                    wp::adj_select(var_1139, var_1164, var_1150, adj_1139, adj_1164, adj_1150, adj_1167);
                    wp::adj_select(var_1139, var_1163, var_1149, adj_1139, adj_1163, adj_1149, adj_1166);
                    if (!var_1139) {
                        wp::adj_select(var_1153, var_1151, var_1162, adj_1153, adj_1151, adj_1162, adj_1165);
                        wp::adj_select(var_1153, var_1150, var_1161, adj_1153, adj_1150, adj_1161, adj_1164);
                        wp::adj_select(var_1153, var_1149, var_1160, adj_1153, adj_1149, adj_1160, adj_1163);
                        if (var_1153) {
                            wp::adj_extract(var_939, var_1105, adj_939, adj_1105, adj_1162);
                            // adj: damping = axis_damping[dim]                                   <L 1286>
                            wp::adj_select(var_1155, var_1150, var_1159, adj_1155, adj_1150, adj_1159, adj_1161);
                            wp::adj_select(var_1155, var_1149, var_1157, adj_1155, adj_1149, adj_1157, adj_1160);
                            if (var_1155) {
                                wp::adj_div(var_157, var_1158, var_1159, adj_157, adj_1158, adj_1159);
                                wp::adj_extract(var_938, var_1105, adj_938, adj_1105, adj_1158);
                                // adj: compliance = 1.0 / axis_stiffness[dim]                    <L 1285>
                                wp::adj_mul(var_1156, var_dt, adj_1156, adj_dt, adj_1157);
                                wp::adj_sub(var_1124, var_1152, adj_1124, adj_1152, adj_1156);
                                // adj: err = (derr - target) * dt                                <L 1284>
                            }
                            wp::adj_extract(var_938, var_1105, adj_938, adj_1105, adj_1154);
                            // adj: if axis_stiffness[dim] > 0.0:                                 <L 1283>
                        }
                        // adj: elif mode == JOINT_MODE_TARGET_VELOCITY:                          <L 1282>
                    }
                    wp::adj_select(var_1139, var_1138, var_1140, adj_1139, adj_1138, adj_1140, adj_1152);
                    wp::adj_select(var_1139, var_24, var_1148, adj_1139, adj_24, adj_1148, adj_1151);
                    wp::adj_select(var_1139, var_1137, var_1147, adj_1139, adj_1137, adj_1147, adj_1150);
                    wp::adj_select(var_1139, var_1136, var_1146, adj_1139, adj_1136, adj_1146, adj_1149);
                    if (var_1139) {
                        wp::adj_extract(var_939, var_1105, adj_939, adj_1105, adj_1148);
                        // adj: damping = axis_damping[dim]                                       <L 1281>
                        wp::adj_select(var_1142, var_1137, var_1145, adj_1142, adj_1137, adj_1145, adj_1147);
                        wp::adj_select(var_1142, var_1136, var_1143, adj_1142, adj_1136, adj_1143, adj_1146);
                        if (var_1142) {
                            wp::adj_div(var_157, var_1144, var_1145, adj_157, adj_1144, adj_1145);
                            wp::adj_extract(var_938, var_1105, adj_938, adj_1105, adj_1144);
                            // adj: compliance = 1.0 / axis_stiffness[dim]                        <L 1280>
                            wp::adj_sub(var_1106, var_1140, adj_1106, adj_1140, adj_1143);
                            // adj: err = e - target                                              <L 1279>
                        }
                        wp::adj_extract(var_938, var_1105, adj_938, adj_1105, adj_1141);
                        // adj: if axis_stiffness[dim] > 0.0:                                     <L 1278>
                        wp::adj_clamp(var_1138, var_1126, var_1127, adj_1138, adj_1126, adj_1127, adj_1140);
                        // adj: target = wp.clamp(target, lower, upper)                           <L 1277>
                    }
                    // adj: if mode == JOINT_MODE_TARGET_POSITION:                                <L 1276>
                    wp::adj_extract(var_942, var_1105, adj_942, adj_1105, adj_1138);
                    // adj: target = axis_target[dim]                                             <L 1275>
                }
                wp::adj_select(var_1133, var_1132, var_1135, adj_1133, adj_1132, adj_1135, adj_1137);
                wp::adj_select(var_1133, var_1131, var_1134, adj_1133, adj_1131, adj_1134, adj_1136);
                if (var_1133) {
                    // adj: damping = 0.0                                                         <L 1273>
                    wp::adj_copy(var_92, adj_92, adj_1135);
                    // adj: compliance = angular_compliance                                       <L 1272>
                    wp::adj_sub(var_1106, var_1127, adj_1106, adj_1127, adj_1134);
                    // adj: err = e - upper                                                       <L 1271>
                }
                // adj: elif e > upper:                                                           <L 1270>
            }
            wp::adj_select(var_1128, var_1125, var_1130, adj_1128, adj_1125, adj_1130, adj_1132);
            wp::adj_select(var_1128, var_24, var_1129, adj_1128, adj_24, adj_1129, adj_1131);
            if (var_1128) {
                // adj: damping = 0.0                                                             <L 1269>
                wp::adj_copy(var_92, adj_92, adj_1130);
                // adj: compliance = angular_compliance                                           <L 1268>
                wp::adj_sub(var_1106, var_1126, adj_1106, adj_1126, adj_1129);
                // adj: err = e - lower                                                           <L 1267>
            }
            // adj: if e < lower:                                                                 <L 1266>
            wp::adj_extract(var_944, var_1105, adj_944, adj_1105, adj_1127);
            // adj: upper = axis_limits_upper[dim]                                                <L 1265>
            wp::adj_extract(var_943, var_1105, adj_943, adj_1105, adj_1126);
            // adj: lower = axis_limits_lower[dim]                                                <L 1264>
            // adj: damping = 0.0                                                                 <L 1261>
            wp::adj_copy(var_92, adj_92, adj_1125);
            // adj: compliance = angular_compliance                                               <L 1260>
            // adj: err = 0.0                                                                     <L 1259>
            wp::adj_add(var_1122, var_1123, adj_1122, adj_1123, adj_1124);
            wp::adj_dot(var_1120, var_75, adj_1120, adj_75, adj_1123);
            wp::adj_dot(var_1121, var_56, adj_1121, adj_56, adj_1122);
            // adj: derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                <L 1257>
            wp::adj_neg(var_1120, adj_1120, adj_1121);
            // adj: angular_p = -angular_c                                                        <L 1255>
            wp::adj_vec_t(var_1117, var_1118, var_1119, adj_1117, adj_1118, adj_1119, adj_1120);
            wp::adj_extract(var_1116, var_277, adj_1116, adj_277, adj_1119);
            wp::adj_extract(var_1116, var_99, adj_1116, adj_99, adj_1118);
            wp::adj_extract(var_1116, var_5, adj_1116, adj_5, adj_1117);
            // adj: angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                          <L 1254>
            wp::adj_mul(var_1114, var_1115, adj_1114, adj_1115, adj_1116);
            wp::adj_quat_inverse(var_649, adj_649, adj_1115);
            wp::adj_mul(var_1113, var_1112, adj_1113, adj_1112, adj_1114);
            wp::adj_mul(var_954, var_643, adj_954, adj_643, adj_1113);
            // adj: quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                              <L 1253>
            wp::adj_quat_t(var_1108, var_1109, var_1110, var_1111, adj_1108, adj_1109, adj_1110, adj_1111, adj_1112);
            wp::adj_extract(var_787, var_1105, adj_787, adj_1105, adj_1111);
            wp::adj_extract(var_783, var_1105, adj_783, adj_1105, adj_1110);
            wp::adj_extract(var_779, var_1105, adj_779, adj_1105, adj_1109);
            wp::adj_extract(var_775, var_1105, adj_775, adj_1105, adj_1108);
            // adj: grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])            <L 1251>
            wp::adj_extract(var_930, var_1105, adj_930, adj_1105, adj_1107);
            // adj: mode = axis_mode[dim]                                                         <L 1248>
            wp::adj_extract(var_771, var_1105, adj_771, adj_1105, adj_1106);
            // adj: e = errs[dim]                                                                 <L 1247>
            wp::adj_int(var_1104, adj_1104, adj_1105);
            wp::adj_add(var_1024, var_1102, adj_1024, adj_1102, adj_1103);
            wp::adj_mul(var_1041, var_1099, adj_1041, adj_1099, adj_1102);
            // adj: ang_delta_c += angular_c * d_lambda                                           <L 1296>
            wp::adj_add(var_1022, var_1100, adj_1022, adj_1100, adj_1101);
            wp::adj_mul(var_1042, var_1099, adj_1042, adj_1099, adj_1100);
            // adj: ang_delta_p += angular_p * d_lambda                                           <L 1295>
            wp::adj_mul(var_1098, var_angular_relaxation, adj_1098, adj_angular_relaxation, adj_1099);
            // adj: * angular_relaxation                                                          <L 1292>
            adj_compute_angular_correction(var_1094, var_1045, var_53, var_59, var_52, var_69, var_1042, var_1041, var_24, var_1095, var_1096, var_dt, adj_1094, adj_1045, adj_53, adj_59, adj_52, adj_69, adj_1042, adj_1041, adj_24, adj_1095, adj_1096, adj_dt, adj_1098);
            // adj: err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt  <L 1290>
            // adj: compute_angular_correction(                                                   <L 1289>
            // adj: d_lambda = (                                                                  <L 1288>
            wp::adj_select(var_1049, var_1093, var_1018, adj_1049, adj_1093, adj_1018, adj_1097);
            wp::adj_select(var_1049, var_1092, var_24, adj_1049, adj_1092, adj_24, adj_1096);
            wp::adj_select(var_1049, var_1091, var_1053, adj_1049, adj_1091, adj_1053, adj_1095);
            wp::adj_select(var_1049, var_1090, var_1052, adj_1049, adj_1090, adj_1052, adj_1094);
            if (!var_1049) {
                wp::adj_select(var_1054, var_1073, var_1018, adj_1054, adj_1073, adj_1018, adj_1093);
                wp::adj_select(var_1054, var_1089, var_24, adj_1054, adj_1089, adj_24, adj_1092);
                wp::adj_select(var_1054, var_1088, var_1058, adj_1054, adj_1088, adj_1058, adj_1091);
                wp::adj_select(var_1054, var_1087, var_1057, adj_1054, adj_1087, adj_1057, adj_1090);
                if (!var_1054) {
                    wp::adj_select(var_1060, var_1086, var_1072, adj_1060, adj_1086, adj_1072, adj_1089);
                    wp::adj_select(var_1060, var_1085, var_1071, adj_1060, adj_1085, adj_1071, adj_1088);
                    wp::adj_select(var_1060, var_1084, var_1070, adj_1060, adj_1084, adj_1070, adj_1087);
                    if (!var_1060) {
                        wp::adj_select(var_1074, var_1072, var_1083, adj_1074, adj_1072, adj_1083, adj_1086);
                        wp::adj_select(var_1074, var_1071, var_1082, adj_1074, adj_1071, adj_1082, adj_1085);
                        wp::adj_select(var_1074, var_1070, var_1081, adj_1074, adj_1070, adj_1081, adj_1084);
                        if (var_1074) {
                            wp::adj_extract(var_939, var_1026, adj_939, adj_1026, adj_1083);
                            // adj: damping = axis_damping[dim]                                   <L 1286>
                            wp::adj_select(var_1076, var_1071, var_1080, adj_1076, adj_1071, adj_1080, adj_1082);
                            wp::adj_select(var_1076, var_1070, var_1078, adj_1076, adj_1070, adj_1078, adj_1081);
                            if (var_1076) {
                                wp::adj_div(var_157, var_1079, var_1080, adj_157, adj_1079, adj_1080);
                                wp::adj_extract(var_938, var_1026, adj_938, adj_1026, adj_1079);
                                // adj: compliance = 1.0 / axis_stiffness[dim]                    <L 1285>
                                wp::adj_mul(var_1077, var_dt, adj_1077, adj_dt, adj_1078);
                                wp::adj_sub(var_1045, var_1073, adj_1045, adj_1073, adj_1077);
                                // adj: err = (derr - target) * dt                                <L 1284>
                            }
                            wp::adj_extract(var_938, var_1026, adj_938, adj_1026, adj_1075);
                            // adj: if axis_stiffness[dim] > 0.0:                                 <L 1283>
                        }
                        // adj: elif mode == JOINT_MODE_TARGET_VELOCITY:                          <L 1282>
                    }
                    wp::adj_select(var_1060, var_1059, var_1061, adj_1060, adj_1059, adj_1061, adj_1073);
                    wp::adj_select(var_1060, var_24, var_1069, adj_1060, adj_24, adj_1069, adj_1072);
                    wp::adj_select(var_1060, var_1058, var_1068, adj_1060, adj_1058, adj_1068, adj_1071);
                    wp::adj_select(var_1060, var_1057, var_1067, adj_1060, adj_1057, adj_1067, adj_1070);
                    if (var_1060) {
                        wp::adj_extract(var_939, var_1026, adj_939, adj_1026, adj_1069);
                        // adj: damping = axis_damping[dim]                                       <L 1281>
                        wp::adj_select(var_1063, var_1058, var_1066, adj_1063, adj_1058, adj_1066, adj_1068);
                        wp::adj_select(var_1063, var_1057, var_1064, adj_1063, adj_1057, adj_1064, adj_1067);
                        if (var_1063) {
                            wp::adj_div(var_157, var_1065, var_1066, adj_157, adj_1065, adj_1066);
                            wp::adj_extract(var_938, var_1026, adj_938, adj_1026, adj_1065);
                            // adj: compliance = 1.0 / axis_stiffness[dim]                        <L 1280>
                            wp::adj_sub(var_1027, var_1061, adj_1027, adj_1061, adj_1064);
                            // adj: err = e - target                                              <L 1279>
                        }
                        wp::adj_extract(var_938, var_1026, adj_938, adj_1026, adj_1062);
                        // adj: if axis_stiffness[dim] > 0.0:                                     <L 1278>
                        wp::adj_clamp(var_1059, var_1047, var_1048, adj_1059, adj_1047, adj_1048, adj_1061);
                        // adj: target = wp.clamp(target, lower, upper)                           <L 1277>
                    }
                    // adj: if mode == JOINT_MODE_TARGET_POSITION:                                <L 1276>
                    wp::adj_extract(var_942, var_1026, adj_942, adj_1026, adj_1059);
                    // adj: target = axis_target[dim]                                             <L 1275>
                }
                wp::adj_select(var_1054, var_1053, var_1056, adj_1054, adj_1053, adj_1056, adj_1058);
                wp::adj_select(var_1054, var_1052, var_1055, adj_1054, adj_1052, adj_1055, adj_1057);
                if (var_1054) {
                    // adj: damping = 0.0                                                         <L 1273>
                    wp::adj_copy(var_92, adj_92, adj_1056);
                    // adj: compliance = angular_compliance                                       <L 1272>
                    wp::adj_sub(var_1027, var_1048, adj_1027, adj_1048, adj_1055);
                    // adj: err = e - upper                                                       <L 1271>
                }
                // adj: elif e > upper:                                                           <L 1270>
            }
            wp::adj_select(var_1049, var_1046, var_1051, adj_1049, adj_1046, adj_1051, adj_1053);
            wp::adj_select(var_1049, var_24, var_1050, adj_1049, adj_24, adj_1050, adj_1052);
            if (var_1049) {
                // adj: damping = 0.0                                                             <L 1269>
                wp::adj_copy(var_92, adj_92, adj_1051);
                // adj: compliance = angular_compliance                                           <L 1268>
                wp::adj_sub(var_1027, var_1047, adj_1027, adj_1047, adj_1050);
                // adj: err = e - lower                                                           <L 1267>
            }
            // adj: if e < lower:                                                                 <L 1266>
            wp::adj_extract(var_944, var_1026, adj_944, adj_1026, adj_1048);
            // adj: upper = axis_limits_upper[dim]                                                <L 1265>
            wp::adj_extract(var_943, var_1026, adj_943, adj_1026, adj_1047);
            // adj: lower = axis_limits_lower[dim]                                                <L 1264>
            // adj: damping = 0.0                                                                 <L 1261>
            wp::adj_copy(var_92, adj_92, adj_1046);
            // adj: compliance = angular_compliance                                               <L 1260>
            // adj: err = 0.0                                                                     <L 1259>
            wp::adj_add(var_1043, var_1044, adj_1043, adj_1044, adj_1045);
            wp::adj_dot(var_1041, var_75, adj_1041, adj_75, adj_1044);
            wp::adj_dot(var_1042, var_56, adj_1042, adj_56, adj_1043);
            // adj: derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                <L 1257>
            wp::adj_neg(var_1041, adj_1041, adj_1042);
            // adj: angular_p = -angular_c                                                        <L 1255>
            wp::adj_vec_t(var_1038, var_1039, var_1040, adj_1038, adj_1039, adj_1040, adj_1041);
            wp::adj_extract(var_1037, var_277, adj_1037, adj_277, adj_1040);
            wp::adj_extract(var_1037, var_99, adj_1037, adj_99, adj_1039);
            wp::adj_extract(var_1037, var_5, adj_1037, adj_5, adj_1038);
            // adj: angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                          <L 1254>
            wp::adj_mul(var_1035, var_1036, adj_1035, adj_1036, adj_1037);
            wp::adj_quat_inverse(var_649, adj_649, adj_1036);
            wp::adj_mul(var_1034, var_1033, adj_1034, adj_1033, adj_1035);
            wp::adj_mul(var_954, var_643, adj_954, adj_643, adj_1034);
            // adj: quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                              <L 1253>
            wp::adj_quat_t(var_1029, var_1030, var_1031, var_1032, adj_1029, adj_1030, adj_1031, adj_1032, adj_1033);
            wp::adj_extract(var_787, var_1026, adj_787, adj_1026, adj_1032);
            wp::adj_extract(var_783, var_1026, adj_783, adj_1026, adj_1031);
            wp::adj_extract(var_779, var_1026, adj_779, adj_1026, adj_1030);
            wp::adj_extract(var_775, var_1026, adj_775, adj_1026, adj_1029);
            // adj: grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])            <L 1251>
            wp::adj_extract(var_930, var_1026, adj_930, adj_1026, adj_1028);
            // adj: mode = axis_mode[dim]                                                         <L 1248>
            wp::adj_extract(var_771, var_1026, adj_771, adj_1026, adj_1027);
            // adj: e = errs[dim]                                                                 <L 1247>
            wp::adj_int(var_1025, adj_1025, adj_1026);
            wp::adj_add(var_615, var_1023, adj_615, adj_1023, adj_1024);
            wp::adj_mul(var_962, var_1020, adj_962, adj_1020, adj_1023);
            // adj: ang_delta_c += angular_c * d_lambda                                           <L 1296>
            wp::adj_add(var_613, var_1021, adj_613, adj_1021, adj_1022);
            wp::adj_mul(var_963, var_1020, adj_963, adj_1020, adj_1021);
            // adj: ang_delta_p += angular_p * d_lambda                                           <L 1295>
            wp::adj_mul(var_1019, var_angular_relaxation, adj_1019, adj_angular_relaxation, adj_1020);
            // adj: * angular_relaxation                                                          <L 1292>
            adj_compute_angular_correction(var_1015, var_966, var_53, var_59, var_52, var_69, var_963, var_962, var_24, var_1016, var_1017, var_dt, adj_1015, adj_966, adj_53, adj_59, adj_52, adj_69, adj_963, adj_962, adj_24, adj_1016, adj_1017, adj_dt, adj_1019);
            // adj: err, derr, pose_p, pose_c, I_inv_p, I_inv_c, angular_p, angular_c, 0.0, compliance, damping, dt  <L 1290>
            // adj: compute_angular_correction(                                                   <L 1289>
            // adj: d_lambda = (                                                                  <L 1288>
            wp::adj_select(var_970, var_1014, var_935, adj_970, adj_1014, adj_935, adj_1018);
            wp::adj_select(var_970, var_1013, var_24, adj_970, adj_1013, adj_24, adj_1017);
            wp::adj_select(var_970, var_1012, var_974, adj_970, adj_1012, adj_974, adj_1016);
            wp::adj_select(var_970, var_1011, var_973, adj_970, adj_1011, adj_973, adj_1015);
            if (!var_970) {
                wp::adj_select(var_975, var_994, var_935, adj_975, adj_994, adj_935, adj_1014);
                wp::adj_select(var_975, var_1010, var_24, adj_975, adj_1010, adj_24, adj_1013);
                wp::adj_select(var_975, var_1009, var_979, adj_975, adj_1009, adj_979, adj_1012);
                wp::adj_select(var_975, var_1008, var_978, adj_975, adj_1008, adj_978, adj_1011);
                if (!var_975) {
                    wp::adj_select(var_981, var_1007, var_993, adj_981, adj_1007, adj_993, adj_1010);
                    wp::adj_select(var_981, var_1006, var_992, adj_981, adj_1006, adj_992, adj_1009);
                    wp::adj_select(var_981, var_1005, var_991, adj_981, adj_1005, adj_991, adj_1008);
                    if (!var_981) {
                        wp::adj_select(var_995, var_993, var_1004, adj_995, adj_993, adj_1004, adj_1007);
                        wp::adj_select(var_995, var_992, var_1003, adj_995, adj_992, adj_1003, adj_1006);
                        wp::adj_select(var_995, var_991, var_1002, adj_995, adj_991, adj_1002, adj_1005);
                        if (var_995) {
                            wp::adj_extract(var_939, var_946, adj_939, adj_946, adj_1004);
                            // adj: damping = axis_damping[dim]                                   <L 1286>
                            wp::adj_select(var_997, var_992, var_1001, adj_997, adj_992, adj_1001, adj_1003);
                            wp::adj_select(var_997, var_991, var_999, adj_997, adj_991, adj_999, adj_1002);
                            if (var_997) {
                                wp::adj_div(var_157, var_1000, var_1001, adj_157, adj_1000, adj_1001);
                                wp::adj_extract(var_938, var_946, adj_938, adj_946, adj_1000);
                                // adj: compliance = 1.0 / axis_stiffness[dim]                    <L 1285>
                                wp::adj_mul(var_998, var_dt, adj_998, adj_dt, adj_999);
                                wp::adj_sub(var_966, var_994, adj_966, adj_994, adj_998);
                                // adj: err = (derr - target) * dt                                <L 1284>
                            }
                            wp::adj_extract(var_938, var_946, adj_938, adj_946, adj_996);
                            // adj: if axis_stiffness[dim] > 0.0:                                 <L 1283>
                        }
                        // adj: elif mode == JOINT_MODE_TARGET_VELOCITY:                          <L 1282>
                    }
                    wp::adj_select(var_981, var_980, var_982, adj_981, adj_980, adj_982, adj_994);
                    wp::adj_select(var_981, var_24, var_990, adj_981, adj_24, adj_990, adj_993);
                    wp::adj_select(var_981, var_979, var_989, adj_981, adj_979, adj_989, adj_992);
                    wp::adj_select(var_981, var_978, var_988, adj_981, adj_978, adj_988, adj_991);
                    if (var_981) {
                        wp::adj_extract(var_939, var_946, adj_939, adj_946, adj_990);
                        // adj: damping = axis_damping[dim]                                       <L 1281>
                        wp::adj_select(var_984, var_979, var_987, adj_984, adj_979, adj_987, adj_989);
                        wp::adj_select(var_984, var_978, var_985, adj_984, adj_978, adj_985, adj_988);
                        if (var_984) {
                            wp::adj_div(var_157, var_986, var_987, adj_157, adj_986, adj_987);
                            wp::adj_extract(var_938, var_946, adj_938, adj_946, adj_986);
                            // adj: compliance = 1.0 / axis_stiffness[dim]                        <L 1280>
                            wp::adj_sub(var_947, var_982, adj_947, adj_982, adj_985);
                            // adj: err = e - target                                              <L 1279>
                        }
                        wp::adj_extract(var_938, var_946, adj_938, adj_946, adj_983);
                        // adj: if axis_stiffness[dim] > 0.0:                                     <L 1278>
                        wp::adj_clamp(var_980, var_968, var_969, adj_980, adj_968, adj_969, adj_982);
                        // adj: target = wp.clamp(target, lower, upper)                           <L 1277>
                    }
                    // adj: if mode == JOINT_MODE_TARGET_POSITION:                                <L 1276>
                    wp::adj_extract(var_942, var_946, adj_942, adj_946, adj_980);
                    // adj: target = axis_target[dim]                                             <L 1275>
                }
                wp::adj_select(var_975, var_974, var_977, adj_975, adj_974, adj_977, adj_979);
                wp::adj_select(var_975, var_973, var_976, adj_975, adj_973, adj_976, adj_978);
                if (var_975) {
                    // adj: damping = 0.0                                                         <L 1273>
                    wp::adj_copy(var_92, adj_92, adj_977);
                    // adj: compliance = angular_compliance                                       <L 1272>
                    wp::adj_sub(var_947, var_969, adj_947, adj_969, adj_976);
                    // adj: err = e - upper                                                       <L 1271>
                }
                // adj: elif e > upper:                                                           <L 1270>
            }
            wp::adj_select(var_970, var_967, var_972, adj_970, adj_967, adj_972, adj_974);
            wp::adj_select(var_970, var_24, var_971, adj_970, adj_24, adj_971, adj_973);
            if (var_970) {
                // adj: damping = 0.0                                                             <L 1269>
                wp::adj_copy(var_92, adj_92, adj_972);
                // adj: compliance = angular_compliance                                           <L 1268>
                wp::adj_sub(var_947, var_968, adj_947, adj_968, adj_971);
                // adj: err = e - lower                                                           <L 1267>
            }
            // adj: if e < lower:                                                                 <L 1266>
            wp::adj_extract(var_944, var_946, adj_944, adj_946, adj_969);
            // adj: upper = axis_limits_upper[dim]                                                <L 1265>
            wp::adj_extract(var_943, var_946, adj_943, adj_946, adj_968);
            // adj: lower = axis_limits_lower[dim]                                                <L 1264>
            // adj: damping = 0.0                                                                 <L 1261>
            wp::adj_copy(var_92, adj_92, adj_967);
            // adj: compliance = angular_compliance                                               <L 1260>
            // adj: err = 0.0                                                                     <L 1259>
            wp::adj_add(var_964, var_965, adj_964, adj_965, adj_966);
            wp::adj_dot(var_962, var_75, adj_962, adj_75, adj_965);
            wp::adj_dot(var_963, var_56, adj_963, adj_56, adj_964);
            // adj: derr = wp.dot(angular_p, omega_p) + wp.dot(angular_c, omega_c)                <L 1257>
            wp::adj_neg(var_962, adj_962, adj_963);
            // adj: angular_p = -angular_c                                                        <L 1255>
            wp::adj_vec_t(var_959, var_960, var_961, adj_959, adj_960, adj_961, adj_962);
            wp::adj_extract(var_958, var_277, adj_958, adj_277, adj_961);
            wp::adj_extract(var_958, var_99, adj_958, adj_99, adj_960);
            wp::adj_extract(var_958, var_5, adj_958, adj_5, adj_959);
            // adj: angular_c = wp.vec3(quat_c[0], quat_c[1], quat_c[2])                          <L 1254>
            wp::adj_mul(var_956, var_957, adj_956, adj_957, adj_958);
            wp::adj_quat_inverse(var_649, adj_649, adj_957);
            wp::adj_mul(var_955, var_953, adj_955, adj_953, adj_956);
            wp::adj_mul(var_954, var_643, adj_954, adj_643, adj_955);
            // adj: quat_c = 0.5 * q_p * grad * wp.quat_inverse(q_c)                              <L 1253>
            wp::adj_quat_t(var_949, var_950, var_951, var_952, adj_949, adj_950, adj_951, adj_952, adj_953);
            wp::adj_extract(var_787, var_946, adj_787, adj_946, adj_952);
            wp::adj_extract(var_783, var_946, adj_783, adj_946, adj_951);
            wp::adj_extract(var_779, var_946, adj_779, adj_946, adj_950);
            wp::adj_extract(var_775, var_946, adj_775, adj_946, adj_949);
            // adj: grad = wp.quat(grad_x[dim], grad_y[dim], grad_z[dim], grad_w[dim])            <L 1251>
            wp::adj_extract(var_930, var_946, adj_930, adj_946, adj_948);
            // adj: mode = axis_mode[dim]                                                         <L 1248>
            wp::adj_extract(var_771, var_946, adj_771, adj_946, adj_947);
            // adj: e = errs[dim]                                                                 <L 1247>
            wp::adj_int(var_945, adj_945, adj_946);
            // adj: for dim in range(3):                                                          <L 1246>
            wp::adj_spatial_bottom(var_929, adj_929, adj_944);
            // adj: axis_limits_upper = wp.spatial_bottom(axis_limits)                            <L 1235>
            wp::adj_spatial_top(var_929, adj_929, adj_943);
            // adj: axis_limits_lower = wp.spatial_top(axis_limits)                               <L 1234>
            wp::adj_select(var_940, var_937, var_941, adj_940, adj_937, adj_941, adj_942);
            if (var_940) {
                wp::adj_div(var_937, var_928, adj_937, adj_928, adj_941);
                // adj: axis_target /= ke_sum                                                     <L 1233>
            }
            // adj: if ke_sum > 0.0:                                                              <L 1232>
            wp::adj_extract(var_931, var_277, adj_931, adj_277, adj_939);
            // adj: axis_damping = axis_target_ke_kd[2]                                           <L 1231>
            wp::adj_extract(var_931, var_99, adj_931, adj_99, adj_938);
            // adj: axis_stiffness = axis_target_ke_kd[1]                                         <L 1230>
            wp::adj_extract(var_931, var_5, adj_931, adj_5, adj_937);
            // adj: axis_target = axis_target_ke_kd[0]                                            <L 1229>
            wp::adj_select(var_890, var_889, var_892, adj_890, adj_889, adj_892, adj_936);
            wp::adj_select(var_890, var_888, var_924, adj_890, adj_888, adj_924, adj_935);
            wp::adj_select(var_890, var_887, var_923, adj_890, adj_887, adj_923, adj_934);
            wp::adj_select(var_890, var_886, var_905, adj_890, adj_886, adj_905, adj_933);
            wp::adj_select(var_890, var_885, var_895, adj_890, adj_885, adj_895, adj_932);
            wp::adj_select(var_890, var_884, var_922, adj_890, adj_884, adj_922, adj_931);
            wp::adj_select(var_890, var_883, var_921, adj_890, adj_883, adj_921, adj_930);
            wp::adj_select(var_890, var_882, var_902, adj_890, adj_882, adj_902, adj_929);
            wp::adj_select(var_890, var_881, var_920, adj_890, adj_881, adj_920, adj_928);
            wp::adj_select(var_890, var_880, var_919, adj_890, adj_880, adj_919, adj_927);
            wp::adj_select(var_890, var_879, var_901, adj_890, adj_879, adj_901, adj_926);
            wp::adj_select(var_890, var_878, var_898, adj_890, adj_878, adj_898, adj_925);
            if (var_890) {
                wp::adj_select(var_906, var_888, var_915, adj_906, adj_888, adj_915, adj_924);
                wp::adj_select(var_906, var_887, var_912, adj_906, adj_887, adj_912, adj_923);
                wp::adj_select(var_906, var_884, var_917, adj_906, adj_884, adj_917, adj_922);
                wp::adj_select(var_906, var_883, var_916, adj_906, adj_883, adj_916, adj_921);
                wp::adj_select(var_906, var_881, var_918, adj_906, adj_881, adj_918, adj_920);
                wp::adj_select(var_906, var_880, var_909, adj_906, adj_880, adj_909, adj_919);
                if (var_906) {
                    wp::adj_add(var_881, var_909, adj_881, adj_909, adj_918);
                    // adj: ke_sum += ke                                                          <L 1227>
                    adj_update_joint_axis_target_ke_kd(var_895, var_915, var_909, var_912, var_884, adj_895, adj_915, adj_909, adj_912, adj_884, adj_917);
                    // adj: axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)  <L 1226>
                    adj_update_joint_axis_mode(var_905, var_895, var_883, adj_905, adj_895, adj_883, adj_916);
                    // adj: axis_mode = update_joint_axis_mode(mode, axis, axis_mode)             <L 1225>
                    wp::adj_copy(var_914, adj_913, adj_915);
                    wp::adj_load(var_913, adj_913, adj_914);
                    wp::adj_address(var_joint_target, var_892, adj_joint_target, adj_892, adj_913);
                    // adj: target = joint_target[axis_idx]                                       <L 1224>
                    wp::adj_copy(var_911, adj_910, adj_912);
                    wp::adj_load(var_910, adj_910, adj_911);
                    wp::adj_address(var_joint_target_kd, var_892, adj_joint_target_kd, adj_892, adj_910);
                    // adj: kd = joint_target_kd[axis_idx]                                        <L 1223>
                    wp::adj_copy(var_908, adj_907, adj_909);
                    wp::adj_load(var_907, adj_907, adj_908);
                    wp::adj_address(var_joint_target_ke, var_892, adj_joint_target_ke, adj_892, adj_907);
                    // adj: ke = joint_target_ke[axis_idx]                                        <L 1222>
                }
                // adj: if mode != JOINT_MODE_LIMIT:  # position or velocity target               <L 1221>
                wp::adj_copy(var_904, adj_903, adj_905);
                wp::adj_load(var_903, adj_903, adj_904);
                wp::adj_address(var_joint_axis_mode, var_892, adj_joint_axis_mode, adj_892, adj_903);
                // adj: mode = joint_axis_mode[axis_idx]                                          <L 1220>
                adj_update_joint_axis_limits(var_895, var_898, var_901, var_882, adj_895, adj_898, adj_901, adj_882, adj_902);
                // adj: axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)   <L 1219>
                wp::adj_copy(var_900, adj_899, adj_901);
                wp::adj_load(var_899, adj_899, adj_900);
                wp::adj_address(var_joint_limit_upper, var_892, adj_joint_limit_upper, adj_892, adj_899);
                // adj: upper = joint_limit_upper[axis_idx]                                       <L 1218>
                wp::adj_copy(var_897, adj_896, adj_898);
                wp::adj_load(var_896, adj_896, adj_897);
                wp::adj_address(var_joint_limit_lower, var_892, adj_joint_limit_lower, adj_892, adj_896);
                // adj: lower = joint_limit_lower[axis_idx]                                       <L 1217>
                wp::adj_copy(var_894, adj_893, adj_895);
                wp::adj_load(var_893, adj_893, adj_894);
                wp::adj_address(var_joint_axis, var_892, adj_joint_axis, adj_892, adj_893);
                // adj: axis = joint_axis[axis_idx]                                               <L 1216>
                wp::adj_add(var_891, var_277, adj_891, adj_277, adj_892);
                wp::adj_add(var_95, var_98, adj_95, adj_98, adj_891);
                // adj: axis_idx = axis_start + lin_axis_count + 2                                <L 1215>
            }
            // adj: if ang_axis_count > 2:                                                        <L 1214>
            wp::adj_select(var_843, var_842, var_845, adj_843, adj_842, adj_845, adj_889);
            wp::adj_select(var_843, var_841, var_877, adj_843, adj_841, adj_877, adj_888);
            wp::adj_select(var_843, var_840, var_876, adj_843, adj_840, adj_876, adj_887);
            wp::adj_select(var_843, var_839, var_858, adj_843, adj_839, adj_858, adj_886);
            wp::adj_select(var_843, var_836, var_848, adj_843, adj_836, adj_848, adj_885);
            wp::adj_select(var_843, var_835, var_875, adj_843, adj_835, adj_875, adj_884);
            wp::adj_select(var_843, var_834, var_874, adj_843, adj_834, adj_874, adj_883);
            wp::adj_select(var_843, var_833, var_855, adj_843, adj_833, adj_855, adj_882);
            wp::adj_select(var_843, var_832, var_873, adj_843, adj_832, adj_873, adj_881);
            wp::adj_select(var_843, var_831, var_872, adj_843, adj_831, adj_872, adj_880);
            wp::adj_select(var_843, var_619, var_854, adj_843, adj_619, adj_854, adj_879);
            wp::adj_select(var_843, var_618, var_851, adj_843, adj_618, adj_851, adj_878);
            if (var_843) {
                wp::adj_select(var_859, var_841, var_868, adj_859, adj_841, adj_868, adj_877);
                wp::adj_select(var_859, var_840, var_865, adj_859, adj_840, adj_865, adj_876);
                wp::adj_select(var_859, var_835, var_870, adj_859, adj_835, adj_870, adj_875);
                wp::adj_select(var_859, var_834, var_869, adj_859, adj_834, adj_869, adj_874);
                wp::adj_select(var_859, var_832, var_871, adj_859, adj_832, adj_871, adj_873);
                wp::adj_select(var_859, var_831, var_862, adj_859, adj_831, adj_862, adj_872);
                if (var_859) {
                    wp::adj_add(var_832, var_862, adj_832, adj_862, adj_871);
                    // adj: ke_sum += ke                                                          <L 1213>
                    adj_update_joint_axis_target_ke_kd(var_848, var_868, var_862, var_865, var_835, adj_848, adj_868, adj_862, adj_865, adj_835, adj_870);
                    // adj: axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)  <L 1212>
                    adj_update_joint_axis_mode(var_858, var_848, var_834, adj_858, adj_848, adj_834, adj_869);
                    // adj: axis_mode = update_joint_axis_mode(mode, axis, axis_mode)             <L 1211>
                    wp::adj_copy(var_867, adj_866, adj_868);
                    wp::adj_load(var_866, adj_866, adj_867);
                    wp::adj_address(var_joint_target, var_845, adj_joint_target, adj_845, adj_866);
                    // adj: target = joint_target[axis_idx]                                       <L 1210>
                    wp::adj_copy(var_864, adj_863, adj_865);
                    wp::adj_load(var_863, adj_863, adj_864);
                    wp::adj_address(var_joint_target_kd, var_845, adj_joint_target_kd, adj_845, adj_863);
                    // adj: kd = joint_target_kd[axis_idx]                                        <L 1209>
                    wp::adj_copy(var_861, adj_860, adj_862);
                    wp::adj_load(var_860, adj_860, adj_861);
                    wp::adj_address(var_joint_target_ke, var_845, adj_joint_target_ke, adj_845, adj_860);
                    // adj: ke = joint_target_ke[axis_idx]                                        <L 1208>
                }
                // adj: if mode != JOINT_MODE_LIMIT:  # position or velocity target               <L 1207>
                wp::adj_copy(var_857, adj_856, adj_858);
                wp::adj_load(var_856, adj_856, adj_857);
                wp::adj_address(var_joint_axis_mode, var_845, adj_joint_axis_mode, adj_845, adj_856);
                // adj: mode = joint_axis_mode[axis_idx]                                          <L 1206>
                adj_update_joint_axis_limits(var_848, var_851, var_854, var_833, adj_848, adj_851, adj_854, adj_833, adj_855);
                // adj: axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)   <L 1205>
                wp::adj_copy(var_853, adj_852, adj_854);
                wp::adj_load(var_852, adj_852, adj_853);
                wp::adj_address(var_joint_limit_upper, var_845, adj_joint_limit_upper, adj_845, adj_852);
                // adj: upper = joint_limit_upper[axis_idx]                                       <L 1204>
                wp::adj_copy(var_850, adj_849, adj_851);
                wp::adj_load(var_849, adj_849, adj_850);
                wp::adj_address(var_joint_limit_lower, var_845, adj_joint_limit_lower, adj_845, adj_849);
                // adj: lower = joint_limit_lower[axis_idx]                                       <L 1203>
                wp::adj_copy(var_847, adj_846, adj_848);
                wp::adj_load(var_846, adj_846, adj_847);
                wp::adj_address(var_joint_axis, var_845, adj_joint_axis, adj_845, adj_846);
                // adj: axis = joint_axis[axis_idx]                                               <L 1202>
                wp::adj_add(var_844, var_99, adj_844, adj_99, adj_845);
                wp::adj_add(var_95, var_98, adj_95, adj_98, adj_844);
                // adj: axis_idx = axis_start + lin_axis_count + 1                                <L 1201>
            }
            // adj: if ang_axis_count > 1:                                                        <L 1200>
            wp::adj_select(var_795, var_323, var_796, adj_795, adj_323, adj_796, adj_842);
            wp::adj_select(var_795, var_591, var_830, adj_795, adj_591, adj_830, adj_841);
            wp::adj_select(var_795, var_321, var_829, adj_795, adj_321, adj_829, adj_840);
            wp::adj_select(var_795, var_524, var_811, adj_795, adj_524, adj_811, adj_839);
            wp::adj_select(var_795, var_202, var_805, adj_795, adj_202, adj_805, adj_838);
            wp::adj_select(var_795, var_199, var_802, adj_795, adj_199, adj_802, adj_837);
            wp::adj_select(var_795, var_319, var_799, adj_795, adj_319, adj_799, adj_836);
            wp::adj_select(var_795, var_794, var_828, adj_795, adj_794, adj_828, adj_835);
            wp::adj_select(var_795, var_793, var_827, adj_795, adj_793, adj_827, adj_834);
            wp::adj_select(var_795, var_789, var_808, adj_795, adj_789, adj_808, adj_833);
            wp::adj_select(var_795, var_788, var_826, adj_795, adj_788, adj_826, adj_832);
            wp::adj_select(var_795, var_627, var_825, adj_795, adj_627, adj_825, adj_831);
            if (var_795) {
                wp::adj_select(var_812, var_591, var_821, adj_812, adj_591, adj_821, adj_830);
                wp::adj_select(var_812, var_321, var_818, adj_812, adj_321, adj_818, adj_829);
                wp::adj_select(var_812, var_794, var_823, adj_812, adj_794, adj_823, adj_828);
                wp::adj_select(var_812, var_793, var_822, adj_812, adj_793, adj_822, adj_827);
                wp::adj_select(var_812, var_788, var_824, adj_812, adj_788, adj_824, adj_826);
                wp::adj_select(var_812, var_627, var_815, adj_812, adj_627, adj_815, adj_825);
                if (var_812) {
                    wp::adj_add(var_788, var_815, adj_788, adj_815, adj_824);
                    // adj: ke_sum += ke                                                          <L 1199>
                    adj_update_joint_axis_target_ke_kd(var_799, var_821, var_815, var_818, var_794, adj_799, adj_821, adj_815, adj_818, adj_794, adj_823);
                    // adj: axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)  <L 1198>
                    adj_update_joint_axis_mode(var_811, var_799, var_793, adj_811, adj_799, adj_793, adj_822);
                    // adj: axis_mode = update_joint_axis_mode(mode, axis, axis_mode)             <L 1197>
                    wp::adj_copy(var_820, adj_819, adj_821);
                    wp::adj_load(var_819, adj_819, adj_820);
                    wp::adj_address(var_joint_target, var_796, adj_joint_target, adj_796, adj_819);
                    // adj: target = joint_target[axis_idx]                                       <L 1196>
                    wp::adj_copy(var_817, adj_816, adj_818);
                    wp::adj_load(var_816, adj_816, adj_817);
                    wp::adj_address(var_joint_target_kd, var_796, adj_joint_target_kd, adj_796, adj_816);
                    // adj: kd = joint_target_kd[axis_idx]                                        <L 1195>
                    wp::adj_copy(var_814, adj_813, adj_815);
                    wp::adj_load(var_813, adj_813, adj_814);
                    wp::adj_address(var_joint_target_ke, var_796, adj_joint_target_ke, adj_796, adj_813);
                    // adj: ke = joint_target_ke[axis_idx]                                        <L 1194>
                }
                // adj: if mode != JOINT_MODE_LIMIT:  # position or velocity target               <L 1193>
                wp::adj_copy(var_810, adj_809, adj_811);
                wp::adj_load(var_809, adj_809, adj_810);
                wp::adj_address(var_joint_axis_mode, var_796, adj_joint_axis_mode, adj_796, adj_809);
                // adj: mode = joint_axis_mode[axis_idx]                                          <L 1192>
                wp::adj_vec_t(var_806, var_807, adj_806, adj_807, adj_808);
                adj_vec_max(var_802, var_805, adj_802, adj_805, adj_807);
                adj_vec_min(var_802, var_805, adj_802, adj_805, adj_806);
                // adj: axis_limits = wp.spatial_vector(vec_min(lo_temp, up_temp), vec_max(lo_temp, up_temp))  <L 1191>
                wp::adj_mul(var_799, var_804, adj_799, adj_803, adj_805);
                wp::adj_load(var_803, adj_803, adj_804);
                wp::adj_address(var_joint_limit_upper, var_796, adj_joint_limit_upper, adj_796, adj_803);
                // adj: up_temp = axis * joint_limit_upper[axis_idx]                              <L 1190>
                wp::adj_mul(var_799, var_801, adj_799, adj_800, adj_802);
                wp::adj_load(var_800, adj_800, adj_801);
                wp::adj_address(var_joint_limit_lower, var_796, adj_joint_limit_lower, adj_796, adj_800);
                // adj: lo_temp = axis * joint_limit_lower[axis_idx]                              <L 1189>
                wp::adj_copy(var_798, adj_797, adj_799);
                wp::adj_load(var_797, adj_797, adj_798);
                wp::adj_address(var_joint_axis, var_796, adj_joint_axis, adj_796, adj_797);
                // adj: axis = joint_axis[axis_idx]                                               <L 1188>
                wp::adj_add(var_95, var_98, adj_95, adj_98, adj_796);
                // adj: axis_idx = axis_start + lin_axis_count                                    <L 1187>
            }
            // adj: if ang_axis_count > 0:                                                        <L 1186>
            wp::adj_mat_t(var_24, adj_24, adj_794);
            // adj: axis_target_ke_kd = wp.mat33(0.0)                                             <L 1184>
            wp::adj_vec_t(var_790, var_791, var_792, adj_790, adj_791, adj_792, adj_793);
            wp::adj_uint8(var_5, adj_5, adj_792);
            wp::adj_uint8(var_5, adj_5, adj_791);
            wp::adj_uint8(var_5, adj_5, adj_790);
            // adj: axis_mode = wp.vec3ub(wp.uint8(0), wp.uint8(0), wp.uint8(0))                  <L 1183>
            wp::adj_vec_t({var_24, var_24, var_24, var_24, var_24, var_24}, {&adj_24, &adj_24, &adj_24, &adj_24, &adj_24, &adj_24}, adj_789);
            // adj: axis_limits = wp.spatial_vector(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                 <L 1182>
            wp::adj_float(var_24, adj_24, adj_788);
            // adj: ke_sum = float(0.0)                                                           <L 1181>
            wp::adj_vec_t(var_784, var_785, var_786, adj_784, adj_785, adj_786, adj_787);
            wp::adj_extract(var_770, var_653, adj_770, adj_653, adj_786);
            wp::adj_extract(var_769, var_653, adj_769, adj_653, adj_785);
            wp::adj_extract(var_744, var_653, adj_744, adj_653, adj_784);
            // adj: grad_w = wp.vec3(grad_0[3], grad_1[3], grad_2[3])                             <L 1178>
            wp::adj_vec_t(var_780, var_781, var_782, adj_780, adj_781, adj_782, adj_783);
            wp::adj_extract(var_770, var_277, adj_770, adj_277, adj_782);
            wp::adj_extract(var_769, var_277, adj_769, adj_277, adj_781);
            wp::adj_extract(var_744, var_277, adj_744, adj_277, adj_780);
            // adj: grad_z = wp.vec3(grad_0[2], grad_1[2], grad_2[2])                             <L 1177>
            wp::adj_vec_t(var_776, var_777, var_778, adj_776, adj_777, adj_778, adj_779);
            wp::adj_extract(var_770, var_99, adj_770, adj_99, adj_778);
            wp::adj_extract(var_769, var_99, adj_769, adj_99, adj_777);
            wp::adj_extract(var_744, var_99, adj_744, adj_99, adj_776);
            // adj: grad_y = wp.vec3(grad_0[1], grad_1[1], grad_2[1])                             <L 1176>
            wp::adj_vec_t(var_772, var_773, var_774, adj_772, adj_773, adj_774, adj_775);
            wp::adj_extract(var_770, var_5, adj_770, adj_5, adj_774);
            wp::adj_extract(var_769, var_5, adj_769, adj_5, adj_773);
            wp::adj_extract(var_744, var_5, adj_744, adj_5, adj_772);
            // adj: grad_x = wp.vec3(grad_0[0], grad_1[0], grad_2[0])                             <L 1175>
            wp::adj_vec_t(var_675, var_767, var_768, adj_675, adj_767, adj_768, adj_771);
            // adj: errs = wp.vec3(err_0, err_1, err_2)                                           <L 1174>
            wp::adj_select(var_750, var_740, var_765, adj_750, adj_740, adj_765, adj_770);
            wp::adj_select(var_750, var_715, var_764, adj_750, adj_715, adj_764, adj_769);
            wp::adj_select(var_750, var_677, var_763, adj_750, adj_677, adj_763, adj_768);
            wp::adj_select(var_750, var_676, var_762, adj_750, adj_676, adj_762, adj_767);
            wp::adj_select(var_750, var_120, var_755, adj_750, adj_120, adj_755, adj_766);
            if (var_750) {
                wp::adj_mul(var_740, var_761, adj_740, adj_761, adj_765);
                // adj: grad_2 *= scale                                                           <L 1172>
                wp::adj_mul(var_715, var_761, adj_715, adj_761, adj_764);
                // adj: grad_1 *= scale                                                           <L 1171>
                wp::adj_mul(var_677, var_761, adj_677, adj_761, adj_763);
                // adj: err_2 *= scale                                                            <L 1169>
                wp::adj_mul(var_676, var_761, adj_676, adj_761, adj_762);
                // adj: err_1 *= scale                                                            <L 1168>
                wp::adj_div(var_760, var_755, var_761, adj_760, adj_755, adj_761);
                // adj: scale = theta / d                                                         <L 1166>
                wp::adj_mul(var_670, var_759, adj_670, adj_759, adj_760);
                wp::adj_acos(var_758, adj_758, adj_759);
                wp::adj_clamp(var_756, var_757, var_157, adj_756, adj_757, adj_157, adj_758);
                wp::adj_neg(var_157, adj_157, adj_757);
                wp::adj_extract(var_658, var_653, adj_658, adj_653, adj_756);
                // adj: theta = 2.0 * wp.acos(wp.clamp(qswing[3], -1.0, 1.0))                     <L 1165>
                wp::adj_sqrt(var_754, var_755, adj_754, adj_755);
                wp::adj_sub(var_157, var_753, adj_157, adj_753, adj_754);
                wp::adj_mul(var_751, var_752, adj_751, adj_752, adj_753);
                wp::adj_extract(var_658, var_653, adj_658, adj_653, adj_752);
                wp::adj_extract(var_658, var_653, adj_658, adj_653, adj_751);
                // adj: d = wp.sqrt(1.0 - qswing[3] * qswing[3])                                  <L 1164>
            }
            wp::adj_add(var_747, var_748, adj_747, adj_748, adj_749);
            // adj: if swing_sq + angularEps < 1.0:                                               <L 1163>
            // adj: angularEps = 1.0e-4                                                           <L 1162>
            wp::adj_mul(var_745, var_746, adj_745, adj_746, adj_747);
            wp::adj_extract(var_658, var_653, adj_658, adj_653, adj_746);
            wp::adj_extract(var_658, var_653, adj_658, adj_653, adj_745);
            // adj: swing_sq = qswing[3] * qswing[3]                                              <L 1160>
            wp::adj_mul(var_688, var_743, adj_688, adj_743, adj_744);
            wp::adj_div(var_670, var_742, var_743, adj_670, adj_742, adj_743);
            wp::adj_abs(var_741, adj_741, adj_742);
            wp::adj_extract(var_656, var_653, adj_656, adj_653, adj_741);
            // adj: grad_0 *= 2.0 / wp.abs(qtwist[3])                                             <L 1156>
            wp::adj_quat_t(var_725, var_727, var_729, var_739, adj_725, adj_727, adj_729, adj_739, adj_740);
            wp::adj_mul(var_738, var_669, adj_738, adj_669, adj_739);
            wp::adj_mul(var_730, var_737, adj_730, adj_737, adj_738);
            wp::adj_sub(var_733, var_736, adj_733, adj_736, adj_737);
            wp::adj_mul(var_734, var_735, adj_734, adj_735, adj_736);
            wp::adj_extract(var_651, var_99, adj_651, adj_99, adj_735);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_734);
            wp::adj_mul(var_731, var_732, adj_731, adj_732, adj_733);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_732);
            wp::adj_extract(var_651, var_277, adj_651, adj_277, adj_731);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_730);
            // adj: rel_q[0] * (rel_q[2] * rel_q[0] - rel_q[3] * rel_q[1]) * invscube,            <L 1154>
            wp::adj_mul(var_728, var_667, adj_728, adj_667, adj_729);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_728);
            // adj: rel_q[3] * invs,                                                              <L 1153>
            wp::adj_mul(var_726, var_667, adj_726, adj_667, adj_727);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_726);
            // adj: rel_q[0] * invs,                                                              <L 1152>
            wp::adj_mul(var_724, var_669, adj_724, adj_669, adj_725);
            wp::adj_mul(var_716, var_723, adj_716, adj_723, adj_724);
            wp::adj_sub(var_719, var_722, adj_719, adj_722, adj_723);
            wp::adj_mul(var_720, var_721, adj_720, adj_721, adj_722);
            wp::adj_extract(var_651, var_277, adj_651, adj_277, adj_721);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_720);
            wp::adj_mul(var_717, var_718, adj_717, adj_718, adj_719);
            wp::adj_extract(var_651, var_99, adj_651, adj_99, adj_718);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_717);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_716);
            // adj: rel_q[3] * (rel_q[3] * rel_q[1] - rel_q[0] * rel_q[2]) * invscube,            <L 1151>
            // adj: grad_2 = wp.quat(                                                             <L 1150>
            wp::adj_quat_t(var_699, var_701, var_704, var_714, adj_699, adj_701, adj_704, adj_714, adj_715);
            wp::adj_mul(var_713, var_669, adj_713, adj_669, adj_714);
            wp::adj_mul(var_705, var_712, adj_705, adj_712, adj_713);
            wp::adj_add(var_708, var_711, adj_708, adj_711, adj_712);
            wp::adj_mul(var_709, var_710, adj_709, adj_710, adj_711);
            wp::adj_extract(var_651, var_99, adj_651, adj_99, adj_710);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_709);
            wp::adj_mul(var_706, var_707, adj_706, adj_707, adj_708);
            wp::adj_extract(var_651, var_277, adj_651, adj_277, adj_707);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_706);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_705);
            // adj: rel_q[0] * (rel_q[3] * rel_q[2] + rel_q[0] * rel_q[1]) * invscube,            <L 1148>
            wp::adj_mul(var_703, var_667, adj_703, adj_667, adj_704);
            wp::adj_neg(var_702, adj_702, adj_703);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_702);
            // adj: -rel_q[0] * invs,                                                             <L 1147>
            wp::adj_mul(var_700, var_667, adj_700, adj_667, adj_701);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_700);
            // adj: rel_q[3] * invs,                                                              <L 1146>
            wp::adj_mul(var_698, var_669, adj_698, adj_669, adj_699);
            wp::adj_mul(var_690, var_697, adj_690, adj_697, adj_698);
            wp::adj_add(var_693, var_696, adj_693, adj_696, adj_697);
            wp::adj_mul(var_694, var_695, adj_694, adj_695, adj_696);
            wp::adj_extract(var_651, var_99, adj_651, adj_99, adj_695);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_694);
            wp::adj_mul(var_691, var_692, adj_691, adj_692, adj_693);
            wp::adj_extract(var_651, var_277, adj_651, adj_277, adj_692);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_691);
            wp::adj_neg(var_689, adj_689, adj_690);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_689);
            // adj: -rel_q[3] * (rel_q[3] * rel_q[2] + rel_q[0] * rel_q[1]) * invscube,           <L 1145>
            // adj: grad_1 = wp.quat(                                                             <L 1144>
            wp::adj_quat_t(var_682, var_24, var_24, var_687, adj_682, adj_24, adj_24, adj_687, adj_688);
            wp::adj_mul(var_686, var_669, adj_686, adj_669, adj_687);
            wp::adj_neg(var_685, adj_685, adj_686);
            wp::adj_mul(var_683, var_684, adj_683, adj_684, adj_685);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_684);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_683);
            wp::adj_sub(var_667, var_681, adj_667, adj_681, adj_682);
            wp::adj_mul(var_680, var_669, adj_680, adj_669, adj_681);
            wp::adj_mul(var_678, var_679, adj_678, adj_679, adj_680);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_679);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_678);
            // adj: grad_0 = wp.quat(invs - rel_q[0] * rel_q[0] * invscube, 0.0, 0.0, -(rel_q[3] * rel_q[0]) * invscube)  <L 1143>
            wp::adj_extract(var_658, var_277, adj_658, adj_277, adj_677);
            // adj: err_2 = qswing[2]                                                             <L 1141>
            wp::adj_extract(var_658, var_99, adj_658, adj_99, adj_676);
            // adj: err_1 = qswing[1]                                                             <L 1140>
            wp::adj_mul(var_670, var_674, adj_670, adj_674, adj_675);
            wp::adj_asin(var_673, adj_673, adj_674);
            wp::adj_clamp(var_671, var_672, var_157, adj_671, adj_672, adj_157, adj_673);
            wp::adj_neg(var_157, adj_157, adj_672);
            wp::adj_extract(var_656, var_5, adj_656, adj_5, adj_671);
            // adj: err_0 = 2.0 * wp.asin(wp.clamp(qtwist[0], -1.0, 1.0))                         <L 1139>
            wp::adj_mul(var_668, var_667, adj_668, adj_667, adj_669);
            wp::adj_mul(var_667, var_667, adj_667, adj_667, adj_668);
            // adj: invscube = invs * invs * invs                                                 <L 1134>
            wp::adj_div(var_157, var_666, var_667, adj_157, adj_666, adj_667);
            // adj: invs = 1.0 / s                                                                <L 1133>
            wp::adj_sqrt(var_665, var_666, adj_665, adj_666);
            wp::adj_add(var_661, var_664, adj_661, adj_664, adj_665);
            wp::adj_mul(var_662, var_663, adj_662, adj_663, adj_664);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_663);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_662);
            wp::adj_mul(var_659, var_660, adj_659, adj_660, adj_661);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_660);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_659);
            // adj: s = wp.sqrt(rel_q[0] * rel_q[0] + rel_q[3] * rel_q[3])                        <L 1132>
            wp::adj_mul(var_651, var_657, adj_651, adj_657, adj_658);
            wp::adj_quat_inverse(var_656, adj_656, adj_657);
            // adj: qswing = rel_q * wp.quat_inverse(qtwist)                                      <L 1129>
            wp::adj_normalize(var_655, adj_655, adj_656);
            wp::adj_quat_t(var_652, var_24, var_24, var_654, adj_652, adj_24, adj_24, adj_654, adj_655);
            wp::adj_extract(var_651, var_653, adj_651, adj_653, adj_654);
            wp::adj_extract(var_651, var_5, adj_651, adj_5, adj_652);
            // adj: qtwist = wp.normalize(wp.quat(rel_q[0], 0.0, 0.0, rel_q[3]))                  <L 1128>
            wp::adj_mul(var_650, var_649, adj_650, adj_649, adj_651);
            wp::adj_quat_inverse(var_643, adj_643, adj_650);
            // adj: rel_q = wp.quat_inverse(q_p) * q_c                                            <L 1126>
            wp::adj_select(var_646, var_644, var_648, adj_646, adj_644, adj_648, adj_649);
            if (var_646) {
                wp::adj_mul(var_644, var_647, adj_644, adj_647, adj_648);
                wp::adj_neg(var_157, adj_157, adj_647);
                // adj: q_c *= -1.0                                                               <L 1124>
            }
            wp::adj_dot(var_643, var_644, adj_643, adj_644, adj_645);
            // adj: if wp.dot(q_p, q_c) < 0.0:                                                    <L 1123>
            wp::adj_transform_get_rotation(var_60, adj_60, adj_644);
            // adj: q_c = wp.transform_get_rotation(X_wc)                                         <L 1120>
            wp::adj_transform_get_rotation(var_50, adj_50, adj_643);
            // adj: q_p = wp.transform_get_rotation(X_wp)                                         <L 1119>
        }
        // adj: or type == fs5Model.JOINT_D6                                                      <L 1114>
        // adj: or type == fs5Model.JOINT_COMPOUND                                                <L 1113>
        // adj: or type == fs5Model.JOINT_UNIVERSAL                                               <L 1112>
        // adj: or type == fs5Model.JOINT_REVOLUTE                                                <L 1111>
        // adj: or type == fs5Model.JOINT_PRISMATIC                                               <L 1110>
        // adj: type == fs5Model.JOINT_FIXED                                                      <L 1109>
        // adj: if (                                                                              <L 1108>
        wp::adj_select(var_106, var_611, var_163, adj_106, adj_611, adj_163, adj_629);
        wp::adj_select(var_106, var_590, var_162, adj_106, adj_590, adj_162, adj_628);
        wp::adj_select(var_106, var_314, var_155, adj_106, adj_314, adj_155, adj_627);
        wp::adj_select(var_106, var_589, var_159, adj_106, adj_589, adj_159, adj_626);
        wp::adj_select(var_106, var_539, var_151, adj_106, adj_539, adj_151, adj_625);
        wp::adj_select(var_106, var_532, var_144, adj_106, adj_532, adj_144, adj_624);
        wp::adj_select(var_106, var_531, var_143, adj_106, adj_531, adj_143, adj_623);
        wp::adj_select(var_106, var_529, var_140, adj_106, adj_529, adj_140, adj_622);
        wp::adj_select(var_106, var_528, var_139, adj_106, adj_528, adj_139, adj_621);
        wp::adj_select(var_106, var_588, var_135, adj_106, adj_588, adj_135, adj_620);
        wp::adj_select(var_106, var_542, var_116, adj_106, adj_542, adj_116, adj_619);
        wp::adj_select(var_106, var_541, var_113, adj_106, adj_541, adj_113, adj_618);
        wp::adj_select(var_106, var_336, var_180, adj_106, adj_336, adj_180, adj_617);
        wp::adj_select(var_106, var_334, var_108, adj_106, adj_334, adj_108, adj_616);
        wp::adj_select(var_106, var_610, var_184, adj_106, adj_610, adj_184, adj_615);
        wp::adj_select(var_106, var_609, var_183, adj_106, adj_609, adj_183, adj_614);
        wp::adj_select(var_106, var_608, var_182, adj_106, adj_608, adj_182, adj_613);
        wp::adj_select(var_106, var_607, var_181, adj_106, adj_607, adj_181, adj_612);
        if (!var_106) {
            wp::adj_select(var_593, var_520, var_594, adj_593, adj_520, adj_594, adj_611);
            wp::adj_select(var_593, var_519, var_606, adj_593, adj_519, adj_606, adj_610);
            wp::adj_select(var_593, var_518, var_603, adj_593, adj_518, adj_603, adj_609);
            wp::adj_select(var_593, var_517, var_600, adj_593, adj_517, adj_600, adj_608);
            wp::adj_select(var_593, var_516, var_597, adj_593, adj_516, adj_597, adj_607);
            if (var_593) {
                wp::adj_add(var_519, var_605, adj_519, adj_605, adj_606);
                wp::adj_mul(var_532, var_604, adj_532, adj_604, adj_605);
                wp::adj_mul(var_594, var_angular_relaxation, adj_594, adj_angular_relaxation, adj_604);
                // adj: ang_delta_c += angular_c * (d_lambda * angular_relaxation)                <L 1106>
                wp::adj_add(var_518, var_602, adj_518, adj_602, adj_603);
                wp::adj_mul(var_528, var_601, adj_528, adj_601, adj_602);
                wp::adj_mul(var_594, var_linear_relaxation, adj_594, adj_linear_relaxation, adj_601);
                // adj: lin_delta_c += linear_c * (d_lambda * linear_relaxation)                  <L 1105>
                wp::adj_add(var_517, var_599, adj_517, adj_599, adj_600);
                wp::adj_mul(var_531, var_598, adj_531, adj_598, adj_599);
                wp::adj_mul(var_594, var_angular_relaxation, adj_594, adj_angular_relaxation, adj_598);
                // adj: ang_delta_p += angular_p * (d_lambda * angular_relaxation)                <L 1104>
                wp::adj_add(var_516, var_596, adj_516, adj_596, adj_597);
                wp::adj_mul(var_529, var_595, adj_529, adj_595, adj_596);
                wp::adj_mul(var_594, var_linear_relaxation, adj_594, adj_linear_relaxation, adj_595);
                // adj: lin_delta_p += linear_p * (d_lambda * linear_relaxation)                  <L 1103>
                adj_compute_positional_correction(var_588, var_539, var_53, var_59, var_51, var_66, var_52, var_69, var_529, var_528, var_531, var_532, var_24, var_589, var_590, var_dt, adj_588, adj_539, adj_53, adj_59, adj_51, adj_66, adj_52, adj_69, adj_529, adj_528, adj_531, adj_532, adj_24, adj_589, adj_590, adj_dt, adj_594);
                // adj: dt,                                                                       <L 1100>
                // adj: damping,                                                                  <L 1099>
                // adj: compliance,                                                               <L 1098>
                // adj: lambda_in,                                                                <L 1097>
                // adj: angular_c,                                                                <L 1096>
                // adj: angular_p,                                                                <L 1095>
                // adj: linear_c,                                                                 <L 1094>
                // adj: linear_p,                                                                 <L 1093>
                // adj: I_inv_c,                                                                  <L 1092>
                // adj: I_inv_p,                                                                  <L 1091>
                // adj: m_inv_c,                                                                  <L 1090>
                // adj: m_inv_p,                                                                  <L 1089>
                // adj: pose_c,                                                                   <L 1088>
                // adj: pose_p,                                                                   <L 1087>
                // adj: derr,                                                                     <L 1086>
                // adj: err,                                                                      <L 1085>
                // adj: d_lambda = compute_positional_correction(                                 <L 1084>
                // adj: lambda_in = 0.0                                                           <L 1083>
            }
            wp::adj_abs(var_588, adj_588, adj_592);
            // adj: if wp.abs(err) > 1e-9:                                                        <L 1082>
            wp::adj_select(var_543, var_587, var_500, adj_543, adj_587, adj_500, adj_591);
            wp::adj_select(var_543, var_586, var_24, adj_543, adj_586, adj_24, adj_590);
            wp::adj_select(var_543, var_585, var_547, adj_543, adj_585, adj_547, adj_589);
            wp::adj_select(var_543, var_584, var_546, adj_543, adj_584, adj_546, adj_588);
            if (!var_543) {
                wp::adj_select(var_548, var_567, var_500, adj_548, adj_567, adj_500, adj_587);
                wp::adj_select(var_548, var_583, var_24, adj_548, adj_583, adj_24, adj_586);
                wp::adj_select(var_548, var_582, var_552, adj_548, adj_582, adj_552, adj_585);
                wp::adj_select(var_548, var_581, var_551, adj_548, adj_581, adj_551, adj_584);
                if (!var_548) {
                    wp::adj_select(var_554, var_580, var_566, adj_554, adj_580, adj_566, adj_583);
                    wp::adj_select(var_554, var_579, var_565, adj_554, adj_579, adj_565, adj_582);
                    wp::adj_select(var_554, var_578, var_564, adj_554, adj_578, adj_564, adj_581);
                    if (!var_554) {
                        wp::adj_select(var_568, var_566, var_577, adj_568, adj_566, adj_577, adj_580);
                        wp::adj_select(var_568, var_565, var_576, adj_568, adj_565, adj_576, adj_579);
                        wp::adj_select(var_568, var_564, var_575, adj_568, adj_564, adj_575, adj_578);
                        if (var_568) {
                            wp::adj_extract(var_326, var_522, adj_326, adj_522, adj_577);
                            // adj: damping = axis_damping[dim]                                   <L 1080>
                            wp::adj_select(var_570, var_565, var_574, adj_570, adj_565, adj_574, adj_576);
                            wp::adj_select(var_570, var_564, var_572, adj_570, adj_564, adj_572, adj_575);
                            if (var_570) {
                                wp::adj_div(var_157, var_573, var_574, adj_157, adj_573, adj_574);
                                wp::adj_extract(var_325, var_522, adj_325, adj_522, adj_573);
                                // adj: compliance = 1.0 / axis_stiffness[dim]                    <L 1079>
                                wp::adj_mul(var_571, var_dt, adj_571, adj_dt, adj_572);
                                wp::adj_sub(var_539, var_567, adj_539, adj_567, adj_571);
                                // adj: err = (derr - target) * dt                                <L 1078>
                            }
                            wp::adj_extract(var_325, var_522, adj_325, adj_522, adj_569);
                            // adj: if axis_stiffness[dim] > 0.0:                                 <L 1077>
                        }
                        // adj: elif mode == JOINT_MODE_TARGET_VELOCITY:                          <L 1076>
                    }
                    wp::adj_select(var_554, var_553, var_555, adj_554, adj_553, adj_555, adj_567);
                    wp::adj_select(var_554, var_24, var_563, adj_554, adj_24, adj_563, adj_566);
                    wp::adj_select(var_554, var_552, var_562, adj_554, adj_552, adj_562, adj_565);
                    wp::adj_select(var_554, var_551, var_561, adj_554, adj_551, adj_561, adj_564);
                    if (var_554) {
                        wp::adj_extract(var_326, var_522, adj_326, adj_522, adj_563);
                        // adj: damping = axis_damping[dim]                                       <L 1075>
                        wp::adj_select(var_557, var_552, var_560, adj_557, adj_552, adj_560, adj_562);
                        wp::adj_select(var_557, var_551, var_558, adj_557, adj_551, adj_558, adj_561);
                        if (var_557) {
                            wp::adj_div(var_157, var_559, var_560, adj_157, adj_559, adj_560);
                            wp::adj_extract(var_325, var_522, adj_325, adj_522, adj_559);
                            // adj: compliance = 1.0 / axis_stiffness[dim]                        <L 1074>
                            wp::adj_sub(var_523, var_555, adj_523, adj_555, adj_558);
                            // adj: err = e - target                                              <L 1073>
                        }
                        wp::adj_extract(var_325, var_522, adj_325, adj_522, adj_556);
                        // adj: if axis_stiffness[dim] > 0.0:                                     <L 1072>
                        wp::adj_clamp(var_553, var_541, var_542, adj_553, adj_541, adj_542, adj_555);
                        // adj: target = wp.clamp(target, lower, upper)                           <L 1071>
                    }
                    // adj: if mode == JOINT_MODE_TARGET_POSITION:                                <L 1070>
                    wp::adj_extract(var_329, var_522, adj_329, adj_522, adj_553);
                    // adj: target = axis_target[dim]                                             <L 1069>
                }
                wp::adj_select(var_548, var_547, var_550, adj_548, adj_547, adj_550, adj_552);
                wp::adj_select(var_548, var_546, var_549, adj_548, adj_546, adj_549, adj_551);
                if (var_548) {
                    // adj: damping = 0.0                                                         <L 1067>
                    wp::adj_copy(var_89, adj_89, adj_550);
                    // adj: compliance = linear_compliance                                        <L 1066>
                    wp::adj_sub(var_523, var_542, adj_523, adj_542, adj_549);
                    // adj: err = e - upper                                                       <L 1065>
                }
                // adj: elif e > upper:                                                           <L 1064>
            }
            wp::adj_select(var_543, var_540, var_545, adj_543, adj_540, adj_545, adj_547);
            wp::adj_select(var_543, var_24, var_544, adj_543, adj_24, adj_544, adj_546);
            if (var_543) {
                // adj: damping = 0.0                                                             <L 1063>
                wp::adj_copy(var_89, adj_89, adj_545);
                // adj: compliance = linear_compliance                                            <L 1062>
                wp::adj_sub(var_523, var_541, adj_523, adj_541, adj_544);
                // adj: err = e - lower                                                           <L 1061>
            }
            // adj: if e < lower:                                                                 <L 1060>
            wp::adj_extract(var_331, var_522, adj_331, adj_522, adj_542);
            // adj: upper = axis_limits_upper[dim]                                                <L 1059>
            wp::adj_extract(var_330, var_522, adj_330, adj_522, adj_541);
            // adj: lower = axis_limits_lower[dim]                                                <L 1058>
            // adj: damping = 0.0                                                                 <L 1056>
            wp::adj_copy(var_89, adj_89, adj_540);
            // adj: compliance = linear_compliance                                                <L 1055>
            // adj: err = 0.0                                                                     <L 1054>
            wp::adj_add(var_537, var_538, adj_537, adj_538, adj_539);
            wp::adj_dot(var_532, var_75, adj_532, adj_75, adj_538);
            // adj: + wp.dot(angular_c, omega_c)                                                  <L 1051>
            wp::adj_add(var_535, var_536, adj_535, adj_536, adj_537);
            wp::adj_dot(var_531, var_56, adj_531, adj_56, adj_536);
            // adj: + wp.dot(angular_p, omega_p)                                                  <L 1050>
            wp::adj_add(var_533, var_534, adj_533, adj_534, adj_535);
            wp::adj_dot(var_528, var_72, adj_528, adj_72, adj_534);
            // adj: + wp.dot(linear_c, vel_c)                                                     <L 1049>
            wp::adj_dot(var_529, var_55, adj_529, adj_55, adj_533);
            // adj: wp.dot(linear_p, vel_p)                                                       <L 1048>
            // adj: derr = (                                                                      <L 1047>
            wp::adj_cross(var_336, var_528, adj_336, adj_528, adj_532);
            // adj: angular_c = wp.cross(r_c, linear_c)                                           <L 1045>
            wp::adj_neg(var_530, adj_530, adj_531);
            wp::adj_cross(var_334, var_528, adj_334, adj_528, adj_530);
            // adj: angular_p = -wp.cross(r_p, linear_c)                                          <L 1044>
            wp::adj_neg(var_528, adj_528, adj_529);
            // adj: linear_p = -linear_c                                                          <L 1043>
            wp::adj_vec_t(var_525, var_526, var_527, adj_525, adj_526, adj_527, adj_528);
            wp::adj_extract(var_333, var_277, var_522, adj_333, adj_277, adj_522, adj_527);
            wp::adj_extract(var_333, var_99, var_522, adj_333, adj_99, adj_522, adj_526);
            wp::adj_extract(var_333, var_5, var_522, adj_333, adj_5, adj_522, adj_525);
            // adj: linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])         <L 1042>
            wp::adj_extract(var_317, var_522, adj_317, adj_522, adj_524);
            // adj: mode = axis_mode[dim]                                                         <L 1039>
            wp::adj_extract(var_185, var_522, adj_185, adj_522, adj_523);
            // adj: e = rel_p[dim]                                                                <L 1038>
            wp::adj_int(var_521, adj_521, adj_522);
            wp::adj_select(var_502, var_429, var_503, adj_502, adj_429, adj_503, adj_520);
            wp::adj_select(var_502, var_428, var_515, adj_502, adj_428, adj_515, adj_519);
            wp::adj_select(var_502, var_427, var_512, adj_502, adj_427, adj_512, adj_518);
            wp::adj_select(var_502, var_426, var_509, adj_502, adj_426, adj_509, adj_517);
            wp::adj_select(var_502, var_425, var_506, adj_502, adj_425, adj_506, adj_516);
            if (var_502) {
                wp::adj_add(var_428, var_514, adj_428, adj_514, adj_515);
                wp::adj_mul(var_441, var_513, adj_441, adj_513, adj_514);
                wp::adj_mul(var_503, var_angular_relaxation, adj_503, adj_angular_relaxation, adj_513);
                // adj: ang_delta_c += angular_c * (d_lambda * angular_relaxation)                <L 1106>
                wp::adj_add(var_427, var_511, adj_427, adj_511, adj_512);
                wp::adj_mul(var_437, var_510, adj_437, adj_510, adj_511);
                wp::adj_mul(var_503, var_linear_relaxation, adj_503, adj_linear_relaxation, adj_510);
                // adj: lin_delta_c += linear_c * (d_lambda * linear_relaxation)                  <L 1105>
                wp::adj_add(var_426, var_508, adj_426, adj_508, adj_509);
                wp::adj_mul(var_440, var_507, adj_440, adj_507, adj_508);
                wp::adj_mul(var_503, var_angular_relaxation, adj_503, adj_angular_relaxation, adj_507);
                // adj: ang_delta_p += angular_p * (d_lambda * angular_relaxation)                <L 1104>
                wp::adj_add(var_425, var_505, adj_425, adj_505, adj_506);
                wp::adj_mul(var_438, var_504, adj_438, adj_504, adj_505);
                wp::adj_mul(var_503, var_linear_relaxation, adj_503, adj_linear_relaxation, adj_504);
                // adj: lin_delta_p += linear_p * (d_lambda * linear_relaxation)                  <L 1103>
                adj_compute_positional_correction(var_497, var_448, var_53, var_59, var_51, var_66, var_52, var_69, var_438, var_437, var_440, var_441, var_24, var_498, var_499, var_dt, adj_497, adj_448, adj_53, adj_59, adj_51, adj_66, adj_52, adj_69, adj_438, adj_437, adj_440, adj_441, adj_24, adj_498, adj_499, adj_dt, adj_503);
                // adj: dt,                                                                       <L 1100>
                // adj: damping,                                                                  <L 1099>
                // adj: compliance,                                                               <L 1098>
                // adj: lambda_in,                                                                <L 1097>
                // adj: angular_c,                                                                <L 1096>
                // adj: angular_p,                                                                <L 1095>
                // adj: linear_c,                                                                 <L 1094>
                // adj: linear_p,                                                                 <L 1093>
                // adj: I_inv_c,                                                                  <L 1092>
                // adj: I_inv_p,                                                                  <L 1091>
                // adj: m_inv_c,                                                                  <L 1090>
                // adj: m_inv_p,                                                                  <L 1089>
                // adj: pose_c,                                                                   <L 1088>
                // adj: pose_p,                                                                   <L 1087>
                // adj: derr,                                                                     <L 1086>
                // adj: err,                                                                      <L 1085>
                // adj: d_lambda = compute_positional_correction(                                 <L 1084>
                // adj: lambda_in = 0.0                                                           <L 1083>
            }
            wp::adj_abs(var_497, adj_497, adj_501);
            // adj: if wp.abs(err) > 1e-9:                                                        <L 1082>
            wp::adj_select(var_452, var_496, var_409, adj_452, adj_496, adj_409, adj_500);
            wp::adj_select(var_452, var_495, var_24, adj_452, adj_495, adj_24, adj_499);
            wp::adj_select(var_452, var_494, var_456, adj_452, adj_494, adj_456, adj_498);
            wp::adj_select(var_452, var_493, var_455, adj_452, adj_493, adj_455, adj_497);
            if (!var_452) {
                wp::adj_select(var_457, var_476, var_409, adj_457, adj_476, adj_409, adj_496);
                wp::adj_select(var_457, var_492, var_24, adj_457, adj_492, adj_24, adj_495);
                wp::adj_select(var_457, var_491, var_461, adj_457, adj_491, adj_461, adj_494);
                wp::adj_select(var_457, var_490, var_460, adj_457, adj_490, adj_460, adj_493);
                if (!var_457) {
                    wp::adj_select(var_463, var_489, var_475, adj_463, adj_489, adj_475, adj_492);
                    wp::adj_select(var_463, var_488, var_474, adj_463, adj_488, adj_474, adj_491);
                    wp::adj_select(var_463, var_487, var_473, adj_463, adj_487, adj_473, adj_490);
                    if (!var_463) {
                        wp::adj_select(var_477, var_475, var_486, adj_477, adj_475, adj_486, adj_489);
                        wp::adj_select(var_477, var_474, var_485, adj_477, adj_474, adj_485, adj_488);
                        wp::adj_select(var_477, var_473, var_484, adj_477, adj_473, adj_484, adj_487);
                        if (var_477) {
                            wp::adj_extract(var_326, var_431, adj_326, adj_431, adj_486);
                            // adj: damping = axis_damping[dim]                                   <L 1080>
                            wp::adj_select(var_479, var_474, var_483, adj_479, adj_474, adj_483, adj_485);
                            wp::adj_select(var_479, var_473, var_481, adj_479, adj_473, adj_481, adj_484);
                            if (var_479) {
                                wp::adj_div(var_157, var_482, var_483, adj_157, adj_482, adj_483);
                                wp::adj_extract(var_325, var_431, adj_325, adj_431, adj_482);
                                // adj: compliance = 1.0 / axis_stiffness[dim]                    <L 1079>
                                wp::adj_mul(var_480, var_dt, adj_480, adj_dt, adj_481);
                                wp::adj_sub(var_448, var_476, adj_448, adj_476, adj_480);
                                // adj: err = (derr - target) * dt                                <L 1078>
                            }
                            wp::adj_extract(var_325, var_431, adj_325, adj_431, adj_478);
                            // adj: if axis_stiffness[dim] > 0.0:                                 <L 1077>
                        }
                        // adj: elif mode == JOINT_MODE_TARGET_VELOCITY:                          <L 1076>
                    }
                    wp::adj_select(var_463, var_462, var_464, adj_463, adj_462, adj_464, adj_476);
                    wp::adj_select(var_463, var_24, var_472, adj_463, adj_24, adj_472, adj_475);
                    wp::adj_select(var_463, var_461, var_471, adj_463, adj_461, adj_471, adj_474);
                    wp::adj_select(var_463, var_460, var_470, adj_463, adj_460, adj_470, adj_473);
                    if (var_463) {
                        wp::adj_extract(var_326, var_431, adj_326, adj_431, adj_472);
                        // adj: damping = axis_damping[dim]                                       <L 1075>
                        wp::adj_select(var_466, var_461, var_469, adj_466, adj_461, adj_469, adj_471);
                        wp::adj_select(var_466, var_460, var_467, adj_466, adj_460, adj_467, adj_470);
                        if (var_466) {
                            wp::adj_div(var_157, var_468, var_469, adj_157, adj_468, adj_469);
                            wp::adj_extract(var_325, var_431, adj_325, adj_431, adj_468);
                            // adj: compliance = 1.0 / axis_stiffness[dim]                        <L 1074>
                            wp::adj_sub(var_432, var_464, adj_432, adj_464, adj_467);
                            // adj: err = e - target                                              <L 1073>
                        }
                        wp::adj_extract(var_325, var_431, adj_325, adj_431, adj_465);
                        // adj: if axis_stiffness[dim] > 0.0:                                     <L 1072>
                        wp::adj_clamp(var_462, var_450, var_451, adj_462, adj_450, adj_451, adj_464);
                        // adj: target = wp.clamp(target, lower, upper)                           <L 1071>
                    }
                    // adj: if mode == JOINT_MODE_TARGET_POSITION:                                <L 1070>
                    wp::adj_extract(var_329, var_431, adj_329, adj_431, adj_462);
                    // adj: target = axis_target[dim]                                             <L 1069>
                }
                wp::adj_select(var_457, var_456, var_459, adj_457, adj_456, adj_459, adj_461);
                wp::adj_select(var_457, var_455, var_458, adj_457, adj_455, adj_458, adj_460);
                if (var_457) {
                    // adj: damping = 0.0                                                         <L 1067>
                    wp::adj_copy(var_89, adj_89, adj_459);
                    // adj: compliance = linear_compliance                                        <L 1066>
                    wp::adj_sub(var_432, var_451, adj_432, adj_451, adj_458);
                    // adj: err = e - upper                                                       <L 1065>
                }
                // adj: elif e > upper:                                                           <L 1064>
            }
            wp::adj_select(var_452, var_449, var_454, adj_452, adj_449, adj_454, adj_456);
            wp::adj_select(var_452, var_24, var_453, adj_452, adj_24, adj_453, adj_455);
            if (var_452) {
                // adj: damping = 0.0                                                             <L 1063>
                wp::adj_copy(var_89, adj_89, adj_454);
                // adj: compliance = linear_compliance                                            <L 1062>
                wp::adj_sub(var_432, var_450, adj_432, adj_450, adj_453);
                // adj: err = e - lower                                                           <L 1061>
            }
            // adj: if e < lower:                                                                 <L 1060>
            wp::adj_extract(var_331, var_431, adj_331, adj_431, adj_451);
            // adj: upper = axis_limits_upper[dim]                                                <L 1059>
            wp::adj_extract(var_330, var_431, adj_330, adj_431, adj_450);
            // adj: lower = axis_limits_lower[dim]                                                <L 1058>
            // adj: damping = 0.0                                                                 <L 1056>
            wp::adj_copy(var_89, adj_89, adj_449);
            // adj: compliance = linear_compliance                                                <L 1055>
            // adj: err = 0.0                                                                     <L 1054>
            wp::adj_add(var_446, var_447, adj_446, adj_447, adj_448);
            wp::adj_dot(var_441, var_75, adj_441, adj_75, adj_447);
            // adj: + wp.dot(angular_c, omega_c)                                                  <L 1051>
            wp::adj_add(var_444, var_445, adj_444, adj_445, adj_446);
            wp::adj_dot(var_440, var_56, adj_440, adj_56, adj_445);
            // adj: + wp.dot(angular_p, omega_p)                                                  <L 1050>
            wp::adj_add(var_442, var_443, adj_442, adj_443, adj_444);
            wp::adj_dot(var_437, var_72, adj_437, adj_72, adj_443);
            // adj: + wp.dot(linear_c, vel_c)                                                     <L 1049>
            wp::adj_dot(var_438, var_55, adj_438, adj_55, adj_442);
            // adj: wp.dot(linear_p, vel_p)                                                       <L 1048>
            // adj: derr = (                                                                      <L 1047>
            wp::adj_cross(var_336, var_437, adj_336, adj_437, adj_441);
            // adj: angular_c = wp.cross(r_c, linear_c)                                           <L 1045>
            wp::adj_neg(var_439, adj_439, adj_440);
            wp::adj_cross(var_334, var_437, adj_334, adj_437, adj_439);
            // adj: angular_p = -wp.cross(r_p, linear_c)                                          <L 1044>
            wp::adj_neg(var_437, adj_437, adj_438);
            // adj: linear_p = -linear_c                                                          <L 1043>
            wp::adj_vec_t(var_434, var_435, var_436, adj_434, adj_435, adj_436, adj_437);
            wp::adj_extract(var_333, var_277, var_431, adj_333, adj_277, adj_431, adj_436);
            wp::adj_extract(var_333, var_99, var_431, adj_333, adj_99, adj_431, adj_435);
            wp::adj_extract(var_333, var_5, var_431, adj_333, adj_5, adj_431, adj_434);
            // adj: linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])         <L 1042>
            wp::adj_extract(var_317, var_431, adj_317, adj_431, adj_433);
            // adj: mode = axis_mode[dim]                                                         <L 1039>
            wp::adj_extract(var_185, var_431, adj_185, adj_431, adj_432);
            // adj: e = rel_p[dim]                                                                <L 1038>
            wp::adj_int(var_430, adj_430, adj_431);
            wp::adj_select(var_411, var_163, var_412, adj_411, adj_163, adj_412, adj_429);
            wp::adj_select(var_411, var_184, var_424, adj_411, adj_184, adj_424, adj_428);
            wp::adj_select(var_411, var_183, var_421, adj_411, adj_183, adj_421, adj_427);
            wp::adj_select(var_411, var_182, var_418, adj_411, adj_182, adj_418, adj_426);
            wp::adj_select(var_411, var_181, var_415, adj_411, adj_181, adj_415, adj_425);
            if (var_411) {
                wp::adj_add(var_184, var_423, adj_184, adj_423, adj_424);
                wp::adj_mul(var_348, var_422, adj_348, adj_422, adj_423);
                wp::adj_mul(var_412, var_angular_relaxation, adj_412, adj_angular_relaxation, adj_422);
                // adj: ang_delta_c += angular_c * (d_lambda * angular_relaxation)                <L 1106>
                wp::adj_add(var_183, var_420, adj_183, adj_420, adj_421);
                wp::adj_mul(var_344, var_419, adj_344, adj_419, adj_420);
                wp::adj_mul(var_412, var_linear_relaxation, adj_412, adj_linear_relaxation, adj_419);
                // adj: lin_delta_c += linear_c * (d_lambda * linear_relaxation)                  <L 1105>
                wp::adj_add(var_182, var_417, adj_182, adj_417, adj_418);
                wp::adj_mul(var_347, var_416, adj_347, adj_416, adj_417);
                wp::adj_mul(var_412, var_angular_relaxation, adj_412, adj_angular_relaxation, adj_416);
                // adj: ang_delta_p += angular_p * (d_lambda * angular_relaxation)                <L 1104>
                wp::adj_add(var_181, var_414, adj_181, adj_414, adj_415);
                wp::adj_mul(var_345, var_413, adj_345, adj_413, adj_414);
                wp::adj_mul(var_412, var_linear_relaxation, adj_412, adj_linear_relaxation, adj_413);
                // adj: lin_delta_p += linear_p * (d_lambda * linear_relaxation)                  <L 1103>
                adj_compute_positional_correction(var_406, var_355, var_53, var_59, var_51, var_66, var_52, var_69, var_345, var_344, var_347, var_348, var_24, var_407, var_408, var_dt, adj_406, adj_355, adj_53, adj_59, adj_51, adj_66, adj_52, adj_69, adj_345, adj_344, adj_347, adj_348, adj_24, adj_407, adj_408, adj_dt, adj_412);
                // adj: dt,                                                                       <L 1100>
                // adj: damping,                                                                  <L 1099>
                // adj: compliance,                                                               <L 1098>
                // adj: lambda_in,                                                                <L 1097>
                // adj: angular_c,                                                                <L 1096>
                // adj: angular_p,                                                                <L 1095>
                // adj: linear_c,                                                                 <L 1094>
                // adj: linear_p,                                                                 <L 1093>
                // adj: I_inv_c,                                                                  <L 1092>
                // adj: I_inv_p,                                                                  <L 1091>
                // adj: m_inv_c,                                                                  <L 1090>
                // adj: m_inv_p,                                                                  <L 1089>
                // adj: pose_c,                                                                   <L 1088>
                // adj: pose_p,                                                                   <L 1087>
                // adj: derr,                                                                     <L 1086>
                // adj: err,                                                                      <L 1085>
                // adj: d_lambda = compute_positional_correction(                                 <L 1084>
                // adj: lambda_in = 0.0                                                           <L 1083>
            }
            wp::adj_abs(var_406, adj_406, adj_410);
            // adj: if wp.abs(err) > 1e-9:                                                        <L 1082>
            wp::adj_select(var_359, var_405, var_322, adj_359, adj_405, adj_322, adj_409);
            wp::adj_select(var_359, var_404, var_24, adj_359, adj_404, adj_24, adj_408);
            wp::adj_select(var_359, var_403, var_363, adj_359, adj_403, adj_363, adj_407);
            wp::adj_select(var_359, var_402, var_362, adj_359, adj_402, adj_362, adj_406);
            if (!var_359) {
                wp::adj_select(var_364, var_384, var_322, adj_364, adj_384, adj_322, adj_405);
                wp::adj_select(var_364, var_401, var_24, adj_364, adj_401, adj_24, adj_404);
                wp::adj_select(var_364, var_400, var_368, adj_364, adj_400, adj_368, adj_403);
                wp::adj_select(var_364, var_399, var_367, adj_364, adj_399, adj_367, adj_402);
                if (!var_364) {
                    wp::adj_select(var_371, var_398, var_383, adj_371, adj_398, adj_383, adj_401);
                    wp::adj_select(var_371, var_397, var_382, adj_371, adj_397, adj_382, adj_400);
                    wp::adj_select(var_371, var_396, var_381, adj_371, adj_396, adj_381, adj_399);
                    if (!var_371) {
                        wp::adj_select(var_386, var_383, var_395, adj_386, adj_383, adj_395, adj_398);
                        wp::adj_select(var_386, var_382, var_394, adj_386, adj_382, adj_394, adj_397);
                        wp::adj_select(var_386, var_381, var_393, adj_386, adj_381, adj_393, adj_396);
                        if (var_386) {
                            wp::adj_extract(var_326, var_338, adj_326, adj_338, adj_395);
                            // adj: damping = axis_damping[dim]                                   <L 1080>
                            wp::adj_select(var_388, var_382, var_392, adj_388, adj_382, adj_392, adj_394);
                            wp::adj_select(var_388, var_381, var_390, adj_388, adj_381, adj_390, adj_393);
                            if (var_388) {
                                wp::adj_div(var_157, var_391, var_392, adj_157, adj_391, adj_392);
                                wp::adj_extract(var_325, var_338, adj_325, adj_338, adj_391);
                                // adj: compliance = 1.0 / axis_stiffness[dim]                    <L 1079>
                                wp::adj_mul(var_389, var_dt, adj_389, adj_dt, adj_390);
                                wp::adj_sub(var_355, var_384, adj_355, adj_384, adj_389);
                                // adj: err = (derr - target) * dt                                <L 1078>
                            }
                            wp::adj_extract(var_325, var_338, adj_325, adj_338, adj_387);
                            // adj: if axis_stiffness[dim] > 0.0:                                 <L 1077>
                        }
                        // adj: elif mode == JOINT_MODE_TARGET_VELOCITY:                          <L 1076>
                    }
                    wp::adj_select(var_371, var_369, var_372, adj_371, adj_369, adj_372, adj_384);
                    wp::adj_select(var_371, var_24, var_380, adj_371, adj_24, adj_380, adj_383);
                    wp::adj_select(var_371, var_368, var_379, adj_371, adj_368, adj_379, adj_382);
                    wp::adj_select(var_371, var_367, var_378, adj_371, adj_367, adj_378, adj_381);
                    if (var_371) {
                        wp::adj_extract(var_326, var_338, adj_326, adj_338, adj_380);
                        // adj: damping = axis_damping[dim]                                       <L 1075>
                        wp::adj_select(var_374, var_368, var_377, adj_374, adj_368, adj_377, adj_379);
                        wp::adj_select(var_374, var_367, var_375, adj_374, adj_367, adj_375, adj_378);
                        if (var_374) {
                            wp::adj_div(var_157, var_376, var_377, adj_157, adj_376, adj_377);
                            wp::adj_extract(var_325, var_338, adj_325, adj_338, adj_376);
                            // adj: compliance = 1.0 / axis_stiffness[dim]                        <L 1074>
                            wp::adj_sub(var_339, var_372, adj_339, adj_372, adj_375);
                            // adj: err = e - target                                              <L 1073>
                        }
                        wp::adj_extract(var_325, var_338, adj_325, adj_338, adj_373);
                        // adj: if axis_stiffness[dim] > 0.0:                                     <L 1072>
                        wp::adj_clamp(var_369, var_357, var_358, adj_369, adj_357, adj_358, adj_372);
                        // adj: target = wp.clamp(target, lower, upper)                           <L 1071>
                    }
                    // adj: if mode == JOINT_MODE_TARGET_POSITION:                                <L 1070>
                    wp::adj_extract(var_329, var_338, adj_329, adj_338, adj_369);
                    // adj: target = axis_target[dim]                                             <L 1069>
                }
                wp::adj_select(var_364, var_363, var_366, adj_364, adj_363, adj_366, adj_368);
                wp::adj_select(var_364, var_362, var_365, adj_364, adj_362, adj_365, adj_367);
                if (var_364) {
                    // adj: damping = 0.0                                                         <L 1067>
                    wp::adj_copy(var_89, adj_89, adj_366);
                    // adj: compliance = linear_compliance                                        <L 1066>
                    wp::adj_sub(var_339, var_358, adj_339, adj_358, adj_365);
                    // adj: err = e - upper                                                       <L 1065>
                }
                // adj: elif e > upper:                                                           <L 1064>
            }
            wp::adj_select(var_359, var_356, var_361, adj_359, adj_356, adj_361, adj_363);
            wp::adj_select(var_359, var_24, var_360, adj_359, adj_24, adj_360, adj_362);
            if (var_359) {
                // adj: damping = 0.0                                                             <L 1063>
                wp::adj_copy(var_89, adj_89, adj_361);
                // adj: compliance = linear_compliance                                            <L 1062>
                wp::adj_sub(var_339, var_357, adj_339, adj_357, adj_360);
                // adj: err = e - lower                                                           <L 1061>
            }
            // adj: if e < lower:                                                                 <L 1060>
            wp::adj_extract(var_331, var_338, adj_331, adj_338, adj_358);
            // adj: upper = axis_limits_upper[dim]                                                <L 1059>
            wp::adj_extract(var_330, var_338, adj_330, adj_338, adj_357);
            // adj: lower = axis_limits_lower[dim]                                                <L 1058>
            // adj: damping = 0.0                                                                 <L 1056>
            wp::adj_copy(var_89, adj_89, adj_356);
            // adj: compliance = linear_compliance                                                <L 1055>
            // adj: err = 0.0                                                                     <L 1054>
            wp::adj_add(var_353, var_354, adj_353, adj_354, adj_355);
            wp::adj_dot(var_348, var_75, adj_348, adj_75, adj_354);
            // adj: + wp.dot(angular_c, omega_c)                                                  <L 1051>
            wp::adj_add(var_351, var_352, adj_351, adj_352, adj_353);
            wp::adj_dot(var_347, var_56, adj_347, adj_56, adj_352);
            // adj: + wp.dot(angular_p, omega_p)                                                  <L 1050>
            wp::adj_add(var_349, var_350, adj_349, adj_350, adj_351);
            wp::adj_dot(var_344, var_72, adj_344, adj_72, adj_350);
            // adj: + wp.dot(linear_c, vel_c)                                                     <L 1049>
            wp::adj_dot(var_345, var_55, adj_345, adj_55, adj_349);
            // adj: wp.dot(linear_p, vel_p)                                                       <L 1048>
            // adj: derr = (                                                                      <L 1047>
            wp::adj_cross(var_336, var_344, adj_336, adj_344, adj_348);
            // adj: angular_c = wp.cross(r_c, linear_c)                                           <L 1045>
            wp::adj_neg(var_346, adj_346, adj_347);
            wp::adj_cross(var_334, var_344, adj_334, adj_344, adj_346);
            // adj: angular_p = -wp.cross(r_p, linear_c)                                          <L 1044>
            wp::adj_neg(var_344, adj_344, adj_345);
            // adj: linear_p = -linear_c                                                          <L 1043>
            wp::adj_vec_t(var_341, var_342, var_343, adj_341, adj_342, adj_343, adj_344);
            wp::adj_extract(var_333, var_277, var_338, adj_333, adj_277, adj_338, adj_343);
            wp::adj_extract(var_333, var_99, var_338, adj_333, adj_99, adj_338, adj_342);
            wp::adj_extract(var_333, var_5, var_338, adj_333, adj_5, adj_338, adj_341);
            // adj: linear_c = wp.vec3(frame_p[0, dim], frame_p[1, dim], frame_p[2, dim])         <L 1042>
            wp::adj_extract(var_317, var_338, adj_317, adj_338, adj_340);
            // adj: mode = axis_mode[dim]                                                         <L 1039>
            wp::adj_extract(var_185, var_338, adj_185, adj_338, adj_339);
            // adj: e = rel_p[dim]                                                                <L 1038>
            wp::adj_int(var_337, adj_337, adj_338);
            // adj: for dim in range(3):                                                          <L 1037>
            wp::adj_sub(var_86, var_335, adj_86, adj_335, adj_336);
            wp::adj_transform_point(var_59, var_63, adj_59, adj_63, adj_335);
            // adj: r_c = x_c - wp.transform_point(pose_c, com_c)                                 <L 1034>
            wp::adj_sub(var_86, var_103, adj_86, adj_103, adj_334);
            // adj: r_p = x_c - world_com_p                                                       <L 1033>
            wp::adj_quat_to_matrix(var_332, adj_332, adj_333);
            wp::adj_transform_get_rotation(var_50, adj_50, adj_332);
            // adj: frame_p = wp.quat_to_matrix(wp.transform_get_rotation(X_wp))                  <L 1031>
            wp::adj_spatial_bottom(var_316, adj_316, adj_331);
            // adj: axis_limits_upper = wp.spatial_bottom(axis_limits)                            <L 1029>
            wp::adj_spatial_top(var_316, adj_316, adj_330);
            // adj: axis_limits_lower = wp.spatial_top(axis_limits)                               <L 1028>
            wp::adj_select(var_327, var_324, var_328, adj_327, adj_324, adj_328, adj_329);
            if (var_327) {
                wp::adj_div(var_324, var_315, adj_324, adj_315, adj_328);
                // adj: axis_target /= ke_sum                                                     <L 1027>
            }
            // adj: if ke_sum > 0.0:                                                              <L 1026>
            wp::adj_extract(var_318, var_277, adj_318, adj_277, adj_326);
            // adj: axis_damping = axis_target_ke_kd[2]                                           <L 1025>
            wp::adj_extract(var_318, var_99, adj_318, adj_99, adj_325);
            // adj: axis_stiffness = axis_target_ke_kd[1]                                         <L 1024>
            wp::adj_extract(var_318, var_5, adj_318, adj_5, adj_324);
            // adj: axis_target = axis_target_ke_kd[0]                                            <L 1023>
            wp::adj_select(var_278, var_233, var_279, adj_278, adj_233, adj_279, adj_323);
            wp::adj_select(var_278, var_276, var_311, adj_278, adj_276, adj_311, adj_322);
            wp::adj_select(var_278, var_275, var_310, adj_278, adj_275, adj_310, adj_321);
            wp::adj_select(var_278, var_274, var_292, adj_278, adj_274, adj_292, adj_320);
            wp::adj_select(var_278, var_273, var_282, adj_278, adj_273, adj_282, adj_319);
            wp::adj_select(var_278, var_272, var_309, adj_278, adj_272, adj_309, adj_318);
            wp::adj_select(var_278, var_271, var_308, adj_278, adj_271, adj_308, adj_317);
            wp::adj_select(var_278, var_270, var_289, adj_278, adj_270, adj_289, adj_316);
            wp::adj_select(var_278, var_269, var_307, adj_278, adj_269, adj_307, adj_315);
            wp::adj_select(var_278, var_268, var_306, adj_278, adj_268, adj_306, adj_314);
            wp::adj_select(var_278, var_267, var_288, adj_278, adj_267, adj_288, adj_313);
            wp::adj_select(var_278, var_266, var_285, adj_278, adj_266, adj_285, adj_312);
            if (var_278) {
                wp::adj_select(var_293, var_276, var_302, adj_293, adj_276, adj_302, adj_311);
                wp::adj_select(var_293, var_275, var_299, adj_293, adj_275, adj_299, adj_310);
                wp::adj_select(var_293, var_272, var_304, adj_293, adj_272, adj_304, adj_309);
                wp::adj_select(var_293, var_271, var_303, adj_293, adj_271, adj_303, adj_308);
                wp::adj_select(var_293, var_269, var_305, adj_293, adj_269, adj_305, adj_307);
                wp::adj_select(var_293, var_268, var_296, adj_293, adj_268, adj_296, adj_306);
                if (var_293) {
                    wp::adj_add(var_269, var_296, adj_269, adj_296, adj_305);
                    // adj: ke_sum += ke                                                          <L 1021>
                    adj_update_joint_axis_target_ke_kd(var_282, var_302, var_296, var_299, var_272, adj_282, adj_302, adj_296, adj_299, adj_272, adj_304);
                    // adj: axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)  <L 1020>
                    adj_update_joint_axis_mode(var_292, var_282, var_271, adj_292, adj_282, adj_271, adj_303);
                    // adj: axis_mode = update_joint_axis_mode(mode, axis, axis_mode)             <L 1019>
                    wp::adj_copy(var_301, adj_300, adj_302);
                    wp::adj_load(var_300, adj_300, adj_301);
                    wp::adj_address(var_joint_target, var_279, adj_joint_target, adj_279, adj_300);
                    // adj: target = joint_target[axis_idx]                                       <L 1018>
                    wp::adj_copy(var_298, adj_297, adj_299);
                    wp::adj_load(var_297, adj_297, adj_298);
                    wp::adj_address(var_joint_target_kd, var_279, adj_joint_target_kd, adj_279, adj_297);
                    // adj: kd = joint_target_kd[axis_idx]                                        <L 1017>
                    wp::adj_copy(var_295, adj_294, adj_296);
                    wp::adj_load(var_294, adj_294, adj_295);
                    wp::adj_address(var_joint_target_ke, var_279, adj_joint_target_ke, adj_279, adj_294);
                    // adj: ke = joint_target_ke[axis_idx]                                        <L 1016>
                }
                // adj: if mode != JOINT_MODE_LIMIT:  # position or velocity target               <L 1015>
                wp::adj_copy(var_291, adj_290, adj_292);
                wp::adj_load(var_290, adj_290, adj_291);
                wp::adj_address(var_joint_axis_mode, var_279, adj_joint_axis_mode, adj_279, adj_290);
                // adj: mode = joint_axis_mode[axis_idx]                                          <L 1014>
                adj_update_joint_axis_limits(var_282, var_285, var_288, var_270, adj_282, adj_285, adj_288, adj_270, adj_289);
                // adj: axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)   <L 1013>
                wp::adj_copy(var_287, adj_286, adj_288);
                wp::adj_load(var_286, adj_286, adj_287);
                wp::adj_address(var_joint_limit_upper, var_279, adj_joint_limit_upper, adj_279, adj_286);
                // adj: upper = joint_limit_upper[axis_idx]                                       <L 1012>
                wp::adj_copy(var_284, adj_283, adj_285);
                wp::adj_load(var_283, adj_283, adj_284);
                wp::adj_address(var_joint_limit_lower, var_279, adj_joint_limit_lower, adj_279, adj_283);
                // adj: lower = joint_limit_lower[axis_idx]                                       <L 1011>
                wp::adj_copy(var_281, adj_280, adj_282);
                wp::adj_load(var_280, adj_280, adj_281);
                wp::adj_address(var_joint_axis, var_279, adj_joint_axis, adj_279, adj_280);
                // adj: axis = joint_axis[axis_idx]                                               <L 1010>
                wp::adj_add(var_95, var_277, adj_95, adj_277, adj_279);
                // adj: axis_idx = axis_start + 2                                                 <L 1009>
            }
            // adj: if lin_axis_count > 2:                                                        <L 1008>
            wp::adj_select(var_232, var_219, var_265, adj_232, adj_219, adj_265, adj_276);
            wp::adj_select(var_232, var_216, var_264, adj_232, adj_216, adj_264, adj_275);
            wp::adj_select(var_232, var_208, var_246, adj_232, adj_208, adj_246, adj_274);
            wp::adj_select(var_232, var_196, var_236, adj_232, adj_196, adj_236, adj_273);
            wp::adj_select(var_232, var_231, var_263, adj_232, adj_231, adj_263, adj_272);
            wp::adj_select(var_232, var_230, var_262, adj_232, adj_230, adj_262, adj_271);
            wp::adj_select(var_232, var_229, var_243, adj_232, adj_229, adj_243, adj_270);
            wp::adj_select(var_232, var_228, var_261, adj_232, adj_228, adj_261, adj_269);
            wp::adj_select(var_232, var_227, var_260, adj_232, adj_227, adj_260, adj_268);
            wp::adj_select(var_232, var_116, var_242, adj_232, adj_116, adj_242, adj_267);
            wp::adj_select(var_232, var_113, var_239, adj_232, adj_113, adj_239, adj_266);
            if (var_232) {
                wp::adj_select(var_247, var_219, var_256, adj_247, adj_219, adj_256, adj_265);
                wp::adj_select(var_247, var_216, var_253, adj_247, adj_216, adj_253, adj_264);
                wp::adj_select(var_247, var_231, var_258, adj_247, adj_231, adj_258, adj_263);
                wp::adj_select(var_247, var_230, var_257, adj_247, adj_230, adj_257, adj_262);
                wp::adj_select(var_247, var_228, var_259, adj_247, adj_228, adj_259, adj_261);
                wp::adj_select(var_247, var_227, var_250, adj_247, adj_227, adj_250, adj_260);
                if (var_247) {
                    wp::adj_add(var_228, var_250, adj_228, adj_250, adj_259);
                    // adj: ke_sum += ke                                                          <L 1007>
                    adj_update_joint_axis_target_ke_kd(var_236, var_256, var_250, var_253, var_231, adj_236, adj_256, adj_250, adj_253, adj_231, adj_258);
                    // adj: axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)  <L 1006>
                    adj_update_joint_axis_mode(var_246, var_236, var_230, adj_246, adj_236, adj_230, adj_257);
                    // adj: axis_mode = update_joint_axis_mode(mode, axis, axis_mode)             <L 1005>
                    wp::adj_copy(var_255, adj_254, adj_256);
                    wp::adj_load(var_254, adj_254, adj_255);
                    wp::adj_address(var_joint_target, var_233, adj_joint_target, adj_233, adj_254);
                    // adj: target = joint_target[axis_idx]                                       <L 1004>
                    wp::adj_copy(var_252, adj_251, adj_253);
                    wp::adj_load(var_251, adj_251, adj_252);
                    wp::adj_address(var_joint_target_kd, var_233, adj_joint_target_kd, adj_233, adj_251);
                    // adj: kd = joint_target_kd[axis_idx]                                        <L 1003>
                    wp::adj_copy(var_249, adj_248, adj_250);
                    wp::adj_load(var_248, adj_248, adj_249);
                    wp::adj_address(var_joint_target_ke, var_233, adj_joint_target_ke, adj_233, adj_248);
                    // adj: ke = joint_target_ke[axis_idx]                                        <L 1002>
                }
                // adj: if mode != JOINT_MODE_LIMIT:  # position or velocity target               <L 1001>
                wp::adj_copy(var_245, adj_244, adj_246);
                wp::adj_load(var_244, adj_244, adj_245);
                wp::adj_address(var_joint_axis_mode, var_233, adj_joint_axis_mode, adj_233, adj_244);
                // adj: mode = joint_axis_mode[axis_idx]                                          <L 1000>
                adj_update_joint_axis_limits(var_236, var_239, var_242, var_229, adj_236, adj_239, adj_242, adj_229, adj_243);
                // adj: axis_limits = update_joint_axis_limits(axis, lower, upper, axis_limits)   <L 999>
                wp::adj_copy(var_241, adj_240, adj_242);
                wp::adj_load(var_240, adj_240, adj_241);
                wp::adj_address(var_joint_limit_upper, var_233, adj_joint_limit_upper, adj_233, adj_240);
                // adj: upper = joint_limit_upper[axis_idx]                                       <L 998>
                wp::adj_copy(var_238, adj_237, adj_239);
                wp::adj_load(var_237, adj_237, adj_238);
                wp::adj_address(var_joint_limit_lower, var_233, adj_joint_limit_lower, adj_233, adj_237);
                // adj: lower = joint_limit_lower[axis_idx]                                       <L 997>
                wp::adj_copy(var_235, adj_234, adj_236);
                wp::adj_load(var_234, adj_234, adj_235);
                wp::adj_address(var_joint_axis, var_233, adj_joint_axis, adj_233, adj_234);
                // adj: axis = joint_axis[axis_idx]                                               <L 996>
                wp::adj_add(var_95, var_99, adj_95, adj_99, adj_233);
                // adj: axis_idx = axis_start + 1                                                 <L 995>
            }
            // adj: if lin_axis_count > 1:                                                        <L 994>
            wp::adj_select(var_193, var_192, var_226, adj_193, adj_192, adj_226, adj_231);
            wp::adj_select(var_193, var_191, var_225, adj_193, adj_191, adj_225, adj_230);
            wp::adj_select(var_193, var_187, var_205, adj_193, adj_187, adj_205, adj_229);
            wp::adj_select(var_193, var_186, var_224, adj_193, adj_186, adj_224, adj_228);
            wp::adj_select(var_193, var_155, var_223, adj_193, adj_155, adj_223, adj_227);
            if (var_193) {
                wp::adj_select(var_210, var_192, var_221, adj_210, adj_192, adj_221, adj_226);
                wp::adj_select(var_210, var_191, var_220, adj_210, adj_191, adj_220, adj_225);
                wp::adj_select(var_210, var_186, var_222, adj_210, adj_186, adj_222, adj_224);
                wp::adj_select(var_210, var_155, var_213, adj_210, adj_155, adj_213, adj_223);
                if (var_210) {
                    wp::adj_add(var_186, var_213, adj_186, adj_213, adj_222);
                    // adj: ke_sum += ke                                                          <L 993>
                    adj_update_joint_axis_target_ke_kd(var_196, var_219, var_213, var_216, var_192, adj_196, adj_219, adj_213, adj_216, adj_192, adj_221);
                    // adj: axis_target_ke_kd = update_joint_axis_target_ke_kd(axis, target, ke, kd, axis_target_ke_kd)  <L 992>
                    adj_update_joint_axis_mode(var_208, var_196, var_191, adj_208, adj_196, adj_191, adj_220);
                    // adj: axis_mode = update_joint_axis_mode(mode, axis, axis_mode)             <L 991>
                    wp::adj_copy(var_218, adj_217, adj_219);
                    wp::adj_load(var_217, adj_217, adj_218);
                    wp::adj_address(var_joint_target, var_95, adj_joint_target, adj_95, adj_217);
                    // adj: target = joint_target[axis_start]                                     <L 990>
                    wp::adj_copy(var_215, adj_214, adj_216);
                    wp::adj_load(var_214, adj_214, adj_215);
                    wp::adj_address(var_joint_target_kd, var_95, adj_joint_target_kd, adj_95, adj_214);
                    // adj: kd = joint_target_kd[axis_start]                                      <L 989>
                    wp::adj_copy(var_212, adj_211, adj_213);
                    wp::adj_load(var_211, adj_211, adj_212);
                    wp::adj_address(var_joint_target_ke, var_95, adj_joint_target_ke, adj_95, adj_211);
                    // adj: ke = joint_target_ke[axis_start]                                      <L 988>
                }
                // adj: if mode != JOINT_MODE_LIMIT:  # position or velocity target               <L 987>
                wp::adj_copy(var_207, adj_206, adj_208);
                wp::adj_load(var_206, adj_206, adj_207);
                wp::adj_address(var_joint_axis_mode, var_95, adj_joint_axis_mode, adj_95, adj_206);
                // adj: mode = joint_axis_mode[axis_start]                                        <L 986>
                wp::adj_vec_t(var_203, var_204, adj_203, adj_204, adj_205);
                adj_vec_max(var_199, var_202, adj_199, adj_202, adj_204);
                adj_vec_min(var_199, var_202, adj_199, adj_202, adj_203);
                // adj: axis_limits = wp.spatial_vector(vec_min(lo_temp, up_temp), vec_max(lo_temp, up_temp))  <L 985>
                wp::adj_mul(var_196, var_201, adj_196, adj_200, adj_202);
                wp::adj_load(var_200, adj_200, adj_201);
                wp::adj_address(var_joint_limit_upper, var_95, adj_joint_limit_upper, adj_95, adj_200);
                // adj: up_temp = axis * joint_limit_upper[axis_start]                            <L 984>
                wp::adj_mul(var_196, var_198, adj_196, adj_197, adj_199);
                wp::adj_load(var_197, adj_197, adj_198);
                wp::adj_address(var_joint_limit_lower, var_95, adj_joint_limit_lower, adj_95, adj_197);
                // adj: lo_temp = axis * joint_limit_lower[axis_start]                            <L 983>
                wp::adj_copy(var_195, adj_194, adj_196);
                wp::adj_load(var_194, adj_194, adj_195);
                wp::adj_address(var_joint_axis, var_95, adj_joint_axis, adj_95, adj_194);
                // adj: axis = joint_axis[axis_start]                                             <L 982>
            }
            // adj: if lin_axis_count > 0:                                                        <L 981>
            wp::adj_mat_t(var_24, adj_24, adj_192);
            // adj: axis_target_ke_kd = wp.mat33(0.0)                                             <L 979>
            wp::adj_vec_t(var_188, var_189, var_190, adj_188, adj_189, adj_190, adj_191);
            wp::adj_uint8(var_5, adj_5, adj_190);
            wp::adj_uint8(var_5, adj_5, adj_189);
            wp::adj_uint8(var_5, adj_5, adj_188);
            // adj: axis_mode = wp.vec3ub(wp.uint8(0), wp.uint8(0), wp.uint8(0))                  <L 978>
            wp::adj_vec_t({var_24, var_24, var_24, var_24, var_24, var_24}, {&adj_24, &adj_24, &adj_24, &adj_24, &adj_24, &adj_24}, adj_187);
            // adj: axis_limits = wp.spatial_vector(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                 <L 977>
            wp::adj_float(var_24, adj_24, adj_186);
            // adj: ke_sum = float(0.0)                                                           <L 976>
        }
        wp::adj_select(var_106, var_85, var_128, adj_106, adj_85, adj_128, adj_185);
        wp::adj_select(var_106, var_82, var_179, adj_106, adj_82, adj_179, adj_184);
        wp::adj_select(var_106, var_81, var_178, adj_106, adj_81, adj_178, adj_183);
        wp::adj_select(var_106, var_80, var_177, adj_106, adj_80, adj_177, adj_182);
        wp::adj_select(var_106, var_79, var_176, adj_106, adj_79, adj_176, adj_181);
        if (var_106) {
            wp::adj_select(var_138, var_110, var_141, adj_138, adj_110, adj_141, adj_180);
            wp::adj_select(var_138, var_82, var_175, adj_138, adj_82, adj_175, adj_179);
            wp::adj_select(var_138, var_81, var_172, adj_138, adj_81, adj_172, adj_178);
            wp::adj_select(var_138, var_80, var_169, adj_138, adj_80, adj_169, adj_177);
            wp::adj_select(var_138, var_79, var_166, adj_138, adj_79, adj_166, adj_176);
            if (var_138) {
                wp::adj_add(var_82, var_174, adj_82, adj_174, adj_175);
                wp::adj_mul(var_144, var_173, adj_144, adj_173, adj_174);
                wp::adj_mul(var_163, var_angular_relaxation, adj_163, adj_angular_relaxation, adj_173);
                // adj: ang_delta_c += angular_c * (d_lambda * angular_relaxation)                <L 972>
                wp::adj_add(var_81, var_171, adj_81, adj_171, adj_172);
                wp::adj_mul(var_139, var_170, adj_139, adj_170, adj_171);
                wp::adj_mul(var_163, var_linear_relaxation, adj_163, adj_linear_relaxation, adj_170);
                // adj: lin_delta_c += linear_c * (d_lambda * linear_relaxation)                  <L 971>
                wp::adj_add(var_80, var_168, adj_80, adj_168, adj_169);
                wp::adj_mul(var_143, var_167, adj_143, adj_167, adj_168);
                wp::adj_mul(var_163, var_angular_relaxation, adj_163, adj_angular_relaxation, adj_167);
                // adj: ang_delta_p += angular_p * (d_lambda * angular_relaxation)                <L 970>
                wp::adj_add(var_79, var_165, adj_79, adj_165, adj_166);
                wp::adj_mul(var_140, var_164, adj_140, adj_164, adj_165);
                wp::adj_mul(var_163, var_linear_relaxation, adj_163, adj_linear_relaxation, adj_164);
                // adj: lin_delta_p += linear_p * (d_lambda * linear_relaxation)                  <L 969>
                adj_compute_positional_correction(var_135, var_151, var_53, var_59, var_51, var_66, var_52, var_69, var_140, var_139, var_143, var_144, var_24, var_159, var_162, var_dt, adj_135, adj_151, adj_53, adj_59, adj_51, adj_66, adj_52, adj_69, adj_140, adj_139, adj_143, adj_144, adj_24, adj_159, adj_162, adj_dt, adj_163);
                // adj: dt,                                                                       <L 966>
                // adj: damping,                                                                  <L 965>
                // adj: compliance,                                                               <L 964>
                // adj: lambda_in,                                                                <L 963>
                // adj: angular_c,                                                                <L 962>
                // adj: angular_p,                                                                <L 961>
                // adj: linear_c,                                                                 <L 960>
                // adj: linear_p,                                                                 <L 959>
                // adj: I_inv_c,                                                                  <L 958>
                // adj: I_inv_p,                                                                  <L 957>
                // adj: m_inv_c,                                                                  <L 956>
                // adj: m_inv_p,                                                                  <L 955>
                // adj: pose_c,                                                                   <L 954>
                // adj: pose_p,                                                                   <L 953>
                // adj: derr,                                                                     <L 952>
                // adj: err,                                                                      <L 951>
                // adj: d_lambda = compute_positional_correction(                                 <L 950>
                wp::adj_copy(var_161, adj_160, adj_162);
                wp::adj_load(var_160, adj_160, adj_161);
                wp::adj_address(var_joint_target_kd, var_95, adj_joint_target_kd, adj_95, adj_160);
                // adj: damping = joint_target_kd[axis_start]                                     <L 949>
                wp::adj_select(var_156, var_152, var_158, adj_156, adj_152, adj_158, adj_159);
                if (var_156) {
                    wp::adj_div(var_157, var_155, var_158, adj_157, adj_155, adj_158);
                    // adj: compliance = 1.0 / ke                                                 <L 948>
                }
                // adj: if ke > 0.0:                                                              <L 947>
                wp::adj_copy(var_154, adj_153, adj_155);
                wp::adj_load(var_153, adj_153, adj_154);
                wp::adj_address(var_joint_target_ke, var_95, adj_joint_target_ke, adj_95, adj_153);
                // adj: ke = joint_target_ke[axis_start]                                          <L 946>
                wp::adj_copy(var_89, adj_89, adj_152);
                // adj: compliance = linear_compliance                                            <L 945>
                // adj: lambda_in = 0.0                                                           <L 944>
                wp::adj_add(var_149, var_150, adj_149, adj_150, adj_151);
                wp::adj_dot(var_144, var_75, adj_144, adj_75, adj_150);
                // adj: + wp.dot(angular_c, omega_c)                                              <L 942>
                wp::adj_add(var_147, var_148, adj_147, adj_148, adj_149);
                wp::adj_dot(var_143, var_56, adj_143, adj_56, adj_148);
                // adj: + wp.dot(angular_p, omega_p)                                              <L 941>
                wp::adj_add(var_145, var_146, adj_145, adj_146, adj_147);
                wp::adj_dot(var_139, var_72, adj_139, adj_72, adj_146);
                // adj: + wp.dot(linear_c, vel_c)                                                 <L 940>
                wp::adj_dot(var_140, var_55, adj_140, adj_55, adj_145);
                // adj: wp.dot(linear_p, vel_p)                                                   <L 939>
                // adj: derr = (                                                                  <L 938>
                wp::adj_cross(var_141, var_139, adj_141, adj_139, adj_144);
                // adj: angular_c = wp.cross(r_c, linear_c)                                       <L 936>
                wp::adj_neg(var_142, adj_142, adj_143);
                wp::adj_cross(var_108, var_139, adj_108, adj_139, adj_142);
                // adj: angular_p = -wp.cross(r_p, linear_c)                                      <L 935>
                wp::adj_sub(var_86, var_104, adj_86, adj_104, adj_141);
                // adj: r_c = x_c - world_com_c                                                   <L 934>
                wp::adj_neg(var_139, adj_139, adj_140);
                // adj: linear_p = -linear_c                                                      <L 933>
                wp::adj_copy(var_128, adj_128, adj_139);
                // adj: linear_c = rel_p                                                          <L 932>
            }
            wp::adj_abs(var_135, adj_135, adj_136);
            // adj: if wp.abs(err) > 1e-9:                                                        <L 930>
            wp::adj_select(var_123, var_134, var_129, adj_123, adj_134, adj_129, adj_135);
            if (!var_123) {
                wp::adj_select(var_132, var_129, var_133, adj_132, adj_129, adj_133, adj_134);
                if (var_132) {
                    wp::adj_sub(var_120, var_116, adj_120, adj_116, adj_133);
                    // adj: err = d - upper                                                       <L 928>
                }
                // adj: elif upper >= 0.0 and d > upper:                                          <L 927>
            }
            wp::adj_select(var_123, var_24, var_124, adj_123, adj_24, adj_124, adj_129);
            wp::adj_select(var_123, var_85, var_127, adj_123, adj_85, adj_127, adj_128);
            if (var_123) {
                wp::adj_mul(var_124, var_126, adj_124, adj_126, adj_127);
                wp::adj_normalize(var_125, var_126, adj_125, adj_126);
                wp::adj_sub(var_104, var_103, adj_104, adj_103, adj_125);
                // adj: rel_p = err * wp.normalize(world_com_c - world_com_p)                     <L 926>
                wp::adj_sub(var_120, var_113, adj_120, adj_113, adj_124);
                // adj: err = d - lower                                                           <L 923>
            }
            // adj: if lower >= 0.0 and d < lower:                                                <L 922>
            // adj: err = 0.0                                                                     <L 921>
            wp::adj_length(var_85, var_120, adj_85, adj_120);
            // adj: d = wp.length(rel_p)                                                          <L 920>
            if (var_119) {
                label2:;
                // adj: return                                                                    <L 919>
            }
            // adj: if lower < 0.0 and upper < 0.0:                                               <L 917>
            wp::adj_copy(var_115, adj_114, adj_116);
            wp::adj_load(var_114, adj_114, adj_115);
            wp::adj_address(var_joint_limit_upper, var_95, adj_joint_limit_upper, adj_95, adj_114);
            // adj: upper = joint_limit_upper[axis_start]                                         <L 916>
            wp::adj_copy(var_112, adj_111, adj_113);
            wp::adj_load(var_111, adj_111, adj_112);
            wp::adj_address(var_joint_limit_lower, var_95, adj_joint_limit_lower, adj_95, adj_111);
            // adj: lower = joint_limit_lower[axis_start]                                         <L 915>
            wp::adj_sub(var_109, var_104, adj_109, adj_104, adj_110);
            wp::adj_transform_get_translation(var_60, adj_60, adj_109);
            // adj: r_c = wp.transform_get_translation(X_wc) - world_com_c                        <L 914>
            wp::adj_sub(var_107, var_103, adj_107, adj_103, adj_108);
            wp::adj_transform_get_translation(var_50, adj_50, adj_107);
            // adj: r_p = wp.transform_get_translation(X_wp) - world_com_p                        <L 913>
        }
        // adj: if type == fs5Model.JOINT_DISTANCE:                                               <L 912>
        wp::adj_transform_point(var_59, var_63, adj_59, adj_63, adj_104);
        // adj: world_com_c = wp.transform_point(pose_c, com_c)                                   <L 909>
        wp::adj_transform_point(var_53, var_54, adj_53, adj_54, adj_103);
        // adj: world_com_p = wp.transform_point(pose_p, com_p)                                   <L 908>
        wp::adj_copy(var_101, adj_100, adj_102);
        wp::adj_load(var_100, adj_100, adj_101);
        wp::adj_address(var_joint_axis_dim, var_0, var_99, adj_joint_axis_dim, adj_0, adj_99, adj_100);
        // adj: ang_axis_count = joint_axis_dim[tid, 1]                                           <L 906>
        wp::adj_copy(var_97, adj_96, adj_98);
        wp::adj_load(var_96, adj_96, adj_97);
        wp::adj_address(var_joint_axis_dim, var_0, var_5, adj_joint_axis_dim, adj_0, adj_5, adj_96);
        // adj: lin_axis_count = joint_axis_dim[tid, 0]                                           <L 905>
        wp::adj_copy(var_94, adj_93, adj_95);
        wp::adj_load(var_93, adj_93, adj_94);
        wp::adj_address(var_joint_axis_start, var_0, adj_joint_axis_start, adj_0, adj_93);
        // adj: axis_start = joint_axis_start[tid]                                                <L 904>
        wp::adj_copy(var_91, adj_90, adj_92);
        wp::adj_load(var_90, adj_90, adj_91);
        wp::adj_address(var_joint_angular_compliance, var_0, adj_joint_angular_compliance, adj_0, adj_90);
        // adj: angular_compliance = joint_angular_compliance[tid]                                <L 902>
        wp::adj_copy(var_88, adj_87, adj_89);
        wp::adj_load(var_87, adj_87, adj_88);
        wp::adj_address(var_joint_linear_compliance, var_0, adj_joint_linear_compliance, adj_0, adj_87);
        // adj: linear_compliance = joint_linear_compliance[tid]                                  <L 901>
        wp::adj_transform_get_translation(var_60, adj_60, adj_86);
        // adj: x_c = wp.transform_get_translation(X_wc)                                          <L 899>
        wp::adj_transform_get_translation(var_84, adj_84, adj_85);
        // adj: rel_p = wp.transform_get_translation(rel_pose)                                    <L 895>
        wp::adj_mul(var_83, var_60, adj_83, adj_60, adj_84);
        wp::adj_transform_inverse(var_50, adj_50, adj_83);
        // adj: rel_pose = wp.transform_inverse(X_wp) * X_wc                                      <L 894>
        wp::adj_vec_t(var_24, adj_24, adj_82);
        // adj: ang_delta_c = wp.vec3(0.0)                                                        <L 892>
        wp::adj_vec_t(var_24, adj_24, adj_81);
        // adj: lin_delta_c = wp.vec3(0.0)                                                        <L 891>
        wp::adj_vec_t(var_24, adj_24, adj_80);
        // adj: ang_delta_p = wp.vec3(0.0)                                                        <L 890>
        wp::adj_vec_t(var_24, adj_24, adj_79);
        // adj: lin_delta_p = wp.vec3(0.0)                                                        <L 889>
        if (var_78) {
            label1:;
            // adj: return                                                                        <L 886>
        }
        // adj: if m_inv_p == 0.0 and m_inv_c == 0.0:                                             <L 884>
        wp::adj_spatial_top(var_74, adj_73, adj_75);
        wp::adj_load(var_73, adj_73, adj_74);
        wp::adj_address(var_body_qd, var_13, adj_body_qd, adj_13, adj_73);
        // adj: omega_c = wp.spatial_top(body_qd[id_c])                                           <L 882>
        wp::adj_spatial_bottom(var_71, adj_70, adj_72);
        wp::adj_load(var_70, adj_70, adj_71);
        wp::adj_address(var_body_qd, var_13, adj_body_qd, adj_13, adj_70);
        // adj: vel_c = wp.spatial_bottom(body_qd[id_c])                                          <L 881>
        wp::adj_copy(var_68, adj_67, adj_69);
        wp::adj_load(var_67, adj_67, adj_68);
        wp::adj_address(var_body_inv_I, var_13, adj_body_inv_I, adj_13, adj_67);
        // adj: I_inv_c = body_inv_I[id_c]                                                        <L 880>
        wp::adj_copy(var_65, adj_64, adj_66);
        wp::adj_load(var_64, adj_64, adj_65);
        wp::adj_address(var_body_inv_m, var_13, adj_body_inv_m, adj_13, adj_64);
        // adj: m_inv_c = body_inv_m[id_c]                                                        <L 879>
        wp::adj_copy(var_62, adj_61, adj_63);
        wp::adj_load(var_61, adj_61, adj_62);
        wp::adj_address(var_body_com, var_13, adj_body_com, adj_13, adj_61);
        // adj: com_c = body_com[id_c]                                                            <L 878>
        wp::adj_mul(var_59, var_22, adj_59, adj_22, adj_60);
        // adj: X_wc = pose_c * X_cj                                                              <L 877>
        wp::adj_copy(var_58, adj_57, adj_59);
        wp::adj_load(var_57, adj_57, adj_58);
        wp::adj_address(var_body_q, var_13, adj_body_q, adj_13, adj_57);
        // adj: pose_c = body_q[id_c]                                                             <L 876>
        wp::adj_select(var_30, var_29, var_49, adj_30, adj_29, adj_49, adj_56);
        wp::adj_select(var_30, var_28, var_46, adj_30, adj_28, adj_46, adj_55);
        wp::adj_select(var_30, var_27, var_37, adj_30, adj_27, adj_37, adj_54);
        wp::adj_select(var_30, var_26, var_33, adj_30, adj_26, adj_33, adj_53);
        wp::adj_select(var_30, var_25, var_43, adj_30, adj_25, adj_43, adj_52);
        wp::adj_select(var_30, var_24, var_40, adj_30, adj_24, adj_40, adj_51);
        wp::adj_select(var_30, var_23, var_34, adj_30, adj_23, adj_34, adj_50);
        if (var_30) {
            wp::adj_spatial_top(var_48, adj_47, adj_49);
            wp::adj_load(var_47, adj_47, adj_48);
            wp::adj_address(var_body_qd, var_16, adj_body_qd, adj_16, adj_47);
            // adj: omega_p = wp.spatial_top(body_qd[id_p])                                       <L 873>
            wp::adj_spatial_bottom(var_45, adj_44, adj_46);
            wp::adj_load(var_44, adj_44, adj_45);
            wp::adj_address(var_body_qd, var_16, adj_body_qd, adj_16, adj_44);
            // adj: vel_p = wp.spatial_bottom(body_qd[id_p])                                      <L 872>
            wp::adj_copy(var_42, adj_41, adj_43);
            wp::adj_load(var_41, adj_41, adj_42);
            wp::adj_address(var_body_inv_I, var_16, adj_body_inv_I, adj_16, adj_41);
            // adj: I_inv_p = body_inv_I[id_p]                                                    <L 871>
            wp::adj_copy(var_39, adj_38, adj_40);
            wp::adj_load(var_38, adj_38, adj_39);
            wp::adj_address(var_body_inv_m, var_16, adj_body_inv_m, adj_16, adj_38);
            // adj: m_inv_p = body_inv_m[id_p]                                                    <L 870>
            wp::adj_copy(var_36, adj_35, adj_37);
            wp::adj_load(var_35, adj_35, adj_36);
            wp::adj_address(var_body_com, var_16, adj_body_com, adj_16, adj_35);
            // adj: com_p = body_com[id_p]                                                        <L 869>
            wp::adj_mul(var_33, var_23, adj_33, adj_23, adj_34);
            // adj: X_wp = pose_p * X_wp                                                          <L 868>
            wp::adj_copy(var_32, adj_31, adj_33);
            wp::adj_load(var_31, adj_31, adj_32);
            wp::adj_address(var_body_q, var_16, adj_body_q, adj_16, adj_31);
            // adj: pose_p = body_q[id_p]                                                         <L 867>
        }
        // adj: if id_p >= 0:                                                                     <L 866>
        wp::adj_vec_t(var_24, adj_24, adj_29);
        // adj: omega_p = wp.vec3(0.0)                                                            <L 864>
        wp::adj_vec_t(var_24, adj_24, adj_28);
        // adj: vel_p = wp.vec3(0.0)                                                              <L 863>
        wp::adj_vec_t(var_24, adj_24, adj_27);
        // adj: com_p = wp.vec3(0.0)                                                              <L 862>
        wp::adj_copy(var_19, adj_19, adj_26);
        // adj: pose_p = X_pj                                                                     <L 861>
        wp::adj_mat_t(var_24, var_24, var_24, var_24, var_24, var_24, var_24, var_24, var_24, adj_24, adj_24, adj_24, adj_24, adj_24, adj_24, adj_24, adj_24, adj_24, adj_25);
        // adj: I_inv_p = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                   <L 860>
        // adj: m_inv_p = 0.0                                                                     <L 859>
        wp::adj_copy(var_19, adj_19, adj_23);
        // adj: X_wp = X_pj                                                                       <L 858>
        wp::adj_copy(var_21, adj_20, adj_22);
        wp::adj_load(var_20, adj_20, adj_21);
        wp::adj_address(var_joint_X_c, var_0, adj_joint_X_c, adj_0, adj_20);
        // adj: X_cj = joint_X_c[tid]                                                             <L 856>
        wp::adj_copy(var_18, adj_17, adj_19);
        wp::adj_load(var_17, adj_17, adj_18);
        wp::adj_address(var_joint_X_p, var_0, adj_joint_X_p, adj_0, adj_17);
        // adj: X_pj = joint_X_p[tid]                                                             <L 855>
        wp::adj_copy(var_15, adj_14, adj_16);
        wp::adj_load(var_14, adj_14, adj_15);
        wp::adj_address(var_joint_parent, var_0, adj_joint_parent, adj_0, adj_14);
        // adj: id_p = joint_parent[tid]                                                          <L 853>
        wp::adj_copy(var_12, adj_11, adj_13);
        wp::adj_load(var_11, adj_11, adj_12);
        wp::adj_address(var_joint_child, var_0, adj_joint_child, adj_0, adj_11);
        // adj: id_c = joint_child[tid]                                                           <L 852>
        if (var_10) {
            label0:;
            // adj: return                                                                        <L 849>
        }
        wp::adj_load(var_4, adj_4, adj_7);
        wp::adj_address(var_joint_enabled, var_0, adj_joint_enabled, adj_0, adj_4);
        // adj: if joint_enabled[tid] == 0 or type == fs5Model.JOINT_FREE:                        <L 848>
        wp::adj_copy(var_2, adj_1, adj_3);
        wp::adj_load(var_1, adj_1, adj_2);
        wp::adj_address(var_joint_type, var_0, adj_joint_type, adj_0, adj_1);
        // adj: type = joint_type[tid]                                                            <L 846>
        // adj: tid = wp.tid()                                                                    <L 845>
        // adj: def solve_body_joints(                                                            <L 817>
        continue;
    }
}



extern "C" __global__ void solve_body_contact_positions_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I_inv,
    wp::array_t<wp::int32> var_contact_count,
    wp::array_t<wp::int32> var_contact_body0,
    wp::array_t<wp::int32> var_contact_body1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_point1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_offset0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_offset1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_normal,
    wp::array_t<wp::float32> var_contact_thickness,
    wp::array_t<wp::int32> var_contact_shape0,
    wp::array_t<wp::int32> var_contact_shape1,
    ModelShapeMaterials var_shape_materials,
    wp::float32 var_relaxation,
    wp::float32 var_dt,
    wp::float32 var_contact_torsional_friction,
    wp::float32 var_contact_rolling_friction,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point1,
    wp::array_t<wp::float32> var_active_contact_distance,
    wp::array_t<wp::float32> var_contact_inv_weight)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::int32* var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        bool var_5;
        wp::int32* var_6;
        wp::int32 var_7;
        wp::int32 var_8;
        wp::int32* var_9;
        wp::int32 var_10;
        wp::int32 var_11;
        bool var_12;
        wp::int32* var_13;
        wp::int32* var_14;
        bool var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::transform_t<wp::float32> var_18;
        wp::transform_t<wp::float32> var_19;
        bool var_20;
        wp::transform_t<wp::float32>* var_21;
        wp::transform_t<wp::float32> var_22;
        wp::transform_t<wp::float32> var_23;
        wp::transform_t<wp::float32> var_24;
        bool var_25;
        wp::transform_t<wp::float32>* var_26;
        wp::transform_t<wp::float32> var_27;
        wp::transform_t<wp::float32> var_28;
        wp::transform_t<wp::float32> var_29;
        wp::vec_t<3,wp::float32>* var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32> var_32;
        wp::vec_t<3,wp::float32>* var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::float32* var_36;
        wp::float32 var_37;
        wp::float32 var_38;
        wp::vec_t<3,wp::float32>* var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::vec_t<3,wp::float32> var_42;
        wp::float32 var_43;
        wp::float32 var_44;
        const wp::float32 var_45 = 0.0;
        bool var_46;
        wp::mat_t<3,3,wp::float32> var_47;
        wp::mat_t<3,3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::transform_t<wp::float32> var_51;
        wp::transform_t<wp::float32> var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32>* var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::vec_t<3,wp::float32> var_57;
        wp::vec_t<3,wp::float32>* var_58;
        wp::vec_t<3,wp::float32> var_59;
        wp::vec_t<3,wp::float32> var_60;
        bool var_61;
        wp::transform_t<wp::float32>* var_62;
        wp::transform_t<wp::float32> var_63;
        wp::transform_t<wp::float32> var_64;
        wp::vec_t<3,wp::float32>* var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::float32* var_68;
        wp::float32 var_69;
        wp::float32 var_70;
        wp::mat_t<3,3,wp::float32>* var_71;
        wp::mat_t<3,3,wp::float32> var_72;
        wp::mat_t<3,3,wp::float32> var_73;
        wp::vec_t<6,wp::float32>* var_74;
        wp::vec_t<6,wp::float32> var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::transform_t<wp::float32> var_77;
        wp::float32 var_78;
        wp::mat_t<3,3,wp::float32> var_79;
        wp::vec_t<3,wp::float32> var_80;
        wp::vec_t<3,wp::float32> var_81;
        bool var_82;
        wp::transform_t<wp::float32>* var_83;
        wp::transform_t<wp::float32> var_84;
        wp::transform_t<wp::float32> var_85;
        wp::vec_t<3,wp::float32>* var_86;
        wp::vec_t<3,wp::float32> var_87;
        wp::vec_t<3,wp::float32> var_88;
        wp::float32* var_89;
        wp::float32 var_90;
        wp::float32 var_91;
        wp::mat_t<3,3,wp::float32>* var_92;
        wp::mat_t<3,3,wp::float32> var_93;
        wp::mat_t<3,3,wp::float32> var_94;
        wp::vec_t<6,wp::float32>* var_95;
        wp::vec_t<6,wp::float32> var_96;
        wp::vec_t<3,wp::float32> var_97;
        wp::transform_t<wp::float32> var_98;
        wp::float32 var_99;
        wp::mat_t<3,3,wp::float32> var_100;
        wp::vec_t<3,wp::float32> var_101;
        wp::vec_t<3,wp::float32> var_102;
        wp::int32* var_103;
        wp::int32 var_104;
        wp::int32 var_105;
        wp::int32* var_106;
        wp::int32 var_107;
        wp::int32 var_108;
        bool var_109;
        const wp::int32 var_110 = 1;
        wp::int32 var_111;
        wp::array_t<wp::float32>* var_112;
        wp::array_t<wp::float32> var_113;
        wp::float32* var_114;
        wp::float32 var_115;
        wp::float32 var_116;
        wp::int32 var_117;
        wp::float32 var_118;
        bool var_119;
        wp::int32 var_120;
        wp::array_t<wp::float32>* var_121;
        wp::array_t<wp::float32> var_122;
        wp::float32* var_123;
        wp::float32 var_124;
        wp::float32 var_125;
        wp::int32 var_126;
        wp::float32 var_127;
        bool var_128;
        wp::float32 var_129;
        wp::float32 var_130;
        wp::float32 var_131;
        wp::vec_t<3,wp::float32> var_132;
        wp::vec_t<3,wp::float32> var_133;
        wp::vec_t<3,wp::float32> var_134;
        wp::vec_t<3,wp::float32> var_135;
        wp::vec_t<3,wp::float32> var_136;
        wp::vec_t<3,wp::float32> var_137;
        wp::vec_t<3,wp::float32> var_138;
        bool var_139;
        const wp::float32 var_140 = 1.0;
        wp::float32 var_141;
        bool var_142;
        wp::float32 var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::float32 var_145;
        wp::vec_t<3,wp::float32> var_146;
        wp::vec_t<3,wp::float32> var_147;
        wp::vec_t<3,wp::float32> var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::vec_t<3,wp::float32> var_150;
        bool var_151;
        wp::vec_t<3,wp::float32> var_152;
        wp::vec_t<3,wp::float32> var_153;
        wp::vec_t<3,wp::float32> var_154;
        wp::vec_t<3,wp::float32> var_155;
        wp::vec_t<3,wp::float32> var_156;
        wp::float32 var_157;
        wp::vec_t<3,wp::float32> var_158;
        wp::vec_t<3,wp::float32> var_159;
        wp::vec_t<3,wp::float32> var_160;
        wp::vec_t<3,wp::float32> var_161;
        wp::vec_t<3,wp::float32> var_162;
        wp::vec_t<3,wp::float32> var_163;
        wp::vec_t<3,wp::float32> var_164;
        wp::vec_t<3,wp::float32> var_165;
        wp::vec_t<3,wp::float32> var_166;
        wp::vec_t<3,wp::float32> var_167;
        wp::float32 var_168;
        bool var_169;
        wp::vec_t<3,wp::float32> var_170;
        wp::float32 var_171;
        wp::float32 var_172;
        wp::float32 var_173;
        wp::float32 var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<3,wp::float32> var_176;
        wp::vec_t<3,wp::float32> var_177;
        wp::vec_t<3,wp::float32> var_178;
        wp::vec_t<3,wp::float32> var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::vec_t<3,wp::float32> var_182;
        wp::vec_t<3,wp::float32> var_183;
        wp::vec_t<3,wp::float32> var_184;
        wp::vec_t<3,wp::float32> var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::vec_t<3,wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::vec_t<3,wp::float32> var_191;
        wp::vec_t<3,wp::float32> var_192;
        wp::vec_t<3,wp::float32> var_193;
        wp::vec_t<3,wp::float32> var_194;
        wp::vec_t<3,wp::float32> var_195;
        wp::vec_t<3,wp::float32> var_196;
        wp::float32 var_197;
        wp::vec_t<3,wp::float32> var_198;
        bool var_199;
        wp::float32 var_200;
        wp::float32 var_201;
        wp::float32 var_202;
        bool var_203;
        wp::vec_t<3,wp::float32> var_204;
        wp::vec_t<3,wp::float32> var_205;
        wp::float32 var_206;
        wp::float32 var_207;
        wp::float32 var_208;
        wp::float32 var_209;
        wp::float32 var_210;
        wp::vec_t<3,wp::float32> var_211;
        wp::vec_t<3,wp::float32> var_212;
        wp::vec_t<3,wp::float32> var_213;
        wp::vec_t<3,wp::float32> var_214;
        wp::vec_t<3,wp::float32> var_215;
        wp::vec_t<3,wp::float32> var_216;
        wp::vec_t<3,wp::float32> var_217;
        wp::vec_t<3,wp::float32> var_218;
        wp::float32 var_219;
        wp::float32 var_220;
        bool var_221;
        wp::float32 var_222;
        wp::vec_t<3,wp::float32> var_223;
        wp::vec_t<3,wp::float32> var_224;
        wp::float32 var_225;
        wp::float32 var_226;
        bool var_227;
        wp::vec_t<3,wp::float32> var_228;
        wp::vec_t<3,wp::float32> var_229;
        wp::vec_t<3,wp::float32> var_230;
        wp::float32 var_231;
        wp::float32 var_232;
        wp::float32 var_233;
        wp::float32 var_234;
        wp::vec_t<3,wp::float32> var_235;
        wp::vec_t<3,wp::float32> var_236;
        wp::vec_t<3,wp::float32> var_237;
        wp::vec_t<3,wp::float32> var_238;
        wp::vec_t<3,wp::float32> var_239;
        wp::vec_t<3,wp::float32> var_240;
        wp::vec_t<3,wp::float32> var_241;
        wp::vec_t<3,wp::float32> var_242;
        wp::vec_t<3,wp::float32> var_243;
        wp::float32 var_244;
        wp::vec_t<3,wp::float32> var_245;
        wp::vec_t<3,wp::float32> var_246;
        bool var_247;
        wp::vec_t<6,wp::float32> var_248;
        wp::vec_t<6,wp::float32> var_249;
        bool var_250;
        wp::vec_t<6,wp::float32> var_251;
        wp::vec_t<6,wp::float32> var_252;
        //---------
        // forward
        // def solve_body_contact_positions(                                                      <L 1422>
        // tid = wp.tid()                                                                         <L 1451>
        var_0 = builtin_tid1d();
        // count = contact_count[0]                                                               <L 1453>
        var_2 = wp::address(var_contact_count, var_1);
        var_3 = wp::load(var_2);
        var_4 = wp::copy(var_3);
        // if tid >= count:                                                                       <L 1454>
        var_5 = (var_0 >= var_4);
        if (var_5) {
            // return                                                                             <L 1455>
            return;
        }
        // body_a = contact_body0[tid]                                                            <L 1457>
        var_6 = wp::address(var_contact_body0, var_0);
        var_7 = wp::load(var_6);
        var_8 = wp::copy(var_7);
        // body_b = contact_body1[tid]                                                            <L 1458>
        var_9 = wp::address(var_contact_body1, var_0);
        var_10 = wp::load(var_9);
        var_11 = wp::copy(var_10);
        // if body_a == body_b:                                                                   <L 1460>
        var_12 = (var_8 == var_11);
        if (var_12) {
            // return                                                                             <L 1461>
            return;
        }
        // if contact_shape0[tid] == contact_shape1[tid]:                                         <L 1462>
        var_13 = wp::address(var_contact_shape0, var_0);
        var_14 = wp::address(var_contact_shape1, var_0);
        var_16 = wp::load(var_13);
        var_17 = wp::load(var_14);
        var_15 = (var_16 == var_17);
        if (var_15) {
            // return                                                                             <L 1463>
            return;
        }
        // X_wb_a = wp.transform_identity()                                                       <L 1466>
        var_18 = wp::transform_identity<wp::float32>();
        // X_wb_b = wp.transform_identity()                                                       <L 1467>
        var_19 = wp::transform_identity<wp::float32>();
        // if body_a >= 0:                                                                        <L 1468>
        var_20 = (var_8 >= var_1);
        if (var_20) {
            // X_wb_a = body_q[body_a]                                                            <L 1469>
            var_21 = wp::address(var_body_q, var_8);
            var_22 = wp::load(var_21);
            var_23 = wp::copy(var_22);
        }
        var_24 = wp::select(var_20, var_18, var_23);
        // if body_b >= 0:                                                                        <L 1470>
        var_25 = (var_11 >= var_1);
        if (var_25) {
            // X_wb_b = body_q[body_b]                                                            <L 1471>
            var_26 = wp::address(var_body_q, var_11);
            var_27 = wp::load(var_26);
            var_28 = wp::copy(var_27);
        }
        var_29 = wp::select(var_25, var_19, var_28);
        // bx_a = wp.transform_point(X_wb_a, contact_point0[tid])                                 <L 1474>
        var_30 = wp::address(var_contact_point0, var_0);
        var_31 = wp::load(var_30);
        var_32 = wp::transform_point(var_24, var_31);
        // bx_b = wp.transform_point(X_wb_b, contact_point1[tid])                                 <L 1475>
        var_33 = wp::address(var_contact_point1, var_0);
        var_34 = wp::load(var_33);
        var_35 = wp::transform_point(var_29, var_34);
        // active_contact_point0[tid] = bx_a                                                      <L 1476>
        wp::array_store(var_active_contact_point0, var_0, var_32);
        // active_contact_point1[tid] = bx_b                                                      <L 1477>
        wp::array_store(var_active_contact_point1, var_0, var_35);
        // thickness = contact_thickness[tid]                                                     <L 1479>
        var_36 = wp::address(var_contact_thickness, var_0);
        var_37 = wp::load(var_36);
        var_38 = wp::copy(var_37);
        // n = -contact_normal[tid]                                                               <L 1480>
        var_39 = wp::address(var_contact_normal, var_0);
        var_40 = wp::load(var_39);
        var_41 = wp::neg(var_40);
        // d = wp.dot(n, bx_b - bx_a) - thickness                                                 <L 1481>
        var_42 = wp::sub(var_35, var_32);
        var_43 = wp::dot(var_41, var_42);
        var_44 = wp::sub(var_43, var_38);
        // active_contact_distance[tid] = d                                                       <L 1483>
        wp::array_store(var_active_contact_distance, var_0, var_44);
        // if d >= 0.0:                                                                           <L 1485>
        var_46 = (var_44 >= var_45);
        if (var_46) {
            // return                                                                             <L 1486>
            return;
        }
        // m_inv_a = 0.0                                                                          <L 1488>
        // m_inv_b = 0.0                                                                          <L 1489>
        // I_inv_a = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1490>
        var_47 = wp::mat_t<3,3,wp::float32>(var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45);
        // I_inv_b = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1491>
        var_48 = wp::mat_t<3,3,wp::float32>(var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45);
        // com_a = wp.vec3(0.0)                                                                   <L 1493>
        var_49 = wp::vec_t<3,wp::float32>(var_45);
        // com_b = wp.vec3(0.0)                                                                   <L 1494>
        var_50 = wp::vec_t<3,wp::float32>(var_45);
        // X_wb_a = wp.transform_identity()                                                       <L 1496>
        var_51 = wp::transform_identity<wp::float32>();
        // X_wb_b = wp.transform_identity()                                                       <L 1497>
        var_52 = wp::transform_identity<wp::float32>();
        // omega_a = wp.vec3(0.0)                                                                 <L 1499>
        var_53 = wp::vec_t<3,wp::float32>(var_45);
        // omega_b = wp.vec3(0.0)                                                                 <L 1500>
        var_54 = wp::vec_t<3,wp::float32>(var_45);
        // offset_a = contact_offset0[tid]                                                        <L 1502>
        var_55 = wp::address(var_contact_offset0, var_0);
        var_56 = wp::load(var_55);
        var_57 = wp::copy(var_56);
        // offset_b = contact_offset1[tid]                                                        <L 1503>
        var_58 = wp::address(var_contact_offset1, var_0);
        var_59 = wp::load(var_58);
        var_60 = wp::copy(var_59);
        // if body_a >= 0:                                                                        <L 1505>
        var_61 = (var_8 >= var_1);
        if (var_61) {
            // X_wb_a = body_q[body_a]                                                            <L 1506>
            var_62 = wp::address(var_body_q, var_8);
            var_63 = wp::load(var_62);
            var_64 = wp::copy(var_63);
            // com_a = body_com[body_a]                                                           <L 1507>
            var_65 = wp::address(var_body_com, var_8);
            var_66 = wp::load(var_65);
            var_67 = wp::copy(var_66);
            // m_inv_a = body_m_inv[body_a]                                                       <L 1508>
            var_68 = wp::address(var_body_m_inv, var_8);
            var_69 = wp::load(var_68);
            var_70 = wp::copy(var_69);
            // I_inv_a = body_I_inv[body_a]                                                       <L 1509>
            var_71 = wp::address(var_body_I_inv, var_8);
            var_72 = wp::load(var_71);
            var_73 = wp::copy(var_72);
            // omega_a = wp.spatial_top(body_qd[body_a])                                          <L 1510>
            var_74 = wp::address(var_body_qd, var_8);
            var_75 = wp::load(var_74);
            var_76 = wp::spatial_top(var_75);
        }
        var_77 = wp::select(var_61, var_51, var_64);
        var_78 = wp::select(var_61, var_45, var_70);
        var_79 = wp::select(var_61, var_47, var_73);
        var_80 = wp::select(var_61, var_49, var_67);
        var_81 = wp::select(var_61, var_53, var_76);
        // if body_b >= 0:                                                                        <L 1512>
        var_82 = (var_11 >= var_1);
        if (var_82) {
            // X_wb_b = body_q[body_b]                                                            <L 1513>
            var_83 = wp::address(var_body_q, var_11);
            var_84 = wp::load(var_83);
            var_85 = wp::copy(var_84);
            // com_b = body_com[body_b]                                                           <L 1514>
            var_86 = wp::address(var_body_com, var_11);
            var_87 = wp::load(var_86);
            var_88 = wp::copy(var_87);
            // m_inv_b = body_m_inv[body_b]                                                       <L 1515>
            var_89 = wp::address(var_body_m_inv, var_11);
            var_90 = wp::load(var_89);
            var_91 = wp::copy(var_90);
            // I_inv_b = body_I_inv[body_b]                                                       <L 1516>
            var_92 = wp::address(var_body_I_inv, var_11);
            var_93 = wp::load(var_92);
            var_94 = wp::copy(var_93);
            // omega_b = wp.spatial_top(body_qd[body_b])                                          <L 1517>
            var_95 = wp::address(var_body_qd, var_11);
            var_96 = wp::load(var_95);
            var_97 = wp::spatial_top(var_96);
        }
        var_98 = wp::select(var_82, var_52, var_85);
        var_99 = wp::select(var_82, var_45, var_91);
        var_100 = wp::select(var_82, var_48, var_94);
        var_101 = wp::select(var_82, var_50, var_88);
        var_102 = wp::select(var_82, var_54, var_97);
        // mat_nonzero = 0                                                                        <L 1520>
        // mu = 0.0                                                                               <L 1521>
        // shape_a = contact_shape0[tid]                                                          <L 1522>
        var_103 = wp::address(var_contact_shape0, var_0);
        var_104 = wp::load(var_103);
        var_105 = wp::copy(var_104);
        // shape_b = contact_shape1[tid]                                                          <L 1523>
        var_106 = wp::address(var_contact_shape1, var_0);
        var_107 = wp::load(var_106);
        var_108 = wp::copy(var_107);
        // if shape_a >= 0:                                                                       <L 1524>
        var_109 = (var_105 >= var_1);
        if (var_109) {
            // mat_nonzero += 1                                                                   <L 1525>
            var_111 = wp::add(var_1, var_110);
            // mu += shape_materials.mu[shape_a]                                                  <L 1526>
            var_112 = &(var_shape_materials.mu);
            var_113 = wp::load(var_112);
            var_114 = wp::address(var_113, var_105);
            var_115 = wp::load(var_114);
            var_116 = wp::add(var_45, var_115);
        }
        var_117 = wp::select(var_109, var_1, var_111);
        var_118 = wp::select(var_109, var_45, var_116);
        // if shape_b >= 0:                                                                       <L 1527>
        var_119 = (var_108 >= var_1);
        if (var_119) {
            // mat_nonzero += 1                                                                   <L 1528>
            var_120 = wp::add(var_117, var_110);
            // mu += shape_materials.mu[shape_b]                                                  <L 1529>
            var_121 = &(var_shape_materials.mu);
            var_122 = wp::load(var_121);
            var_123 = wp::address(var_122, var_108);
            var_124 = wp::load(var_123);
            var_125 = wp::add(var_118, var_124);
        }
        var_126 = wp::select(var_119, var_117, var_120);
        var_127 = wp::select(var_119, var_118, var_125);
        // if mat_nonzero > 0:                                                                    <L 1530>
        var_128 = (var_126 > var_1);
        if (var_128) {
            // mu /= float(mat_nonzero)                                                           <L 1531>
            var_129 = wp::float(var_126);
            var_130 = wp::div(var_127, var_129);
        }
        var_131 = wp::select(var_128, var_127, var_130);
        // r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                         <L 1533>
        var_132 = wp::transform_point(var_77, var_80);
        var_133 = wp::sub(var_32, var_132);
        // r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                         <L 1534>
        var_134 = wp::transform_point(var_98, var_101);
        var_135 = wp::sub(var_35, var_134);
        // angular_a = -wp.cross(r_a, n)                                                          <L 1536>
        var_136 = wp::cross(var_133, var_41);
        var_137 = wp::neg(var_136);
        // angular_b = wp.cross(r_b, n)                                                           <L 1537>
        var_138 = wp::cross(var_135, var_41);
        // if contact_inv_weight:                                                                 <L 1539>
        if (var_contact_inv_weight) {
            // if body_a >= 0:                                                                    <L 1540>
            var_139 = (var_8 >= var_1);
            if (var_139) {
                // wp.atomic_add(contact_inv_weight, body_a, 1.0)                                 <L 1541>
                var_141 = wp::atomic_add(var_contact_inv_weight, var_8, var_140);
            }
            // if body_b >= 0:                                                                    <L 1542>
            var_142 = (var_11 >= var_1);
            if (var_142) {
                // wp.atomic_add(contact_inv_weight, body_b, 1.0)                                 <L 1543>
                var_143 = wp::atomic_add(var_contact_inv_weight, var_11, var_140);
            }
        }
        // lambda_n = compute_contact_constraint_delta(                                           <L 1545>
        // d, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, -n, n, angular_a, angular_b, relaxation, dt       <L 1546>
        var_144 = wp::neg(var_41);
        var_145 = compute_contact_constraint_delta(var_44, var_77, var_98, var_78, var_99, var_79, var_100, var_144, var_41, var_137, var_138, var_relaxation, var_dt);
        // lin_delta_a = -n * lambda_n                                                            <L 1549>
        var_146 = wp::neg(var_41);
        var_147 = wp::mul(var_146, var_145);
        // lin_delta_b = n * lambda_n                                                             <L 1550>
        var_148 = wp::mul(var_41, var_145);
        // ang_delta_a = angular_a * lambda_n                                                     <L 1551>
        var_149 = wp::mul(var_137, var_145);
        // ang_delta_b = angular_b * lambda_n                                                     <L 1552>
        var_150 = wp::mul(var_138, var_145);
        // if mu > 0.0:                                                                           <L 1555>
        var_151 = (var_131 > var_45);
        if (var_151) {
            // bx_a += wp.transform_vector(X_wb_a, offset_a)                                      <L 1558>
            var_152 = wp::transform_vector(var_77, var_57);
            var_153 = wp::add(var_32, var_152);
            // bx_b += wp.transform_vector(X_wb_b, offset_b)                                      <L 1559>
            var_154 = wp::transform_vector(var_98, var_60);
            var_155 = wp::add(var_35, var_154);
            // delta = bx_b - bx_a                                                                <L 1562>
            var_156 = wp::sub(var_155, var_153);
            // friction_delta = delta - wp.dot(n, delta) * n                                      <L 1563>
            var_157 = wp::dot(var_41, var_156);
            var_158 = wp::mul(var_157, var_41);
            var_159 = wp::sub(var_156, var_158);
            // perp = wp.normalize(friction_delta)                                                <L 1565>
            var_160 = wp::normalize(var_159);
            // r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                     <L 1567>
            var_161 = wp::transform_point(var_77, var_80);
            var_162 = wp::sub(var_153, var_161);
            // r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                     <L 1568>
            var_163 = wp::transform_point(var_98, var_101);
            var_164 = wp::sub(var_155, var_163);
            // angular_a = -wp.cross(r_a, perp)                                                   <L 1570>
            var_165 = wp::cross(var_162, var_160);
            var_166 = wp::neg(var_165);
            // angular_b = wp.cross(r_b, perp)                                                    <L 1571>
            var_167 = wp::cross(var_164, var_160);
            // err = wp.length(friction_delta)                                                    <L 1573>
            var_168 = wp::length(var_159);
            // if err > 0.0:                                                                      <L 1575>
            var_169 = (var_168 > var_45);
            if (var_169) {
                // lambda_fr = compute_contact_constraint_delta(                                  <L 1576>
                // err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, -perp, perp, angular_a, angular_b, 1.0, dt       <L 1577>
                var_170 = wp::neg(var_160);
                var_171 = compute_contact_constraint_delta(var_168, var_77, var_98, var_78, var_99, var_79, var_100, var_170, var_160, var_166, var_167, var_140, var_dt);
                // lambda_fr = wp.max(lambda_fr, -lambda_n * mu)                                  <L 1581>
                var_172 = wp::neg(var_145);
                var_173 = wp::mul(var_172, var_131);
                var_174 = wp::max(var_171, var_173);
                // lin_delta_a -= perp * lambda_fr                                                <L 1583>
                var_175 = wp::mul(var_160, var_174);
                var_176 = wp::sub(var_147, var_175);
                // lin_delta_b += perp * lambda_fr                                                <L 1584>
                var_177 = wp::mul(var_160, var_174);
                var_178 = wp::add(var_148, var_177);
                // ang_delta_a += angular_a * lambda_fr                                           <L 1586>
                var_179 = wp::mul(var_166, var_174);
                var_180 = wp::add(var_149, var_179);
                // ang_delta_b += angular_b * lambda_fr                                           <L 1587>
                var_181 = wp::mul(var_167, var_174);
                var_182 = wp::add(var_150, var_181);
            }
            var_183 = wp::select(var_169, var_147, var_176);
            var_184 = wp::select(var_169, var_148, var_178);
            var_185 = wp::select(var_169, var_149, var_180);
            var_186 = wp::select(var_169, var_150, var_182);
        }
        var_187 = wp::select(var_151, var_32, var_153);
        var_188 = wp::select(var_151, var_35, var_155);
        var_189 = wp::select(var_151, var_133, var_162);
        var_190 = wp::select(var_151, var_135, var_164);
        var_191 = wp::select(var_151, var_137, var_166);
        var_192 = wp::select(var_151, var_138, var_167);
        var_193 = wp::select(var_151, var_147, var_183);
        var_194 = wp::select(var_151, var_148, var_184);
        var_195 = wp::select(var_151, var_149, var_185);
        var_196 = wp::select(var_151, var_150, var_186);
        // torsional_friction = mu * contact_torsional_friction                                   <L 1589>
        var_197 = wp::mul(var_131, var_contact_torsional_friction);
        // delta_omega = omega_b - omega_a                                                        <L 1591>
        var_198 = wp::sub(var_102, var_81);
        // if torsional_friction > 0.0:                                                           <L 1593>
        var_199 = (var_197 > var_45);
        if (var_199) {
            // err = wp.dot(delta_omega, n) * dt                                                  <L 1594>
            var_200 = wp::dot(var_198, var_41);
            var_201 = wp::mul(var_200, var_dt);
            // if wp.abs(err) > 0.0:                                                              <L 1596>
            var_202 = wp::abs(var_201);
            var_203 = (var_202 > var_45);
            if (var_203) {
                // lin = wp.vec3(0.0)                                                             <L 1597>
                var_204 = wp::vec_t<3,wp::float32>(var_45);
                // lambda_torsion = compute_contact_constraint_delta(                             <L 1598>
                // err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, lin, lin, -n, n, 1.0, dt       <L 1599>
                var_205 = wp::neg(var_41);
                var_206 = compute_contact_constraint_delta(var_201, var_77, var_98, var_78, var_99, var_79, var_100, var_204, var_204, var_205, var_41, var_140, var_dt);
                // lambda_torsion = wp.clamp(lambda_torsion, -lambda_n * torsional_friction, lambda_n * torsional_friction)       <L 1602>
                var_207 = wp::neg(var_145);
                var_208 = wp::mul(var_207, var_197);
                var_209 = wp::mul(var_145, var_197);
                var_210 = wp::clamp(var_206, var_208, var_209);
                // ang_delta_a -= n * lambda_torsion                                              <L 1604>
                var_211 = wp::mul(var_41, var_210);
                var_212 = wp::sub(var_195, var_211);
                // ang_delta_b += n * lambda_torsion                                              <L 1605>
                var_213 = wp::mul(var_41, var_210);
                var_214 = wp::add(var_196, var_213);
            }
            var_215 = wp::select(var_203, var_195, var_212);
            var_216 = wp::select(var_203, var_196, var_214);
        }
        var_217 = wp::select(var_199, var_195, var_215);
        var_218 = wp::select(var_199, var_196, var_216);
        var_219 = wp::select(var_199, var_168, var_201);
        // rolling_friction = mu * contact_rolling_friction                                       <L 1607>
        var_220 = wp::mul(var_131, var_contact_rolling_friction);
        // if rolling_friction > 0.0:                                                             <L 1608>
        var_221 = (var_220 > var_45);
        if (var_221) {
            // delta_omega -= wp.dot(n, delta_omega) * n                                          <L 1609>
            var_222 = wp::dot(var_41, var_198);
            var_223 = wp::mul(var_222, var_41);
            var_224 = wp::sub(var_198, var_223);
            // err = wp.length(delta_omega) * dt                                                  <L 1610>
            var_225 = wp::length(var_224);
            var_226 = wp::mul(var_225, var_dt);
            // if err > 0.0:                                                                      <L 1611>
            var_227 = (var_226 > var_45);
            if (var_227) {
                // lin = wp.vec3(0.0)                                                             <L 1612>
                var_228 = wp::vec_t<3,wp::float32>(var_45);
                // roll_n = wp.normalize(delta_omega)                                             <L 1613>
                var_229 = wp::normalize(var_224);
                // lambda_roll = compute_contact_constraint_delta(                                <L 1614>
                // err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, lin, lin, -roll_n, roll_n, 1.0, dt       <L 1615>
                var_230 = wp::neg(var_229);
                var_231 = compute_contact_constraint_delta(var_226, var_77, var_98, var_78, var_99, var_79, var_100, var_228, var_228, var_230, var_229, var_140, var_dt);
                // lambda_roll = wp.max(lambda_roll, -lambda_n * rolling_friction)                <L 1618>
                var_232 = wp::neg(var_145);
                var_233 = wp::mul(var_232, var_220);
                var_234 = wp::max(var_231, var_233);
                // ang_delta_a -= roll_n * lambda_roll                                            <L 1620>
                var_235 = wp::mul(var_229, var_234);
                var_236 = wp::sub(var_217, var_235);
                // ang_delta_b += roll_n * lambda_roll                                            <L 1621>
                var_237 = wp::mul(var_229, var_234);
                var_238 = wp::add(var_218, var_237);
            }
            var_239 = wp::select(var_227, var_217, var_236);
            var_240 = wp::select(var_227, var_218, var_238);
            var_241 = wp::select(var_227, var_204, var_228);
        }
        var_242 = wp::select(var_221, var_217, var_239);
        var_243 = wp::select(var_221, var_218, var_240);
        var_244 = wp::select(var_221, var_219, var_226);
        var_245 = wp::select(var_221, var_198, var_224);
        var_246 = wp::select(var_221, var_204, var_241);
        // if body_a >= 0:                                                                        <L 1623>
        var_247 = (var_8 >= var_1);
        if (var_247) {
            // wp.atomic_add(deltas, body_a, wp.spatial_vector(ang_delta_a, lin_delta_a))         <L 1624>
            var_248 = wp::vec_t<6,wp::float32>(var_242, var_193);
            var_249 = wp::atomic_add(var_deltas, var_8, var_248);
        }
        // if body_b >= 0:                                                                        <L 1625>
        var_250 = (var_11 >= var_1);
        if (var_250) {
            // wp.atomic_add(deltas, body_b, wp.spatial_vector(ang_delta_b, lin_delta_b))         <L 1626>
            var_251 = wp::vec_t<6,wp::float32>(var_243, var_194);
            var_252 = wp::atomic_add(var_deltas, var_11, var_251);
        }
    }
}

extern "C" __global__ void solve_body_contact_positions_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I_inv,
    wp::array_t<wp::int32> var_contact_count,
    wp::array_t<wp::int32> var_contact_body0,
    wp::array_t<wp::int32> var_contact_body1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_point1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_offset0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_offset1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_normal,
    wp::array_t<wp::float32> var_contact_thickness,
    wp::array_t<wp::int32> var_contact_shape0,
    wp::array_t<wp::int32> var_contact_shape1,
    ModelShapeMaterials var_shape_materials,
    wp::float32 var_relaxation,
    wp::float32 var_dt,
    wp::float32 var_contact_torsional_friction,
    wp::float32 var_contact_rolling_friction,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point1,
    wp::array_t<wp::float32> var_active_contact_distance,
    wp::array_t<wp::float32> var_contact_inv_weight,
    wp::array_t<wp::transform_t<wp::float32>> adj_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_qd,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::array_t<wp::float32> adj_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_body_I_inv,
    wp::array_t<wp::int32> adj_contact_count,
    wp::array_t<wp::int32> adj_contact_body0,
    wp::array_t<wp::int32> adj_contact_body1,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_point1,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_offset0,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_offset1,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_normal,
    wp::array_t<wp::float32> adj_contact_thickness,
    wp::array_t<wp::int32> adj_contact_shape0,
    wp::array_t<wp::int32> adj_contact_shape1,
    ModelShapeMaterials adj_shape_materials,
    wp::float32 adj_relaxation,
    wp::float32 adj_dt,
    wp::float32 adj_contact_torsional_friction,
    wp::float32 adj_contact_rolling_friction,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_deltas,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_active_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_active_contact_point1,
    wp::array_t<wp::float32> adj_active_contact_distance,
    wp::array_t<wp::float32> adj_contact_inv_weight)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::int32* var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        bool var_5;
        wp::int32* var_6;
        wp::int32 var_7;
        wp::int32 var_8;
        wp::int32* var_9;
        wp::int32 var_10;
        wp::int32 var_11;
        bool var_12;
        wp::int32* var_13;
        wp::int32* var_14;
        bool var_15;
        wp::int32 var_16;
        wp::int32 var_17;
        wp::transform_t<wp::float32> var_18;
        wp::transform_t<wp::float32> var_19;
        bool var_20;
        wp::transform_t<wp::float32>* var_21;
        wp::transform_t<wp::float32> var_22;
        wp::transform_t<wp::float32> var_23;
        wp::transform_t<wp::float32> var_24;
        bool var_25;
        wp::transform_t<wp::float32>* var_26;
        wp::transform_t<wp::float32> var_27;
        wp::transform_t<wp::float32> var_28;
        wp::transform_t<wp::float32> var_29;
        wp::vec_t<3,wp::float32>* var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32> var_32;
        wp::vec_t<3,wp::float32>* var_33;
        wp::vec_t<3,wp::float32> var_34;
        wp::vec_t<3,wp::float32> var_35;
        wp::float32* var_36;
        wp::float32 var_37;
        wp::float32 var_38;
        wp::vec_t<3,wp::float32>* var_39;
        wp::vec_t<3,wp::float32> var_40;
        wp::vec_t<3,wp::float32> var_41;
        wp::vec_t<3,wp::float32> var_42;
        wp::float32 var_43;
        wp::float32 var_44;
        const wp::float32 var_45 = 0.0;
        bool var_46;
        wp::mat_t<3,3,wp::float32> var_47;
        wp::mat_t<3,3,wp::float32> var_48;
        wp::vec_t<3,wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::transform_t<wp::float32> var_51;
        wp::transform_t<wp::float32> var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32>* var_55;
        wp::vec_t<3,wp::float32> var_56;
        wp::vec_t<3,wp::float32> var_57;
        wp::vec_t<3,wp::float32>* var_58;
        wp::vec_t<3,wp::float32> var_59;
        wp::vec_t<3,wp::float32> var_60;
        bool var_61;
        wp::transform_t<wp::float32>* var_62;
        wp::transform_t<wp::float32> var_63;
        wp::transform_t<wp::float32> var_64;
        wp::vec_t<3,wp::float32>* var_65;
        wp::vec_t<3,wp::float32> var_66;
        wp::vec_t<3,wp::float32> var_67;
        wp::float32* var_68;
        wp::float32 var_69;
        wp::float32 var_70;
        wp::mat_t<3,3,wp::float32>* var_71;
        wp::mat_t<3,3,wp::float32> var_72;
        wp::mat_t<3,3,wp::float32> var_73;
        wp::vec_t<6,wp::float32>* var_74;
        wp::vec_t<6,wp::float32> var_75;
        wp::vec_t<3,wp::float32> var_76;
        wp::transform_t<wp::float32> var_77;
        wp::float32 var_78;
        wp::mat_t<3,3,wp::float32> var_79;
        wp::vec_t<3,wp::float32> var_80;
        wp::vec_t<3,wp::float32> var_81;
        bool var_82;
        wp::transform_t<wp::float32>* var_83;
        wp::transform_t<wp::float32> var_84;
        wp::transform_t<wp::float32> var_85;
        wp::vec_t<3,wp::float32>* var_86;
        wp::vec_t<3,wp::float32> var_87;
        wp::vec_t<3,wp::float32> var_88;
        wp::float32* var_89;
        wp::float32 var_90;
        wp::float32 var_91;
        wp::mat_t<3,3,wp::float32>* var_92;
        wp::mat_t<3,3,wp::float32> var_93;
        wp::mat_t<3,3,wp::float32> var_94;
        wp::vec_t<6,wp::float32>* var_95;
        wp::vec_t<6,wp::float32> var_96;
        wp::vec_t<3,wp::float32> var_97;
        wp::transform_t<wp::float32> var_98;
        wp::float32 var_99;
        wp::mat_t<3,3,wp::float32> var_100;
        wp::vec_t<3,wp::float32> var_101;
        wp::vec_t<3,wp::float32> var_102;
        wp::int32* var_103;
        wp::int32 var_104;
        wp::int32 var_105;
        wp::int32* var_106;
        wp::int32 var_107;
        wp::int32 var_108;
        bool var_109;
        const wp::int32 var_110 = 1;
        wp::int32 var_111;
        wp::array_t<wp::float32>* var_112;
        wp::array_t<wp::float32> var_113;
        wp::float32* var_114;
        wp::float32 var_115;
        wp::float32 var_116;
        wp::int32 var_117;
        wp::float32 var_118;
        bool var_119;
        wp::int32 var_120;
        wp::array_t<wp::float32>* var_121;
        wp::array_t<wp::float32> var_122;
        wp::float32* var_123;
        wp::float32 var_124;
        wp::float32 var_125;
        wp::int32 var_126;
        wp::float32 var_127;
        bool var_128;
        wp::float32 var_129;
        wp::float32 var_130;
        wp::float32 var_131;
        wp::vec_t<3,wp::float32> var_132;
        wp::vec_t<3,wp::float32> var_133;
        wp::vec_t<3,wp::float32> var_134;
        wp::vec_t<3,wp::float32> var_135;
        wp::vec_t<3,wp::float32> var_136;
        wp::vec_t<3,wp::float32> var_137;
        wp::vec_t<3,wp::float32> var_138;
        bool var_139;
        const wp::float32 var_140 = 1.0;
        wp::float32 var_141;
        bool var_142;
        wp::float32 var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::float32 var_145;
        wp::vec_t<3,wp::float32> var_146;
        wp::vec_t<3,wp::float32> var_147;
        wp::vec_t<3,wp::float32> var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::vec_t<3,wp::float32> var_150;
        bool var_151;
        wp::vec_t<3,wp::float32> var_152;
        wp::vec_t<3,wp::float32> var_153;
        wp::vec_t<3,wp::float32> var_154;
        wp::vec_t<3,wp::float32> var_155;
        wp::vec_t<3,wp::float32> var_156;
        wp::float32 var_157;
        wp::vec_t<3,wp::float32> var_158;
        wp::vec_t<3,wp::float32> var_159;
        wp::vec_t<3,wp::float32> var_160;
        wp::vec_t<3,wp::float32> var_161;
        wp::vec_t<3,wp::float32> var_162;
        wp::vec_t<3,wp::float32> var_163;
        wp::vec_t<3,wp::float32> var_164;
        wp::vec_t<3,wp::float32> var_165;
        wp::vec_t<3,wp::float32> var_166;
        wp::vec_t<3,wp::float32> var_167;
        wp::float32 var_168;
        bool var_169;
        wp::vec_t<3,wp::float32> var_170;
        wp::float32 var_171;
        wp::float32 var_172;
        wp::float32 var_173;
        wp::float32 var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<3,wp::float32> var_176;
        wp::vec_t<3,wp::float32> var_177;
        wp::vec_t<3,wp::float32> var_178;
        wp::vec_t<3,wp::float32> var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::vec_t<3,wp::float32> var_181;
        wp::vec_t<3,wp::float32> var_182;
        wp::vec_t<3,wp::float32> var_183;
        wp::vec_t<3,wp::float32> var_184;
        wp::vec_t<3,wp::float32> var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::vec_t<3,wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::vec_t<3,wp::float32> var_191;
        wp::vec_t<3,wp::float32> var_192;
        wp::vec_t<3,wp::float32> var_193;
        wp::vec_t<3,wp::float32> var_194;
        wp::vec_t<3,wp::float32> var_195;
        wp::vec_t<3,wp::float32> var_196;
        wp::float32 var_197;
        wp::vec_t<3,wp::float32> var_198;
        bool var_199;
        wp::float32 var_200;
        wp::float32 var_201;
        wp::float32 var_202;
        bool var_203;
        wp::vec_t<3,wp::float32> var_204;
        wp::vec_t<3,wp::float32> var_205;
        wp::float32 var_206;
        wp::float32 var_207;
        wp::float32 var_208;
        wp::float32 var_209;
        wp::float32 var_210;
        wp::vec_t<3,wp::float32> var_211;
        wp::vec_t<3,wp::float32> var_212;
        wp::vec_t<3,wp::float32> var_213;
        wp::vec_t<3,wp::float32> var_214;
        wp::vec_t<3,wp::float32> var_215;
        wp::vec_t<3,wp::float32> var_216;
        wp::vec_t<3,wp::float32> var_217;
        wp::vec_t<3,wp::float32> var_218;
        wp::float32 var_219;
        wp::float32 var_220;
        bool var_221;
        wp::float32 var_222;
        wp::vec_t<3,wp::float32> var_223;
        wp::vec_t<3,wp::float32> var_224;
        wp::float32 var_225;
        wp::float32 var_226;
        bool var_227;
        wp::vec_t<3,wp::float32> var_228;
        wp::vec_t<3,wp::float32> var_229;
        wp::vec_t<3,wp::float32> var_230;
        wp::float32 var_231;
        wp::float32 var_232;
        wp::float32 var_233;
        wp::float32 var_234;
        wp::vec_t<3,wp::float32> var_235;
        wp::vec_t<3,wp::float32> var_236;
        wp::vec_t<3,wp::float32> var_237;
        wp::vec_t<3,wp::float32> var_238;
        wp::vec_t<3,wp::float32> var_239;
        wp::vec_t<3,wp::float32> var_240;
        wp::vec_t<3,wp::float32> var_241;
        wp::vec_t<3,wp::float32> var_242;
        wp::vec_t<3,wp::float32> var_243;
        wp::float32 var_244;
        wp::vec_t<3,wp::float32> var_245;
        wp::vec_t<3,wp::float32> var_246;
        bool var_247;
        wp::vec_t<6,wp::float32> var_248;
        wp::vec_t<6,wp::float32> var_249;
        bool var_250;
        wp::vec_t<6,wp::float32> var_251;
        wp::vec_t<6,wp::float32> var_252;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        bool adj_5 = {};
        wp::int32 adj_6 = {};
        wp::int32 adj_7 = {};
        wp::int32 adj_8 = {};
        wp::int32 adj_9 = {};
        wp::int32 adj_10 = {};
        wp::int32 adj_11 = {};
        bool adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        bool adj_15 = {};
        wp::int32 adj_16 = {};
        wp::int32 adj_17 = {};
        wp::transform_t<wp::float32> adj_18 = {};
        wp::transform_t<wp::float32> adj_19 = {};
        bool adj_20 = {};
        wp::transform_t<wp::float32> adj_21 = {};
        wp::transform_t<wp::float32> adj_22 = {};
        wp::transform_t<wp::float32> adj_23 = {};
        wp::transform_t<wp::float32> adj_24 = {};
        bool adj_25 = {};
        wp::transform_t<wp::float32> adj_26 = {};
        wp::transform_t<wp::float32> adj_27 = {};
        wp::transform_t<wp::float32> adj_28 = {};
        wp::transform_t<wp::float32> adj_29 = {};
        wp::vec_t<3,wp::float32> adj_30 = {};
        wp::vec_t<3,wp::float32> adj_31 = {};
        wp::vec_t<3,wp::float32> adj_32 = {};
        wp::vec_t<3,wp::float32> adj_33 = {};
        wp::vec_t<3,wp::float32> adj_34 = {};
        wp::vec_t<3,wp::float32> adj_35 = {};
        wp::float32 adj_36 = {};
        wp::float32 adj_37 = {};
        wp::float32 adj_38 = {};
        wp::vec_t<3,wp::float32> adj_39 = {};
        wp::vec_t<3,wp::float32> adj_40 = {};
        wp::vec_t<3,wp::float32> adj_41 = {};
        wp::vec_t<3,wp::float32> adj_42 = {};
        wp::float32 adj_43 = {};
        wp::float32 adj_44 = {};
        wp::float32 adj_45 = {};
        bool adj_46 = {};
        wp::mat_t<3,3,wp::float32> adj_47 = {};
        wp::mat_t<3,3,wp::float32> adj_48 = {};
        wp::vec_t<3,wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        wp::transform_t<wp::float32> adj_51 = {};
        wp::transform_t<wp::float32> adj_52 = {};
        wp::vec_t<3,wp::float32> adj_53 = {};
        wp::vec_t<3,wp::float32> adj_54 = {};
        wp::vec_t<3,wp::float32> adj_55 = {};
        wp::vec_t<3,wp::float32> adj_56 = {};
        wp::vec_t<3,wp::float32> adj_57 = {};
        wp::vec_t<3,wp::float32> adj_58 = {};
        wp::vec_t<3,wp::float32> adj_59 = {};
        wp::vec_t<3,wp::float32> adj_60 = {};
        bool adj_61 = {};
        wp::transform_t<wp::float32> adj_62 = {};
        wp::transform_t<wp::float32> adj_63 = {};
        wp::transform_t<wp::float32> adj_64 = {};
        wp::vec_t<3,wp::float32> adj_65 = {};
        wp::vec_t<3,wp::float32> adj_66 = {};
        wp::vec_t<3,wp::float32> adj_67 = {};
        wp::float32 adj_68 = {};
        wp::float32 adj_69 = {};
        wp::float32 adj_70 = {};
        wp::mat_t<3,3,wp::float32> adj_71 = {};
        wp::mat_t<3,3,wp::float32> adj_72 = {};
        wp::mat_t<3,3,wp::float32> adj_73 = {};
        wp::vec_t<6,wp::float32> adj_74 = {};
        wp::vec_t<6,wp::float32> adj_75 = {};
        wp::vec_t<3,wp::float32> adj_76 = {};
        wp::transform_t<wp::float32> adj_77 = {};
        wp::float32 adj_78 = {};
        wp::mat_t<3,3,wp::float32> adj_79 = {};
        wp::vec_t<3,wp::float32> adj_80 = {};
        wp::vec_t<3,wp::float32> adj_81 = {};
        bool adj_82 = {};
        wp::transform_t<wp::float32> adj_83 = {};
        wp::transform_t<wp::float32> adj_84 = {};
        wp::transform_t<wp::float32> adj_85 = {};
        wp::vec_t<3,wp::float32> adj_86 = {};
        wp::vec_t<3,wp::float32> adj_87 = {};
        wp::vec_t<3,wp::float32> adj_88 = {};
        wp::float32 adj_89 = {};
        wp::float32 adj_90 = {};
        wp::float32 adj_91 = {};
        wp::mat_t<3,3,wp::float32> adj_92 = {};
        wp::mat_t<3,3,wp::float32> adj_93 = {};
        wp::mat_t<3,3,wp::float32> adj_94 = {};
        wp::vec_t<6,wp::float32> adj_95 = {};
        wp::vec_t<6,wp::float32> adj_96 = {};
        wp::vec_t<3,wp::float32> adj_97 = {};
        wp::transform_t<wp::float32> adj_98 = {};
        wp::float32 adj_99 = {};
        wp::mat_t<3,3,wp::float32> adj_100 = {};
        wp::vec_t<3,wp::float32> adj_101 = {};
        wp::vec_t<3,wp::float32> adj_102 = {};
        wp::int32 adj_103 = {};
        wp::int32 adj_104 = {};
        wp::int32 adj_105 = {};
        wp::int32 adj_106 = {};
        wp::int32 adj_107 = {};
        wp::int32 adj_108 = {};
        bool adj_109 = {};
        wp::int32 adj_110 = {};
        wp::int32 adj_111 = {};
        wp::array_t<wp::float32> adj_112 = {};
        wp::array_t<wp::float32> adj_113 = {};
        wp::float32 adj_114 = {};
        wp::float32 adj_115 = {};
        wp::float32 adj_116 = {};
        wp::int32 adj_117 = {};
        wp::float32 adj_118 = {};
        bool adj_119 = {};
        wp::int32 adj_120 = {};
        wp::array_t<wp::float32> adj_121 = {};
        wp::array_t<wp::float32> adj_122 = {};
        wp::float32 adj_123 = {};
        wp::float32 adj_124 = {};
        wp::float32 adj_125 = {};
        wp::int32 adj_126 = {};
        wp::float32 adj_127 = {};
        bool adj_128 = {};
        wp::float32 adj_129 = {};
        wp::float32 adj_130 = {};
        wp::float32 adj_131 = {};
        wp::vec_t<3,wp::float32> adj_132 = {};
        wp::vec_t<3,wp::float32> adj_133 = {};
        wp::vec_t<3,wp::float32> adj_134 = {};
        wp::vec_t<3,wp::float32> adj_135 = {};
        wp::vec_t<3,wp::float32> adj_136 = {};
        wp::vec_t<3,wp::float32> adj_137 = {};
        wp::vec_t<3,wp::float32> adj_138 = {};
        bool adj_139 = {};
        wp::float32 adj_140 = {};
        wp::float32 adj_141 = {};
        bool adj_142 = {};
        wp::float32 adj_143 = {};
        wp::vec_t<3,wp::float32> adj_144 = {};
        wp::float32 adj_145 = {};
        wp::vec_t<3,wp::float32> adj_146 = {};
        wp::vec_t<3,wp::float32> adj_147 = {};
        wp::vec_t<3,wp::float32> adj_148 = {};
        wp::vec_t<3,wp::float32> adj_149 = {};
        wp::vec_t<3,wp::float32> adj_150 = {};
        bool adj_151 = {};
        wp::vec_t<3,wp::float32> adj_152 = {};
        wp::vec_t<3,wp::float32> adj_153 = {};
        wp::vec_t<3,wp::float32> adj_154 = {};
        wp::vec_t<3,wp::float32> adj_155 = {};
        wp::vec_t<3,wp::float32> adj_156 = {};
        wp::float32 adj_157 = {};
        wp::vec_t<3,wp::float32> adj_158 = {};
        wp::vec_t<3,wp::float32> adj_159 = {};
        wp::vec_t<3,wp::float32> adj_160 = {};
        wp::vec_t<3,wp::float32> adj_161 = {};
        wp::vec_t<3,wp::float32> adj_162 = {};
        wp::vec_t<3,wp::float32> adj_163 = {};
        wp::vec_t<3,wp::float32> adj_164 = {};
        wp::vec_t<3,wp::float32> adj_165 = {};
        wp::vec_t<3,wp::float32> adj_166 = {};
        wp::vec_t<3,wp::float32> adj_167 = {};
        wp::float32 adj_168 = {};
        bool adj_169 = {};
        wp::vec_t<3,wp::float32> adj_170 = {};
        wp::float32 adj_171 = {};
        wp::float32 adj_172 = {};
        wp::float32 adj_173 = {};
        wp::float32 adj_174 = {};
        wp::vec_t<3,wp::float32> adj_175 = {};
        wp::vec_t<3,wp::float32> adj_176 = {};
        wp::vec_t<3,wp::float32> adj_177 = {};
        wp::vec_t<3,wp::float32> adj_178 = {};
        wp::vec_t<3,wp::float32> adj_179 = {};
        wp::vec_t<3,wp::float32> adj_180 = {};
        wp::vec_t<3,wp::float32> adj_181 = {};
        wp::vec_t<3,wp::float32> adj_182 = {};
        wp::vec_t<3,wp::float32> adj_183 = {};
        wp::vec_t<3,wp::float32> adj_184 = {};
        wp::vec_t<3,wp::float32> adj_185 = {};
        wp::vec_t<3,wp::float32> adj_186 = {};
        wp::vec_t<3,wp::float32> adj_187 = {};
        wp::vec_t<3,wp::float32> adj_188 = {};
        wp::vec_t<3,wp::float32> adj_189 = {};
        wp::vec_t<3,wp::float32> adj_190 = {};
        wp::vec_t<3,wp::float32> adj_191 = {};
        wp::vec_t<3,wp::float32> adj_192 = {};
        wp::vec_t<3,wp::float32> adj_193 = {};
        wp::vec_t<3,wp::float32> adj_194 = {};
        wp::vec_t<3,wp::float32> adj_195 = {};
        wp::vec_t<3,wp::float32> adj_196 = {};
        wp::float32 adj_197 = {};
        wp::vec_t<3,wp::float32> adj_198 = {};
        bool adj_199 = {};
        wp::float32 adj_200 = {};
        wp::float32 adj_201 = {};
        wp::float32 adj_202 = {};
        bool adj_203 = {};
        wp::vec_t<3,wp::float32> adj_204 = {};
        wp::vec_t<3,wp::float32> adj_205 = {};
        wp::float32 adj_206 = {};
        wp::float32 adj_207 = {};
        wp::float32 adj_208 = {};
        wp::float32 adj_209 = {};
        wp::float32 adj_210 = {};
        wp::vec_t<3,wp::float32> adj_211 = {};
        wp::vec_t<3,wp::float32> adj_212 = {};
        wp::vec_t<3,wp::float32> adj_213 = {};
        wp::vec_t<3,wp::float32> adj_214 = {};
        wp::vec_t<3,wp::float32> adj_215 = {};
        wp::vec_t<3,wp::float32> adj_216 = {};
        wp::vec_t<3,wp::float32> adj_217 = {};
        wp::vec_t<3,wp::float32> adj_218 = {};
        wp::float32 adj_219 = {};
        wp::float32 adj_220 = {};
        bool adj_221 = {};
        wp::float32 adj_222 = {};
        wp::vec_t<3,wp::float32> adj_223 = {};
        wp::vec_t<3,wp::float32> adj_224 = {};
        wp::float32 adj_225 = {};
        wp::float32 adj_226 = {};
        bool adj_227 = {};
        wp::vec_t<3,wp::float32> adj_228 = {};
        wp::vec_t<3,wp::float32> adj_229 = {};
        wp::vec_t<3,wp::float32> adj_230 = {};
        wp::float32 adj_231 = {};
        wp::float32 adj_232 = {};
        wp::float32 adj_233 = {};
        wp::float32 adj_234 = {};
        wp::vec_t<3,wp::float32> adj_235 = {};
        wp::vec_t<3,wp::float32> adj_236 = {};
        wp::vec_t<3,wp::float32> adj_237 = {};
        wp::vec_t<3,wp::float32> adj_238 = {};
        wp::vec_t<3,wp::float32> adj_239 = {};
        wp::vec_t<3,wp::float32> adj_240 = {};
        wp::vec_t<3,wp::float32> adj_241 = {};
        wp::vec_t<3,wp::float32> adj_242 = {};
        wp::vec_t<3,wp::float32> adj_243 = {};
        wp::float32 adj_244 = {};
        wp::vec_t<3,wp::float32> adj_245 = {};
        wp::vec_t<3,wp::float32> adj_246 = {};
        bool adj_247 = {};
        wp::vec_t<6,wp::float32> adj_248 = {};
        wp::vec_t<6,wp::float32> adj_249 = {};
        bool adj_250 = {};
        wp::vec_t<6,wp::float32> adj_251 = {};
        wp::vec_t<6,wp::float32> adj_252 = {};
        //---------
        // forward
        // def solve_body_contact_positions(                                                      <L 1422>
        // tid = wp.tid()                                                                         <L 1451>
        var_0 = builtin_tid1d();
        // count = contact_count[0]                                                               <L 1453>
        var_2 = wp::address(var_contact_count, var_1);
        var_3 = wp::load(var_2);
        var_4 = wp::copy(var_3);
        // if tid >= count:                                                                       <L 1454>
        var_5 = (var_0 >= var_4);
        if (var_5) {
            // return                                                                             <L 1455>
            goto label0;
        }
        // body_a = contact_body0[tid]                                                            <L 1457>
        var_6 = wp::address(var_contact_body0, var_0);
        var_7 = wp::load(var_6);
        var_8 = wp::copy(var_7);
        // body_b = contact_body1[tid]                                                            <L 1458>
        var_9 = wp::address(var_contact_body1, var_0);
        var_10 = wp::load(var_9);
        var_11 = wp::copy(var_10);
        // if body_a == body_b:                                                                   <L 1460>
        var_12 = (var_8 == var_11);
        if (var_12) {
            // return                                                                             <L 1461>
            goto label1;
        }
        // if contact_shape0[tid] == contact_shape1[tid]:                                         <L 1462>
        var_13 = wp::address(var_contact_shape0, var_0);
        var_14 = wp::address(var_contact_shape1, var_0);
        var_16 = wp::load(var_13);
        var_17 = wp::load(var_14);
        var_15 = (var_16 == var_17);
        if (var_15) {
            // return                                                                             <L 1463>
            goto label2;
        }
        // X_wb_a = wp.transform_identity()                                                       <L 1466>
        var_18 = wp::transform_identity<wp::float32>();
        // X_wb_b = wp.transform_identity()                                                       <L 1467>
        var_19 = wp::transform_identity<wp::float32>();
        // if body_a >= 0:                                                                        <L 1468>
        var_20 = (var_8 >= var_1);
        if (var_20) {
            // X_wb_a = body_q[body_a]                                                            <L 1469>
            var_21 = wp::address(var_body_q, var_8);
            var_22 = wp::load(var_21);
            var_23 = wp::copy(var_22);
        }
        var_24 = wp::select(var_20, var_18, var_23);
        // if body_b >= 0:                                                                        <L 1470>
        var_25 = (var_11 >= var_1);
        if (var_25) {
            // X_wb_b = body_q[body_b]                                                            <L 1471>
            var_26 = wp::address(var_body_q, var_11);
            var_27 = wp::load(var_26);
            var_28 = wp::copy(var_27);
        }
        var_29 = wp::select(var_25, var_19, var_28);
        // bx_a = wp.transform_point(X_wb_a, contact_point0[tid])                                 <L 1474>
        var_30 = wp::address(var_contact_point0, var_0);
        var_31 = wp::load(var_30);
        var_32 = wp::transform_point(var_24, var_31);
        // bx_b = wp.transform_point(X_wb_b, contact_point1[tid])                                 <L 1475>
        var_33 = wp::address(var_contact_point1, var_0);
        var_34 = wp::load(var_33);
        var_35 = wp::transform_point(var_29, var_34);
        // active_contact_point0[tid] = bx_a                                                      <L 1476>
        // wp::array_store(var_active_contact_point0, var_0, var_32);
        // active_contact_point1[tid] = bx_b                                                      <L 1477>
        // wp::array_store(var_active_contact_point1, var_0, var_35);
        // thickness = contact_thickness[tid]                                                     <L 1479>
        var_36 = wp::address(var_contact_thickness, var_0);
        var_37 = wp::load(var_36);
        var_38 = wp::copy(var_37);
        // n = -contact_normal[tid]                                                               <L 1480>
        var_39 = wp::address(var_contact_normal, var_0);
        var_40 = wp::load(var_39);
        var_41 = wp::neg(var_40);
        // d = wp.dot(n, bx_b - bx_a) - thickness                                                 <L 1481>
        var_42 = wp::sub(var_35, var_32);
        var_43 = wp::dot(var_41, var_42);
        var_44 = wp::sub(var_43, var_38);
        // active_contact_distance[tid] = d                                                       <L 1483>
        // wp::array_store(var_active_contact_distance, var_0, var_44);
        // if d >= 0.0:                                                                           <L 1485>
        var_46 = (var_44 >= var_45);
        if (var_46) {
            // return                                                                             <L 1486>
            goto label3;
        }
        // m_inv_a = 0.0                                                                          <L 1488>
        // m_inv_b = 0.0                                                                          <L 1489>
        // I_inv_a = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1490>
        var_47 = wp::mat_t<3,3,wp::float32>(var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45);
        // I_inv_b = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1491>
        var_48 = wp::mat_t<3,3,wp::float32>(var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45);
        // com_a = wp.vec3(0.0)                                                                   <L 1493>
        var_49 = wp::vec_t<3,wp::float32>(var_45);
        // com_b = wp.vec3(0.0)                                                                   <L 1494>
        var_50 = wp::vec_t<3,wp::float32>(var_45);
        // X_wb_a = wp.transform_identity()                                                       <L 1496>
        var_51 = wp::transform_identity<wp::float32>();
        // X_wb_b = wp.transform_identity()                                                       <L 1497>
        var_52 = wp::transform_identity<wp::float32>();
        // omega_a = wp.vec3(0.0)                                                                 <L 1499>
        var_53 = wp::vec_t<3,wp::float32>(var_45);
        // omega_b = wp.vec3(0.0)                                                                 <L 1500>
        var_54 = wp::vec_t<3,wp::float32>(var_45);
        // offset_a = contact_offset0[tid]                                                        <L 1502>
        var_55 = wp::address(var_contact_offset0, var_0);
        var_56 = wp::load(var_55);
        var_57 = wp::copy(var_56);
        // offset_b = contact_offset1[tid]                                                        <L 1503>
        var_58 = wp::address(var_contact_offset1, var_0);
        var_59 = wp::load(var_58);
        var_60 = wp::copy(var_59);
        // if body_a >= 0:                                                                        <L 1505>
        var_61 = (var_8 >= var_1);
        if (var_61) {
            // X_wb_a = body_q[body_a]                                                            <L 1506>
            var_62 = wp::address(var_body_q, var_8);
            var_63 = wp::load(var_62);
            var_64 = wp::copy(var_63);
            // com_a = body_com[body_a]                                                           <L 1507>
            var_65 = wp::address(var_body_com, var_8);
            var_66 = wp::load(var_65);
            var_67 = wp::copy(var_66);
            // m_inv_a = body_m_inv[body_a]                                                       <L 1508>
            var_68 = wp::address(var_body_m_inv, var_8);
            var_69 = wp::load(var_68);
            var_70 = wp::copy(var_69);
            // I_inv_a = body_I_inv[body_a]                                                       <L 1509>
            var_71 = wp::address(var_body_I_inv, var_8);
            var_72 = wp::load(var_71);
            var_73 = wp::copy(var_72);
            // omega_a = wp.spatial_top(body_qd[body_a])                                          <L 1510>
            var_74 = wp::address(var_body_qd, var_8);
            var_75 = wp::load(var_74);
            var_76 = wp::spatial_top(var_75);
        }
        var_77 = wp::select(var_61, var_51, var_64);
        var_78 = wp::select(var_61, var_45, var_70);
        var_79 = wp::select(var_61, var_47, var_73);
        var_80 = wp::select(var_61, var_49, var_67);
        var_81 = wp::select(var_61, var_53, var_76);
        // if body_b >= 0:                                                                        <L 1512>
        var_82 = (var_11 >= var_1);
        if (var_82) {
            // X_wb_b = body_q[body_b]                                                            <L 1513>
            var_83 = wp::address(var_body_q, var_11);
            var_84 = wp::load(var_83);
            var_85 = wp::copy(var_84);
            // com_b = body_com[body_b]                                                           <L 1514>
            var_86 = wp::address(var_body_com, var_11);
            var_87 = wp::load(var_86);
            var_88 = wp::copy(var_87);
            // m_inv_b = body_m_inv[body_b]                                                       <L 1515>
            var_89 = wp::address(var_body_m_inv, var_11);
            var_90 = wp::load(var_89);
            var_91 = wp::copy(var_90);
            // I_inv_b = body_I_inv[body_b]                                                       <L 1516>
            var_92 = wp::address(var_body_I_inv, var_11);
            var_93 = wp::load(var_92);
            var_94 = wp::copy(var_93);
            // omega_b = wp.spatial_top(body_qd[body_b])                                          <L 1517>
            var_95 = wp::address(var_body_qd, var_11);
            var_96 = wp::load(var_95);
            var_97 = wp::spatial_top(var_96);
        }
        var_98 = wp::select(var_82, var_52, var_85);
        var_99 = wp::select(var_82, var_45, var_91);
        var_100 = wp::select(var_82, var_48, var_94);
        var_101 = wp::select(var_82, var_50, var_88);
        var_102 = wp::select(var_82, var_54, var_97);
        // mat_nonzero = 0                                                                        <L 1520>
        // mu = 0.0                                                                               <L 1521>
        // shape_a = contact_shape0[tid]                                                          <L 1522>
        var_103 = wp::address(var_contact_shape0, var_0);
        var_104 = wp::load(var_103);
        var_105 = wp::copy(var_104);
        // shape_b = contact_shape1[tid]                                                          <L 1523>
        var_106 = wp::address(var_contact_shape1, var_0);
        var_107 = wp::load(var_106);
        var_108 = wp::copy(var_107);
        // if shape_a >= 0:                                                                       <L 1524>
        var_109 = (var_105 >= var_1);
        if (var_109) {
            // mat_nonzero += 1                                                                   <L 1525>
            var_111 = wp::add(var_1, var_110);
            // mu += shape_materials.mu[shape_a]                                                  <L 1526>
            var_112 = &(var_shape_materials.mu);
            var_113 = wp::load(var_112);
            var_114 = wp::address(var_113, var_105);
            var_115 = wp::load(var_114);
            var_116 = wp::add(var_45, var_115);
        }
        var_117 = wp::select(var_109, var_1, var_111);
        var_118 = wp::select(var_109, var_45, var_116);
        // if shape_b >= 0:                                                                       <L 1527>
        var_119 = (var_108 >= var_1);
        if (var_119) {
            // mat_nonzero += 1                                                                   <L 1528>
            var_120 = wp::add(var_117, var_110);
            // mu += shape_materials.mu[shape_b]                                                  <L 1529>
            var_121 = &(var_shape_materials.mu);
            var_122 = wp::load(var_121);
            var_123 = wp::address(var_122, var_108);
            var_124 = wp::load(var_123);
            var_125 = wp::add(var_118, var_124);
        }
        var_126 = wp::select(var_119, var_117, var_120);
        var_127 = wp::select(var_119, var_118, var_125);
        // if mat_nonzero > 0:                                                                    <L 1530>
        var_128 = (var_126 > var_1);
        if (var_128) {
            // mu /= float(mat_nonzero)                                                           <L 1531>
            var_129 = wp::float(var_126);
            var_130 = wp::div(var_127, var_129);
        }
        var_131 = wp::select(var_128, var_127, var_130);
        // r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                         <L 1533>
        var_132 = wp::transform_point(var_77, var_80);
        var_133 = wp::sub(var_32, var_132);
        // r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                         <L 1534>
        var_134 = wp::transform_point(var_98, var_101);
        var_135 = wp::sub(var_35, var_134);
        // angular_a = -wp.cross(r_a, n)                                                          <L 1536>
        var_136 = wp::cross(var_133, var_41);
        var_137 = wp::neg(var_136);
        // angular_b = wp.cross(r_b, n)                                                           <L 1537>
        var_138 = wp::cross(var_135, var_41);
        // if contact_inv_weight:                                                                 <L 1539>
        if (var_contact_inv_weight) {
            // if body_a >= 0:                                                                    <L 1540>
            var_139 = (var_8 >= var_1);
            if (var_139) {
                // wp.atomic_add(contact_inv_weight, body_a, 1.0)                                 <L 1541>
                // var_141 = wp::atomic_add(var_contact_inv_weight, var_8, var_140);
            }
            // if body_b >= 0:                                                                    <L 1542>
            var_142 = (var_11 >= var_1);
            if (var_142) {
                // wp.atomic_add(contact_inv_weight, body_b, 1.0)                                 <L 1543>
                // var_143 = wp::atomic_add(var_contact_inv_weight, var_11, var_140);
            }
        }
        // lambda_n = compute_contact_constraint_delta(                                           <L 1545>
        // d, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, -n, n, angular_a, angular_b, relaxation, dt       <L 1546>
        var_144 = wp::neg(var_41);
        var_145 = compute_contact_constraint_delta(var_44, var_77, var_98, var_78, var_99, var_79, var_100, var_144, var_41, var_137, var_138, var_relaxation, var_dt);
        // lin_delta_a = -n * lambda_n                                                            <L 1549>
        var_146 = wp::neg(var_41);
        var_147 = wp::mul(var_146, var_145);
        // lin_delta_b = n * lambda_n                                                             <L 1550>
        var_148 = wp::mul(var_41, var_145);
        // ang_delta_a = angular_a * lambda_n                                                     <L 1551>
        var_149 = wp::mul(var_137, var_145);
        // ang_delta_b = angular_b * lambda_n                                                     <L 1552>
        var_150 = wp::mul(var_138, var_145);
        // if mu > 0.0:                                                                           <L 1555>
        var_151 = (var_131 > var_45);
        if (var_151) {
            // bx_a += wp.transform_vector(X_wb_a, offset_a)                                      <L 1558>
            var_152 = wp::transform_vector(var_77, var_57);
            var_153 = wp::add(var_32, var_152);
            // bx_b += wp.transform_vector(X_wb_b, offset_b)                                      <L 1559>
            var_154 = wp::transform_vector(var_98, var_60);
            var_155 = wp::add(var_35, var_154);
            // delta = bx_b - bx_a                                                                <L 1562>
            var_156 = wp::sub(var_155, var_153);
            // friction_delta = delta - wp.dot(n, delta) * n                                      <L 1563>
            var_157 = wp::dot(var_41, var_156);
            var_158 = wp::mul(var_157, var_41);
            var_159 = wp::sub(var_156, var_158);
            // perp = wp.normalize(friction_delta)                                                <L 1565>
            var_160 = wp::normalize(var_159);
            // r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                     <L 1567>
            var_161 = wp::transform_point(var_77, var_80);
            var_162 = wp::sub(var_153, var_161);
            // r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                     <L 1568>
            var_163 = wp::transform_point(var_98, var_101);
            var_164 = wp::sub(var_155, var_163);
            // angular_a = -wp.cross(r_a, perp)                                                   <L 1570>
            var_165 = wp::cross(var_162, var_160);
            var_166 = wp::neg(var_165);
            // angular_b = wp.cross(r_b, perp)                                                    <L 1571>
            var_167 = wp::cross(var_164, var_160);
            // err = wp.length(friction_delta)                                                    <L 1573>
            var_168 = wp::length(var_159);
            // if err > 0.0:                                                                      <L 1575>
            var_169 = (var_168 > var_45);
            if (var_169) {
                // lambda_fr = compute_contact_constraint_delta(                                  <L 1576>
                // err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, -perp, perp, angular_a, angular_b, 1.0, dt       <L 1577>
                var_170 = wp::neg(var_160);
                var_171 = compute_contact_constraint_delta(var_168, var_77, var_98, var_78, var_99, var_79, var_100, var_170, var_160, var_166, var_167, var_140, var_dt);
                // lambda_fr = wp.max(lambda_fr, -lambda_n * mu)                                  <L 1581>
                var_172 = wp::neg(var_145);
                var_173 = wp::mul(var_172, var_131);
                var_174 = wp::max(var_171, var_173);
                // lin_delta_a -= perp * lambda_fr                                                <L 1583>
                var_175 = wp::mul(var_160, var_174);
                var_176 = wp::sub(var_147, var_175);
                // lin_delta_b += perp * lambda_fr                                                <L 1584>
                var_177 = wp::mul(var_160, var_174);
                var_178 = wp::add(var_148, var_177);
                // ang_delta_a += angular_a * lambda_fr                                           <L 1586>
                var_179 = wp::mul(var_166, var_174);
                var_180 = wp::add(var_149, var_179);
                // ang_delta_b += angular_b * lambda_fr                                           <L 1587>
                var_181 = wp::mul(var_167, var_174);
                var_182 = wp::add(var_150, var_181);
            }
            var_183 = wp::select(var_169, var_147, var_176);
            var_184 = wp::select(var_169, var_148, var_178);
            var_185 = wp::select(var_169, var_149, var_180);
            var_186 = wp::select(var_169, var_150, var_182);
        }
        var_187 = wp::select(var_151, var_32, var_153);
        var_188 = wp::select(var_151, var_35, var_155);
        var_189 = wp::select(var_151, var_133, var_162);
        var_190 = wp::select(var_151, var_135, var_164);
        var_191 = wp::select(var_151, var_137, var_166);
        var_192 = wp::select(var_151, var_138, var_167);
        var_193 = wp::select(var_151, var_147, var_183);
        var_194 = wp::select(var_151, var_148, var_184);
        var_195 = wp::select(var_151, var_149, var_185);
        var_196 = wp::select(var_151, var_150, var_186);
        // torsional_friction = mu * contact_torsional_friction                                   <L 1589>
        var_197 = wp::mul(var_131, var_contact_torsional_friction);
        // delta_omega = omega_b - omega_a                                                        <L 1591>
        var_198 = wp::sub(var_102, var_81);
        // if torsional_friction > 0.0:                                                           <L 1593>
        var_199 = (var_197 > var_45);
        if (var_199) {
            // err = wp.dot(delta_omega, n) * dt                                                  <L 1594>
            var_200 = wp::dot(var_198, var_41);
            var_201 = wp::mul(var_200, var_dt);
            // if wp.abs(err) > 0.0:                                                              <L 1596>
            var_202 = wp::abs(var_201);
            var_203 = (var_202 > var_45);
            if (var_203) {
                // lin = wp.vec3(0.0)                                                             <L 1597>
                var_204 = wp::vec_t<3,wp::float32>(var_45);
                // lambda_torsion = compute_contact_constraint_delta(                             <L 1598>
                // err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, lin, lin, -n, n, 1.0, dt       <L 1599>
                var_205 = wp::neg(var_41);
                var_206 = compute_contact_constraint_delta(var_201, var_77, var_98, var_78, var_99, var_79, var_100, var_204, var_204, var_205, var_41, var_140, var_dt);
                // lambda_torsion = wp.clamp(lambda_torsion, -lambda_n * torsional_friction, lambda_n * torsional_friction)       <L 1602>
                var_207 = wp::neg(var_145);
                var_208 = wp::mul(var_207, var_197);
                var_209 = wp::mul(var_145, var_197);
                var_210 = wp::clamp(var_206, var_208, var_209);
                // ang_delta_a -= n * lambda_torsion                                              <L 1604>
                var_211 = wp::mul(var_41, var_210);
                var_212 = wp::sub(var_195, var_211);
                // ang_delta_b += n * lambda_torsion                                              <L 1605>
                var_213 = wp::mul(var_41, var_210);
                var_214 = wp::add(var_196, var_213);
            }
            var_215 = wp::select(var_203, var_195, var_212);
            var_216 = wp::select(var_203, var_196, var_214);
        }
        var_217 = wp::select(var_199, var_195, var_215);
        var_218 = wp::select(var_199, var_196, var_216);
        var_219 = wp::select(var_199, var_168, var_201);
        // rolling_friction = mu * contact_rolling_friction                                       <L 1607>
        var_220 = wp::mul(var_131, var_contact_rolling_friction);
        // if rolling_friction > 0.0:                                                             <L 1608>
        var_221 = (var_220 > var_45);
        if (var_221) {
            // delta_omega -= wp.dot(n, delta_omega) * n                                          <L 1609>
            var_222 = wp::dot(var_41, var_198);
            var_223 = wp::mul(var_222, var_41);
            var_224 = wp::sub(var_198, var_223);
            // err = wp.length(delta_omega) * dt                                                  <L 1610>
            var_225 = wp::length(var_224);
            var_226 = wp::mul(var_225, var_dt);
            // if err > 0.0:                                                                      <L 1611>
            var_227 = (var_226 > var_45);
            if (var_227) {
                // lin = wp.vec3(0.0)                                                             <L 1612>
                var_228 = wp::vec_t<3,wp::float32>(var_45);
                // roll_n = wp.normalize(delta_omega)                                             <L 1613>
                var_229 = wp::normalize(var_224);
                // lambda_roll = compute_contact_constraint_delta(                                <L 1614>
                // err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, lin, lin, -roll_n, roll_n, 1.0, dt       <L 1615>
                var_230 = wp::neg(var_229);
                var_231 = compute_contact_constraint_delta(var_226, var_77, var_98, var_78, var_99, var_79, var_100, var_228, var_228, var_230, var_229, var_140, var_dt);
                // lambda_roll = wp.max(lambda_roll, -lambda_n * rolling_friction)                <L 1618>
                var_232 = wp::neg(var_145);
                var_233 = wp::mul(var_232, var_220);
                var_234 = wp::max(var_231, var_233);
                // ang_delta_a -= roll_n * lambda_roll                                            <L 1620>
                var_235 = wp::mul(var_229, var_234);
                var_236 = wp::sub(var_217, var_235);
                // ang_delta_b += roll_n * lambda_roll                                            <L 1621>
                var_237 = wp::mul(var_229, var_234);
                var_238 = wp::add(var_218, var_237);
            }
            var_239 = wp::select(var_227, var_217, var_236);
            var_240 = wp::select(var_227, var_218, var_238);
            var_241 = wp::select(var_227, var_204, var_228);
        }
        var_242 = wp::select(var_221, var_217, var_239);
        var_243 = wp::select(var_221, var_218, var_240);
        var_244 = wp::select(var_221, var_219, var_226);
        var_245 = wp::select(var_221, var_198, var_224);
        var_246 = wp::select(var_221, var_204, var_241);
        // if body_a >= 0:                                                                        <L 1623>
        var_247 = (var_8 >= var_1);
        if (var_247) {
            // wp.atomic_add(deltas, body_a, wp.spatial_vector(ang_delta_a, lin_delta_a))         <L 1624>
            var_248 = wp::vec_t<6,wp::float32>(var_242, var_193);
            // var_249 = wp::atomic_add(var_deltas, var_8, var_248);
        }
        // if body_b >= 0:                                                                        <L 1625>
        var_250 = (var_11 >= var_1);
        if (var_250) {
            // wp.atomic_add(deltas, body_b, wp.spatial_vector(ang_delta_b, lin_delta_b))         <L 1626>
            var_251 = wp::vec_t<6,wp::float32>(var_243, var_194);
            // var_252 = wp::atomic_add(var_deltas, var_11, var_251);
        }
        //---------
        // reverse
        if (var_250) {
            wp::adj_atomic_add(var_deltas, var_11, var_251, adj_deltas, adj_11, adj_251, adj_252);
            wp::adj_vec_t(var_243, var_194, adj_243, adj_194, adj_251);
            // adj: wp.atomic_add(deltas, body_b, wp.spatial_vector(ang_delta_b, lin_delta_b))    <L 1626>
        }
        // adj: if body_b >= 0:                                                                   <L 1625>
        if (var_247) {
            wp::adj_atomic_add(var_deltas, var_8, var_248, adj_deltas, adj_8, adj_248, adj_249);
            wp::adj_vec_t(var_242, var_193, adj_242, adj_193, adj_248);
            // adj: wp.atomic_add(deltas, body_a, wp.spatial_vector(ang_delta_a, lin_delta_a))    <L 1624>
        }
        // adj: if body_a >= 0:                                                                   <L 1623>
        wp::adj_select(var_221, var_204, var_241, adj_221, adj_204, adj_241, adj_246);
        wp::adj_select(var_221, var_198, var_224, adj_221, adj_198, adj_224, adj_245);
        wp::adj_select(var_221, var_219, var_226, adj_221, adj_219, adj_226, adj_244);
        wp::adj_select(var_221, var_218, var_240, adj_221, adj_218, adj_240, adj_243);
        wp::adj_select(var_221, var_217, var_239, adj_221, adj_217, adj_239, adj_242);
        if (var_221) {
            wp::adj_select(var_227, var_204, var_228, adj_227, adj_204, adj_228, adj_241);
            wp::adj_select(var_227, var_218, var_238, adj_227, adj_218, adj_238, adj_240);
            wp::adj_select(var_227, var_217, var_236, adj_227, adj_217, adj_236, adj_239);
            if (var_227) {
                wp::adj_add(var_218, var_237, adj_218, adj_237, adj_238);
                wp::adj_mul(var_229, var_234, adj_229, adj_234, adj_237);
                // adj: ang_delta_b += roll_n * lambda_roll                                       <L 1621>
                wp::adj_sub(var_217, var_235, adj_217, adj_235, adj_236);
                wp::adj_mul(var_229, var_234, adj_229, adj_234, adj_235);
                // adj: ang_delta_a -= roll_n * lambda_roll                                       <L 1620>
                wp::adj_max(var_231, var_233, adj_231, adj_233, adj_234);
                wp::adj_mul(var_232, var_220, adj_232, adj_220, adj_233);
                wp::adj_neg(var_145, adj_145, adj_232);
                // adj: lambda_roll = wp.max(lambda_roll, -lambda_n * rolling_friction)           <L 1618>
                adj_compute_contact_constraint_delta(var_226, var_77, var_98, var_78, var_99, var_79, var_100, var_228, var_228, var_230, var_229, var_140, var_dt, adj_226, adj_77, adj_98, adj_78, adj_99, adj_79, adj_100, adj_228, adj_228, adj_230, adj_229, adj_140, adj_dt, adj_231);
                wp::adj_neg(var_229, adj_229, adj_230);
                // adj: err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, lin, lin, -roll_n, roll_n, 1.0, dt  <L 1615>
                // adj: lambda_roll = compute_contact_constraint_delta(                           <L 1614>
                wp::adj_normalize(var_224, var_229, adj_224, adj_229);
                // adj: roll_n = wp.normalize(delta_omega)                                        <L 1613>
                wp::adj_vec_t(var_45, adj_45, adj_228);
                // adj: lin = wp.vec3(0.0)                                                        <L 1612>
            }
            // adj: if err > 0.0:                                                                 <L 1611>
            wp::adj_mul(var_225, var_dt, adj_225, adj_dt, adj_226);
            wp::adj_length(var_224, var_225, adj_224, adj_225);
            // adj: err = wp.length(delta_omega) * dt                                             <L 1610>
            wp::adj_sub(var_198, var_223, adj_198, adj_223, adj_224);
            wp::adj_mul(var_222, var_41, adj_222, adj_41, adj_223);
            wp::adj_dot(var_41, var_198, adj_41, adj_198, adj_222);
            // adj: delta_omega -= wp.dot(n, delta_omega) * n                                     <L 1609>
        }
        // adj: if rolling_friction > 0.0:                                                        <L 1608>
        wp::adj_mul(var_131, var_contact_rolling_friction, adj_131, adj_contact_rolling_friction, adj_220);
        // adj: rolling_friction = mu * contact_rolling_friction                                  <L 1607>
        wp::adj_select(var_199, var_168, var_201, adj_199, adj_168, adj_201, adj_219);
        wp::adj_select(var_199, var_196, var_216, adj_199, adj_196, adj_216, adj_218);
        wp::adj_select(var_199, var_195, var_215, adj_199, adj_195, adj_215, adj_217);
        if (var_199) {
            wp::adj_select(var_203, var_196, var_214, adj_203, adj_196, adj_214, adj_216);
            wp::adj_select(var_203, var_195, var_212, adj_203, adj_195, adj_212, adj_215);
            if (var_203) {
                wp::adj_add(var_196, var_213, adj_196, adj_213, adj_214);
                wp::adj_mul(var_41, var_210, adj_41, adj_210, adj_213);
                // adj: ang_delta_b += n * lambda_torsion                                         <L 1605>
                wp::adj_sub(var_195, var_211, adj_195, adj_211, adj_212);
                wp::adj_mul(var_41, var_210, adj_41, adj_210, adj_211);
                // adj: ang_delta_a -= n * lambda_torsion                                         <L 1604>
                wp::adj_clamp(var_206, var_208, var_209, adj_206, adj_208, adj_209, adj_210);
                wp::adj_mul(var_145, var_197, adj_145, adj_197, adj_209);
                wp::adj_mul(var_207, var_197, adj_207, adj_197, adj_208);
                wp::adj_neg(var_145, adj_145, adj_207);
                // adj: lambda_torsion = wp.clamp(lambda_torsion, -lambda_n * torsional_friction, lambda_n * torsional_friction)  <L 1602>
                adj_compute_contact_constraint_delta(var_201, var_77, var_98, var_78, var_99, var_79, var_100, var_204, var_204, var_205, var_41, var_140, var_dt, adj_201, adj_77, adj_98, adj_78, adj_99, adj_79, adj_100, adj_204, adj_204, adj_205, adj_41, adj_140, adj_dt, adj_206);
                wp::adj_neg(var_41, adj_41, adj_205);
                // adj: err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, lin, lin, -n, n, 1.0, dt  <L 1599>
                // adj: lambda_torsion = compute_contact_constraint_delta(                        <L 1598>
                wp::adj_vec_t(var_45, adj_45, adj_204);
                // adj: lin = wp.vec3(0.0)                                                        <L 1597>
            }
            wp::adj_abs(var_201, adj_201, adj_202);
            // adj: if wp.abs(err) > 0.0:                                                         <L 1596>
            wp::adj_mul(var_200, var_dt, adj_200, adj_dt, adj_201);
            wp::adj_dot(var_198, var_41, adj_198, adj_41, adj_200);
            // adj: err = wp.dot(delta_omega, n) * dt                                             <L 1594>
        }
        // adj: if torsional_friction > 0.0:                                                      <L 1593>
        wp::adj_sub(var_102, var_81, adj_102, adj_81, adj_198);
        // adj: delta_omega = omega_b - omega_a                                                   <L 1591>
        wp::adj_mul(var_131, var_contact_torsional_friction, adj_131, adj_contact_torsional_friction, adj_197);
        // adj: torsional_friction = mu * contact_torsional_friction                              <L 1589>
        wp::adj_select(var_151, var_150, var_186, adj_151, adj_150, adj_186, adj_196);
        wp::adj_select(var_151, var_149, var_185, adj_151, adj_149, adj_185, adj_195);
        wp::adj_select(var_151, var_148, var_184, adj_151, adj_148, adj_184, adj_194);
        wp::adj_select(var_151, var_147, var_183, adj_151, adj_147, adj_183, adj_193);
        wp::adj_select(var_151, var_138, var_167, adj_151, adj_138, adj_167, adj_192);
        wp::adj_select(var_151, var_137, var_166, adj_151, adj_137, adj_166, adj_191);
        wp::adj_select(var_151, var_135, var_164, adj_151, adj_135, adj_164, adj_190);
        wp::adj_select(var_151, var_133, var_162, adj_151, adj_133, adj_162, adj_189);
        wp::adj_select(var_151, var_35, var_155, adj_151, adj_35, adj_155, adj_188);
        wp::adj_select(var_151, var_32, var_153, adj_151, adj_32, adj_153, adj_187);
        if (var_151) {
            wp::adj_select(var_169, var_150, var_182, adj_169, adj_150, adj_182, adj_186);
            wp::adj_select(var_169, var_149, var_180, adj_169, adj_149, adj_180, adj_185);
            wp::adj_select(var_169, var_148, var_178, adj_169, adj_148, adj_178, adj_184);
            wp::adj_select(var_169, var_147, var_176, adj_169, adj_147, adj_176, adj_183);
            if (var_169) {
                wp::adj_add(var_150, var_181, adj_150, adj_181, adj_182);
                wp::adj_mul(var_167, var_174, adj_167, adj_174, adj_181);
                // adj: ang_delta_b += angular_b * lambda_fr                                      <L 1587>
                wp::adj_add(var_149, var_179, adj_149, adj_179, adj_180);
                wp::adj_mul(var_166, var_174, adj_166, adj_174, adj_179);
                // adj: ang_delta_a += angular_a * lambda_fr                                      <L 1586>
                wp::adj_add(var_148, var_177, adj_148, adj_177, adj_178);
                wp::adj_mul(var_160, var_174, adj_160, adj_174, adj_177);
                // adj: lin_delta_b += perp * lambda_fr                                           <L 1584>
                wp::adj_sub(var_147, var_175, adj_147, adj_175, adj_176);
                wp::adj_mul(var_160, var_174, adj_160, adj_174, adj_175);
                // adj: lin_delta_a -= perp * lambda_fr                                           <L 1583>
                wp::adj_max(var_171, var_173, adj_171, adj_173, adj_174);
                wp::adj_mul(var_172, var_131, adj_172, adj_131, adj_173);
                wp::adj_neg(var_145, adj_145, adj_172);
                // adj: lambda_fr = wp.max(lambda_fr, -lambda_n * mu)                             <L 1581>
                adj_compute_contact_constraint_delta(var_168, var_77, var_98, var_78, var_99, var_79, var_100, var_170, var_160, var_166, var_167, var_140, var_dt, adj_168, adj_77, adj_98, adj_78, adj_99, adj_79, adj_100, adj_170, adj_160, adj_166, adj_167, adj_140, adj_dt, adj_171);
                wp::adj_neg(var_160, adj_160, adj_170);
                // adj: err, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, -perp, perp, angular_a, angular_b, 1.0, dt  <L 1577>
                // adj: lambda_fr = compute_contact_constraint_delta(                             <L 1576>
            }
            // adj: if err > 0.0:                                                                 <L 1575>
            wp::adj_length(var_159, var_168, adj_159, adj_168);
            // adj: err = wp.length(friction_delta)                                               <L 1573>
            wp::adj_cross(var_164, var_160, adj_164, adj_160, adj_167);
            // adj: angular_b = wp.cross(r_b, perp)                                               <L 1571>
            wp::adj_neg(var_165, adj_165, adj_166);
            wp::adj_cross(var_162, var_160, adj_162, adj_160, adj_165);
            // adj: angular_a = -wp.cross(r_a, perp)                                              <L 1570>
            wp::adj_sub(var_155, var_163, adj_155, adj_163, adj_164);
            wp::adj_transform_point(var_98, var_101, adj_98, adj_101, adj_163);
            // adj: r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                <L 1568>
            wp::adj_sub(var_153, var_161, adj_153, adj_161, adj_162);
            wp::adj_transform_point(var_77, var_80, adj_77, adj_80, adj_161);
            // adj: r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                <L 1567>
            wp::adj_normalize(var_159, var_160, adj_159, adj_160);
            // adj: perp = wp.normalize(friction_delta)                                           <L 1565>
            wp::adj_sub(var_156, var_158, adj_156, adj_158, adj_159);
            wp::adj_mul(var_157, var_41, adj_157, adj_41, adj_158);
            wp::adj_dot(var_41, var_156, adj_41, adj_156, adj_157);
            // adj: friction_delta = delta - wp.dot(n, delta) * n                                 <L 1563>
            wp::adj_sub(var_155, var_153, adj_155, adj_153, adj_156);
            // adj: delta = bx_b - bx_a                                                           <L 1562>
            wp::adj_add(var_35, var_154, adj_35, adj_154, adj_155);
            wp::adj_transform_vector(var_98, var_60, adj_98, adj_60, adj_154);
            // adj: bx_b += wp.transform_vector(X_wb_b, offset_b)                                 <L 1559>
            wp::adj_add(var_32, var_152, adj_32, adj_152, adj_153);
            wp::adj_transform_vector(var_77, var_57, adj_77, adj_57, adj_152);
            // adj: bx_a += wp.transform_vector(X_wb_a, offset_a)                                 <L 1558>
        }
        // adj: if mu > 0.0:                                                                      <L 1555>
        wp::adj_mul(var_138, var_145, adj_138, adj_145, adj_150);
        // adj: ang_delta_b = angular_b * lambda_n                                                <L 1552>
        wp::adj_mul(var_137, var_145, adj_137, adj_145, adj_149);
        // adj: ang_delta_a = angular_a * lambda_n                                                <L 1551>
        wp::adj_mul(var_41, var_145, adj_41, adj_145, adj_148);
        // adj: lin_delta_b = n * lambda_n                                                        <L 1550>
        wp::adj_mul(var_146, var_145, adj_146, adj_145, adj_147);
        wp::adj_neg(var_41, adj_41, adj_146);
        // adj: lin_delta_a = -n * lambda_n                                                       <L 1549>
        adj_compute_contact_constraint_delta(var_44, var_77, var_98, var_78, var_99, var_79, var_100, var_144, var_41, var_137, var_138, var_relaxation, var_dt, adj_44, adj_77, adj_98, adj_78, adj_99, adj_79, adj_100, adj_144, adj_41, adj_137, adj_138, adj_relaxation, adj_dt, adj_145);
        wp::adj_neg(var_41, adj_41, adj_144);
        // adj: d, X_wb_a, X_wb_b, m_inv_a, m_inv_b, I_inv_a, I_inv_b, -n, n, angular_a, angular_b, relaxation, dt  <L 1546>
        // adj: lambda_n = compute_contact_constraint_delta(                                      <L 1545>
        if (var_contact_inv_weight) {
            if (var_142) {
                wp::adj_atomic_add(var_contact_inv_weight, var_11, var_140, adj_contact_inv_weight, adj_11, adj_140, adj_143);
                // adj: wp.atomic_add(contact_inv_weight, body_b, 1.0)                            <L 1543>
            }
            // adj: if body_b >= 0:                                                               <L 1542>
            if (var_139) {
                wp::adj_atomic_add(var_contact_inv_weight, var_8, var_140, adj_contact_inv_weight, adj_8, adj_140, adj_141);
                // adj: wp.atomic_add(contact_inv_weight, body_a, 1.0)                            <L 1541>
            }
            // adj: if body_a >= 0:                                                               <L 1540>
        }
        // adj: if contact_inv_weight:                                                            <L 1539>
        wp::adj_cross(var_135, var_41, adj_135, adj_41, adj_138);
        // adj: angular_b = wp.cross(r_b, n)                                                      <L 1537>
        wp::adj_neg(var_136, adj_136, adj_137);
        wp::adj_cross(var_133, var_41, adj_133, adj_41, adj_136);
        // adj: angular_a = -wp.cross(r_a, n)                                                     <L 1536>
        wp::adj_sub(var_35, var_134, adj_35, adj_134, adj_135);
        wp::adj_transform_point(var_98, var_101, adj_98, adj_101, adj_134);
        // adj: r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                    <L 1534>
        wp::adj_sub(var_32, var_132, adj_32, adj_132, adj_133);
        wp::adj_transform_point(var_77, var_80, adj_77, adj_80, adj_132);
        // adj: r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                    <L 1533>
        wp::adj_select(var_128, var_127, var_130, adj_128, adj_127, adj_130, adj_131);
        if (var_128) {
            wp::adj_div(var_127, var_129, var_130, adj_127, adj_129, adj_130);
            wp::adj_float(var_126, adj_126, adj_129);
            // adj: mu /= float(mat_nonzero)                                                      <L 1531>
        }
        // adj: if mat_nonzero > 0:                                                               <L 1530>
        wp::adj_select(var_119, var_118, var_125, adj_119, adj_118, adj_125, adj_127);
        wp::adj_select(var_119, var_117, var_120, adj_119, adj_117, adj_120, adj_126);
        if (var_119) {
            wp::adj_add(var_118, var_124, adj_118, adj_123, adj_125);
            wp::adj_load(var_123, adj_123, adj_124);
            wp::adj_address(var_122, var_108, adj_121, adj_108, adj_123);
            wp::adj_load(var_121, adj_121, adj_122);
            adj_shape_materials.mu = adj_121;
            // adj: mu += shape_materials.mu[shape_b]                                             <L 1529>
            wp::adj_add(var_117, var_110, adj_117, adj_110, adj_120);
            // adj: mat_nonzero += 1                                                              <L 1528>
        }
        // adj: if shape_b >= 0:                                                                  <L 1527>
        wp::adj_select(var_109, var_45, var_116, adj_109, adj_45, adj_116, adj_118);
        wp::adj_select(var_109, var_1, var_111, adj_109, adj_1, adj_111, adj_117);
        if (var_109) {
            wp::adj_add(var_45, var_115, adj_45, adj_114, adj_116);
            wp::adj_load(var_114, adj_114, adj_115);
            wp::adj_address(var_113, var_105, adj_112, adj_105, adj_114);
            wp::adj_load(var_112, adj_112, adj_113);
            adj_shape_materials.mu = adj_112;
            // adj: mu += shape_materials.mu[shape_a]                                             <L 1526>
            wp::adj_add(var_1, var_110, adj_1, adj_110, adj_111);
            // adj: mat_nonzero += 1                                                              <L 1525>
        }
        // adj: if shape_a >= 0:                                                                  <L 1524>
        wp::adj_copy(var_107, adj_106, adj_108);
        wp::adj_load(var_106, adj_106, adj_107);
        wp::adj_address(var_contact_shape1, var_0, adj_contact_shape1, adj_0, adj_106);
        // adj: shape_b = contact_shape1[tid]                                                     <L 1523>
        wp::adj_copy(var_104, adj_103, adj_105);
        wp::adj_load(var_103, adj_103, adj_104);
        wp::adj_address(var_contact_shape0, var_0, adj_contact_shape0, adj_0, adj_103);
        // adj: shape_a = contact_shape0[tid]                                                     <L 1522>
        // adj: mu = 0.0                                                                          <L 1521>
        // adj: mat_nonzero = 0                                                                   <L 1520>
        wp::adj_select(var_82, var_54, var_97, adj_82, adj_54, adj_97, adj_102);
        wp::adj_select(var_82, var_50, var_88, adj_82, adj_50, adj_88, adj_101);
        wp::adj_select(var_82, var_48, var_94, adj_82, adj_48, adj_94, adj_100);
        wp::adj_select(var_82, var_45, var_91, adj_82, adj_45, adj_91, adj_99);
        wp::adj_select(var_82, var_52, var_85, adj_82, adj_52, adj_85, adj_98);
        if (var_82) {
            wp::adj_spatial_top(var_96, adj_95, adj_97);
            wp::adj_load(var_95, adj_95, adj_96);
            wp::adj_address(var_body_qd, var_11, adj_body_qd, adj_11, adj_95);
            // adj: omega_b = wp.spatial_top(body_qd[body_b])                                     <L 1517>
            wp::adj_copy(var_93, adj_92, adj_94);
            wp::adj_load(var_92, adj_92, adj_93);
            wp::adj_address(var_body_I_inv, var_11, adj_body_I_inv, adj_11, adj_92);
            // adj: I_inv_b = body_I_inv[body_b]                                                  <L 1516>
            wp::adj_copy(var_90, adj_89, adj_91);
            wp::adj_load(var_89, adj_89, adj_90);
            wp::adj_address(var_body_m_inv, var_11, adj_body_m_inv, adj_11, adj_89);
            // adj: m_inv_b = body_m_inv[body_b]                                                  <L 1515>
            wp::adj_copy(var_87, adj_86, adj_88);
            wp::adj_load(var_86, adj_86, adj_87);
            wp::adj_address(var_body_com, var_11, adj_body_com, adj_11, adj_86);
            // adj: com_b = body_com[body_b]                                                      <L 1514>
            wp::adj_copy(var_84, adj_83, adj_85);
            wp::adj_load(var_83, adj_83, adj_84);
            wp::adj_address(var_body_q, var_11, adj_body_q, adj_11, adj_83);
            // adj: X_wb_b = body_q[body_b]                                                       <L 1513>
        }
        // adj: if body_b >= 0:                                                                   <L 1512>
        wp::adj_select(var_61, var_53, var_76, adj_61, adj_53, adj_76, adj_81);
        wp::adj_select(var_61, var_49, var_67, adj_61, adj_49, adj_67, adj_80);
        wp::adj_select(var_61, var_47, var_73, adj_61, adj_47, adj_73, adj_79);
        wp::adj_select(var_61, var_45, var_70, adj_61, adj_45, adj_70, adj_78);
        wp::adj_select(var_61, var_51, var_64, adj_61, adj_51, adj_64, adj_77);
        if (var_61) {
            wp::adj_spatial_top(var_75, adj_74, adj_76);
            wp::adj_load(var_74, adj_74, adj_75);
            wp::adj_address(var_body_qd, var_8, adj_body_qd, adj_8, adj_74);
            // adj: omega_a = wp.spatial_top(body_qd[body_a])                                     <L 1510>
            wp::adj_copy(var_72, adj_71, adj_73);
            wp::adj_load(var_71, adj_71, adj_72);
            wp::adj_address(var_body_I_inv, var_8, adj_body_I_inv, adj_8, adj_71);
            // adj: I_inv_a = body_I_inv[body_a]                                                  <L 1509>
            wp::adj_copy(var_69, adj_68, adj_70);
            wp::adj_load(var_68, adj_68, adj_69);
            wp::adj_address(var_body_m_inv, var_8, adj_body_m_inv, adj_8, adj_68);
            // adj: m_inv_a = body_m_inv[body_a]                                                  <L 1508>
            wp::adj_copy(var_66, adj_65, adj_67);
            wp::adj_load(var_65, adj_65, adj_66);
            wp::adj_address(var_body_com, var_8, adj_body_com, adj_8, adj_65);
            // adj: com_a = body_com[body_a]                                                      <L 1507>
            wp::adj_copy(var_63, adj_62, adj_64);
            wp::adj_load(var_62, adj_62, adj_63);
            wp::adj_address(var_body_q, var_8, adj_body_q, adj_8, adj_62);
            // adj: X_wb_a = body_q[body_a]                                                       <L 1506>
        }
        // adj: if body_a >= 0:                                                                   <L 1505>
        wp::adj_copy(var_59, adj_58, adj_60);
        wp::adj_load(var_58, adj_58, adj_59);
        wp::adj_address(var_contact_offset1, var_0, adj_contact_offset1, adj_0, adj_58);
        // adj: offset_b = contact_offset1[tid]                                                   <L 1503>
        wp::adj_copy(var_56, adj_55, adj_57);
        wp::adj_load(var_55, adj_55, adj_56);
        wp::adj_address(var_contact_offset0, var_0, adj_contact_offset0, adj_0, adj_55);
        // adj: offset_a = contact_offset0[tid]                                                   <L 1502>
        wp::adj_vec_t(var_45, adj_45, adj_54);
        // adj: omega_b = wp.vec3(0.0)                                                            <L 1500>
        wp::adj_vec_t(var_45, adj_45, adj_53);
        // adj: omega_a = wp.vec3(0.0)                                                            <L 1499>
        // adj: X_wb_b = wp.transform_identity()                                                  <L 1497>
        // adj: X_wb_a = wp.transform_identity()                                                  <L 1496>
        wp::adj_vec_t(var_45, adj_45, adj_50);
        // adj: com_b = wp.vec3(0.0)                                                              <L 1494>
        wp::adj_vec_t(var_45, adj_45, adj_49);
        // adj: com_a = wp.vec3(0.0)                                                              <L 1493>
        wp::adj_mat_t(var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_48);
        // adj: I_inv_b = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                   <L 1491>
        wp::adj_mat_t(var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, var_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_45, adj_47);
        // adj: I_inv_a = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                   <L 1490>
        // adj: m_inv_b = 0.0                                                                     <L 1489>
        // adj: m_inv_a = 0.0                                                                     <L 1488>
        if (var_46) {
            label3:;
            // adj: return                                                                        <L 1486>
        }
        // adj: if d >= 0.0:                                                                      <L 1485>
        wp::adj_array_store(var_active_contact_distance, var_0, var_44, adj_active_contact_distance, adj_0, adj_44);
        // adj: active_contact_distance[tid] = d                                                  <L 1483>
        wp::adj_sub(var_43, var_38, adj_43, adj_38, adj_44);
        wp::adj_dot(var_41, var_42, adj_41, adj_42, adj_43);
        wp::adj_sub(var_35, var_32, adj_35, adj_32, adj_42);
        // adj: d = wp.dot(n, bx_b - bx_a) - thickness                                            <L 1481>
        wp::adj_neg(var_40, adj_39, adj_41);
        wp::adj_load(var_39, adj_39, adj_40);
        wp::adj_address(var_contact_normal, var_0, adj_contact_normal, adj_0, adj_39);
        // adj: n = -contact_normal[tid]                                                          <L 1480>
        wp::adj_copy(var_37, adj_36, adj_38);
        wp::adj_load(var_36, adj_36, adj_37);
        wp::adj_address(var_contact_thickness, var_0, adj_contact_thickness, adj_0, adj_36);
        // adj: thickness = contact_thickness[tid]                                                <L 1479>
        wp::adj_array_store(var_active_contact_point1, var_0, var_35, adj_active_contact_point1, adj_0, adj_35);
        // adj: active_contact_point1[tid] = bx_b                                                 <L 1477>
        wp::adj_array_store(var_active_contact_point0, var_0, var_32, adj_active_contact_point0, adj_0, adj_32);
        // adj: active_contact_point0[tid] = bx_a                                                 <L 1476>
        wp::adj_transform_point(var_29, var_34, adj_29, adj_33, adj_35);
        wp::adj_load(var_33, adj_33, adj_34);
        wp::adj_address(var_contact_point1, var_0, adj_contact_point1, adj_0, adj_33);
        // adj: bx_b = wp.transform_point(X_wb_b, contact_point1[tid])                            <L 1475>
        wp::adj_transform_point(var_24, var_31, adj_24, adj_30, adj_32);
        wp::adj_load(var_30, adj_30, adj_31);
        wp::adj_address(var_contact_point0, var_0, adj_contact_point0, adj_0, adj_30);
        // adj: bx_a = wp.transform_point(X_wb_a, contact_point0[tid])                            <L 1474>
        wp::adj_select(var_25, var_19, var_28, adj_25, adj_19, adj_28, adj_29);
        if (var_25) {
            wp::adj_copy(var_27, adj_26, adj_28);
            wp::adj_load(var_26, adj_26, adj_27);
            wp::adj_address(var_body_q, var_11, adj_body_q, adj_11, adj_26);
            // adj: X_wb_b = body_q[body_b]                                                       <L 1471>
        }
        // adj: if body_b >= 0:                                                                   <L 1470>
        wp::adj_select(var_20, var_18, var_23, adj_20, adj_18, adj_23, adj_24);
        if (var_20) {
            wp::adj_copy(var_22, adj_21, adj_23);
            wp::adj_load(var_21, adj_21, adj_22);
            wp::adj_address(var_body_q, var_8, adj_body_q, adj_8, adj_21);
            // adj: X_wb_a = body_q[body_a]                                                       <L 1469>
        }
        // adj: if body_a >= 0:                                                                   <L 1468>
        // adj: X_wb_b = wp.transform_identity()                                                  <L 1467>
        // adj: X_wb_a = wp.transform_identity()                                                  <L 1466>
        if (var_15) {
            label2:;
            // adj: return                                                                        <L 1463>
        }
        wp::adj_load(var_14, adj_14, adj_17);
        wp::adj_load(var_13, adj_13, adj_16);
        wp::adj_address(var_contact_shape1, var_0, adj_contact_shape1, adj_0, adj_14);
        wp::adj_address(var_contact_shape0, var_0, adj_contact_shape0, adj_0, adj_13);
        // adj: if contact_shape0[tid] == contact_shape1[tid]:                                    <L 1462>
        if (var_12) {
            label1:;
            // adj: return                                                                        <L 1461>
        }
        // adj: if body_a == body_b:                                                              <L 1460>
        wp::adj_copy(var_10, adj_9, adj_11);
        wp::adj_load(var_9, adj_9, adj_10);
        wp::adj_address(var_contact_body1, var_0, adj_contact_body1, adj_0, adj_9);
        // adj: body_b = contact_body1[tid]                                                       <L 1458>
        wp::adj_copy(var_7, adj_6, adj_8);
        wp::adj_load(var_6, adj_6, adj_7);
        wp::adj_address(var_contact_body0, var_0, adj_contact_body0, adj_0, adj_6);
        // adj: body_a = contact_body0[tid]                                                       <L 1457>
        if (var_5) {
            label0:;
            // adj: return                                                                        <L 1455>
        }
        // adj: if tid >= count:                                                                  <L 1454>
        wp::adj_copy(var_3, adj_2, adj_4);
        wp::adj_load(var_2, adj_2, adj_3);
        wp::adj_address(var_contact_count, var_1, adj_contact_count, adj_1, adj_2);
        // adj: count = contact_count[0]                                                          <L 1453>
        // adj: tid = wp.tid()                                                                    <L 1451>
        // adj: def solve_body_contact_positions(                                                 <L 1422>
        continue;
    }
}



extern "C" __global__ void update_body_velocities_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_poses,
    wp::array_t<wp::transform_t<wp::float32>> var_poses_prev,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::transform_t<wp::float32>* var_1;
        wp::transform_t<wp::float32> var_2;
        wp::transform_t<wp::float32> var_3;
        wp::transform_t<wp::float32>* var_4;
        wp::transform_t<wp::float32> var_5;
        wp::transform_t<wp::float32> var_6;
        wp::vec_t<3,wp::float32> var_7;
        wp::vec_t<3,wp::float32> var_8;
        wp::quat_t<wp::float32> var_9;
        wp::quat_t<wp::float32> var_10;
        wp::vec_t<3,wp::float32>* var_11;
        wp::vec_t<3,wp::float32> var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32>* var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::vec_t<3,wp::float32> var_18;
        wp::vec_t<3,wp::float32> var_19;
        wp::vec_t<3,wp::float32> var_20;
        wp::quat_t<wp::float32> var_21;
        wp::quat_t<wp::float32> var_22;
        const wp::float32 var_23 = 2.0;
        wp::float32 var_24;
        const wp::int32 var_25 = 0;
        wp::float32 var_26;
        const wp::int32 var_27 = 1;
        wp::float32 var_28;
        const wp::int32 var_29 = 2;
        wp::float32 var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32> var_32;
        const wp::int32 var_33 = 3;
        wp::float32 var_34;
        const wp::float32 var_35 = 0.0;
        bool var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::vec_t<6,wp::float32> var_39;
        //---------
        // forward
        // def update_body_velocities(                                                            <L 1630>
        // tid = wp.tid()                                                                         <L 1637>
        var_0 = builtin_tid1d();
        // pose = poses[tid]                                                                      <L 1639>
        var_1 = wp::address(var_poses, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // pose_prev = poses_prev[tid]                                                            <L 1640>
        var_4 = wp::address(var_poses_prev, var_0);
        var_5 = wp::load(var_4);
        var_6 = wp::copy(var_5);
        // x = wp.transform_get_translation(pose)                                                 <L 1642>
        var_7 = wp::transform_get_translation(var_3);
        // x_prev = wp.transform_get_translation(pose_prev)                                       <L 1643>
        var_8 = wp::transform_get_translation(var_6);
        // q = wp.transform_get_rotation(pose)                                                    <L 1645>
        var_9 = wp::transform_get_rotation(var_3);
        // q_prev = wp.transform_get_rotation(pose_prev)                                          <L 1646>
        var_10 = wp::transform_get_rotation(var_6);
        // x_com = x + wp.quat_rotate(q, body_com[tid])                                           <L 1650>
        var_11 = wp::address(var_body_com, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::quat_rotate(var_9, var_12);
        var_14 = wp::add(var_7, var_13);
        // x_com_prev = x_prev + wp.quat_rotate(q_prev, body_com[tid])                            <L 1651>
        var_15 = wp::address(var_body_com, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::quat_rotate(var_10, var_16);
        var_18 = wp::add(var_8, var_17);
        // v = (x_com - x_com_prev) / dt                                                          <L 1654>
        var_19 = wp::sub(var_14, var_18);
        var_20 = wp::div(var_19, var_dt);
        // dq = q * wp.quat_inverse(q_prev)                                                       <L 1655>
        var_21 = wp::quat_inverse(var_10);
        var_22 = wp::mul(var_9, var_21);
        // omega = 2.0 / dt * wp.vec3(dq[0], dq[1], dq[2])                                        <L 1657>
        var_24 = wp::div(var_23, var_dt);
        var_26 = wp::extract(var_22, var_25);
        var_28 = wp::extract(var_22, var_27);
        var_30 = wp::extract(var_22, var_29);
        var_31 = wp::vec_t<3,wp::float32>(var_26, var_28, var_30);
        var_32 = wp::mul(var_24, var_31);
        // if dq[3] < 0.0:                                                                        <L 1658>
        var_34 = wp::extract(var_22, var_33);
        var_36 = (var_34 < var_35);
        if (var_36) {
            // omega = -omega                                                                     <L 1659>
            var_37 = wp::neg(var_32);
        }
        var_38 = wp::select(var_36, var_32, var_37);
        // qd_out[tid] = wp.spatial_vector(omega, v)                                              <L 1661>
        var_39 = wp::vec_t<6,wp::float32>(var_38, var_20);
        wp::array_store(var_qd_out, var_0, var_39);
    }
}

extern "C" __global__ void update_body_velocities_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_poses,
    wp::array_t<wp::transform_t<wp::float32>> var_poses_prev,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> var_qd_out,
    wp::array_t<wp::transform_t<wp::float32>> adj_poses,
    wp::array_t<wp::transform_t<wp::float32>> adj_poses_prev,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::float32 adj_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_qd_out)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        wp::transform_t<wp::float32>* var_1;
        wp::transform_t<wp::float32> var_2;
        wp::transform_t<wp::float32> var_3;
        wp::transform_t<wp::float32>* var_4;
        wp::transform_t<wp::float32> var_5;
        wp::transform_t<wp::float32> var_6;
        wp::vec_t<3,wp::float32> var_7;
        wp::vec_t<3,wp::float32> var_8;
        wp::quat_t<wp::float32> var_9;
        wp::quat_t<wp::float32> var_10;
        wp::vec_t<3,wp::float32>* var_11;
        wp::vec_t<3,wp::float32> var_12;
        wp::vec_t<3,wp::float32> var_13;
        wp::vec_t<3,wp::float32> var_14;
        wp::vec_t<3,wp::float32>* var_15;
        wp::vec_t<3,wp::float32> var_16;
        wp::vec_t<3,wp::float32> var_17;
        wp::vec_t<3,wp::float32> var_18;
        wp::vec_t<3,wp::float32> var_19;
        wp::vec_t<3,wp::float32> var_20;
        wp::quat_t<wp::float32> var_21;
        wp::quat_t<wp::float32> var_22;
        const wp::float32 var_23 = 2.0;
        wp::float32 var_24;
        const wp::int32 var_25 = 0;
        wp::float32 var_26;
        const wp::int32 var_27 = 1;
        wp::float32 var_28;
        const wp::int32 var_29 = 2;
        wp::float32 var_30;
        wp::vec_t<3,wp::float32> var_31;
        wp::vec_t<3,wp::float32> var_32;
        const wp::int32 var_33 = 3;
        wp::float32 var_34;
        const wp::float32 var_35 = 0.0;
        bool var_36;
        wp::vec_t<3,wp::float32> var_37;
        wp::vec_t<3,wp::float32> var_38;
        wp::vec_t<6,wp::float32> var_39;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::transform_t<wp::float32> adj_1 = {};
        wp::transform_t<wp::float32> adj_2 = {};
        wp::transform_t<wp::float32> adj_3 = {};
        wp::transform_t<wp::float32> adj_4 = {};
        wp::transform_t<wp::float32> adj_5 = {};
        wp::transform_t<wp::float32> adj_6 = {};
        wp::vec_t<3,wp::float32> adj_7 = {};
        wp::vec_t<3,wp::float32> adj_8 = {};
        wp::quat_t<wp::float32> adj_9 = {};
        wp::quat_t<wp::float32> adj_10 = {};
        wp::vec_t<3,wp::float32> adj_11 = {};
        wp::vec_t<3,wp::float32> adj_12 = {};
        wp::vec_t<3,wp::float32> adj_13 = {};
        wp::vec_t<3,wp::float32> adj_14 = {};
        wp::vec_t<3,wp::float32> adj_15 = {};
        wp::vec_t<3,wp::float32> adj_16 = {};
        wp::vec_t<3,wp::float32> adj_17 = {};
        wp::vec_t<3,wp::float32> adj_18 = {};
        wp::vec_t<3,wp::float32> adj_19 = {};
        wp::vec_t<3,wp::float32> adj_20 = {};
        wp::quat_t<wp::float32> adj_21 = {};
        wp::quat_t<wp::float32> adj_22 = {};
        wp::float32 adj_23 = {};
        wp::float32 adj_24 = {};
        wp::int32 adj_25 = {};
        wp::float32 adj_26 = {};
        wp::int32 adj_27 = {};
        wp::float32 adj_28 = {};
        wp::int32 adj_29 = {};
        wp::float32 adj_30 = {};
        wp::vec_t<3,wp::float32> adj_31 = {};
        wp::vec_t<3,wp::float32> adj_32 = {};
        wp::int32 adj_33 = {};
        wp::float32 adj_34 = {};
        wp::float32 adj_35 = {};
        bool adj_36 = {};
        wp::vec_t<3,wp::float32> adj_37 = {};
        wp::vec_t<3,wp::float32> adj_38 = {};
        wp::vec_t<6,wp::float32> adj_39 = {};
        //---------
        // forward
        // def update_body_velocities(                                                            <L 1630>
        // tid = wp.tid()                                                                         <L 1637>
        var_0 = builtin_tid1d();
        // pose = poses[tid]                                                                      <L 1639>
        var_1 = wp::address(var_poses, var_0);
        var_2 = wp::load(var_1);
        var_3 = wp::copy(var_2);
        // pose_prev = poses_prev[tid]                                                            <L 1640>
        var_4 = wp::address(var_poses_prev, var_0);
        var_5 = wp::load(var_4);
        var_6 = wp::copy(var_5);
        // x = wp.transform_get_translation(pose)                                                 <L 1642>
        var_7 = wp::transform_get_translation(var_3);
        // x_prev = wp.transform_get_translation(pose_prev)                                       <L 1643>
        var_8 = wp::transform_get_translation(var_6);
        // q = wp.transform_get_rotation(pose)                                                    <L 1645>
        var_9 = wp::transform_get_rotation(var_3);
        // q_prev = wp.transform_get_rotation(pose_prev)                                          <L 1646>
        var_10 = wp::transform_get_rotation(var_6);
        // x_com = x + wp.quat_rotate(q, body_com[tid])                                           <L 1650>
        var_11 = wp::address(var_body_com, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::quat_rotate(var_9, var_12);
        var_14 = wp::add(var_7, var_13);
        // x_com_prev = x_prev + wp.quat_rotate(q_prev, body_com[tid])                            <L 1651>
        var_15 = wp::address(var_body_com, var_0);
        var_16 = wp::load(var_15);
        var_17 = wp::quat_rotate(var_10, var_16);
        var_18 = wp::add(var_8, var_17);
        // v = (x_com - x_com_prev) / dt                                                          <L 1654>
        var_19 = wp::sub(var_14, var_18);
        var_20 = wp::div(var_19, var_dt);
        // dq = q * wp.quat_inverse(q_prev)                                                       <L 1655>
        var_21 = wp::quat_inverse(var_10);
        var_22 = wp::mul(var_9, var_21);
        // omega = 2.0 / dt * wp.vec3(dq[0], dq[1], dq[2])                                        <L 1657>
        var_24 = wp::div(var_23, var_dt);
        var_26 = wp::extract(var_22, var_25);
        var_28 = wp::extract(var_22, var_27);
        var_30 = wp::extract(var_22, var_29);
        var_31 = wp::vec_t<3,wp::float32>(var_26, var_28, var_30);
        var_32 = wp::mul(var_24, var_31);
        // if dq[3] < 0.0:                                                                        <L 1658>
        var_34 = wp::extract(var_22, var_33);
        var_36 = (var_34 < var_35);
        if (var_36) {
            // omega = -omega                                                                     <L 1659>
            var_37 = wp::neg(var_32);
        }
        var_38 = wp::select(var_36, var_32, var_37);
        // qd_out[tid] = wp.spatial_vector(omega, v)                                              <L 1661>
        var_39 = wp::vec_t<6,wp::float32>(var_38, var_20);
        // wp::array_store(var_qd_out, var_0, var_39);
        //---------
        // reverse
        wp::adj_array_store(var_qd_out, var_0, var_39, adj_qd_out, adj_0, adj_39);
        wp::adj_vec_t(var_38, var_20, adj_38, adj_20, adj_39);
        // adj: qd_out[tid] = wp.spatial_vector(omega, v)                                         <L 1661>
        wp::adj_select(var_36, var_32, var_37, adj_36, adj_32, adj_37, adj_38);
        if (var_36) {
            wp::adj_neg(var_32, adj_32, adj_37);
            // adj: omega = -omega                                                                <L 1659>
        }
        wp::adj_extract(var_22, var_33, adj_22, adj_33, adj_34);
        // adj: if dq[3] < 0.0:                                                                   <L 1658>
        wp::adj_mul(var_24, var_31, adj_24, adj_31, adj_32);
        wp::adj_vec_t(var_26, var_28, var_30, adj_26, adj_28, adj_30, adj_31);
        wp::adj_extract(var_22, var_29, adj_22, adj_29, adj_30);
        wp::adj_extract(var_22, var_27, adj_22, adj_27, adj_28);
        wp::adj_extract(var_22, var_25, adj_22, adj_25, adj_26);
        wp::adj_div(var_23, var_dt, var_24, adj_23, adj_dt, adj_24);
        // adj: omega = 2.0 / dt * wp.vec3(dq[0], dq[1], dq[2])                                   <L 1657>
        wp::adj_mul(var_9, var_21, adj_9, adj_21, adj_22);
        wp::adj_quat_inverse(var_10, adj_10, adj_21);
        // adj: dq = q * wp.quat_inverse(q_prev)                                                  <L 1655>
        wp::adj_div(var_19, var_dt, adj_19, adj_dt, adj_20);
        wp::adj_sub(var_14, var_18, adj_14, adj_18, adj_19);
        // adj: v = (x_com - x_com_prev) / dt                                                     <L 1654>
        wp::adj_add(var_8, var_17, adj_8, adj_17, adj_18);
        wp::adj_quat_rotate(var_10, var_16, adj_10, adj_15, adj_17);
        wp::adj_load(var_15, adj_15, adj_16);
        wp::adj_address(var_body_com, var_0, adj_body_com, adj_0, adj_15);
        // adj: x_com_prev = x_prev + wp.quat_rotate(q_prev, body_com[tid])                       <L 1651>
        wp::adj_add(var_7, var_13, adj_7, adj_13, adj_14);
        wp::adj_quat_rotate(var_9, var_12, adj_9, adj_11, adj_13);
        wp::adj_load(var_11, adj_11, adj_12);
        wp::adj_address(var_body_com, var_0, adj_body_com, adj_0, adj_11);
        // adj: x_com = x + wp.quat_rotate(q, body_com[tid])                                      <L 1650>
        wp::adj_transform_get_rotation(var_6, adj_6, adj_10);
        // adj: q_prev = wp.transform_get_rotation(pose_prev)                                     <L 1646>
        wp::adj_transform_get_rotation(var_3, adj_3, adj_9);
        // adj: q = wp.transform_get_rotation(pose)                                               <L 1645>
        wp::adj_transform_get_translation(var_6, adj_6, adj_8);
        // adj: x_prev = wp.transform_get_translation(pose_prev)                                  <L 1643>
        wp::adj_transform_get_translation(var_3, adj_3, adj_7);
        // adj: x = wp.transform_get_translation(pose)                                            <L 1642>
        wp::adj_copy(var_5, adj_4, adj_6);
        wp::adj_load(var_4, adj_4, adj_5);
        wp::adj_address(var_poses_prev, var_0, adj_poses_prev, adj_0, adj_4);
        // adj: pose_prev = poses_prev[tid]                                                       <L 1640>
        wp::adj_copy(var_2, adj_1, adj_3);
        wp::adj_load(var_1, adj_1, adj_2);
        wp::adj_address(var_poses, var_0, adj_poses, adj_0, adj_1);
        // adj: pose = poses[tid]                                                                 <L 1639>
        // adj: tid = wp.tid()                                                                    <L 1637>
        // adj: def update_body_velocities(                                                       <L 1630>
        continue;
    }
}



extern "C" __global__ void apply_rigid_restitution_cuda_kernel_forward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q_prev,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd_prev,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I_inv,
    wp::array_t<wp::int32> var_contact_count,
    wp::array_t<wp::int32> var_contact_body0,
    wp::array_t<wp::int32> var_contact_body1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_normal,
    wp::array_t<wp::int32> var_contact_shape0,
    wp::array_t<wp::int32> var_contact_shape1,
    ModelShapeMaterials var_shape_materials,
    wp::array_t<wp::float32> var_active_contact_distance,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point1,
    wp::array_t<wp::float32> var_contact_inv_weight,
    wp::vec_t<3,wp::float32> var_gravity,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::int32* var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        bool var_5;
        wp::float32* var_6;
        wp::float32 var_7;
        wp::float32 var_8;
        const wp::float32 var_9 = 0.0;
        bool var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        bool var_17;
        const wp::int32 var_18 = 1;
        wp::int32 var_19;
        wp::array_t<wp::float32>* var_20;
        wp::array_t<wp::float32> var_21;
        wp::float32* var_22;
        wp::float32 var_23;
        wp::float32 var_24;
        wp::int32 var_25;
        wp::float32 var_26;
        bool var_27;
        wp::int32 var_28;
        wp::array_t<wp::float32>* var_29;
        wp::array_t<wp::float32> var_30;
        wp::float32* var_31;
        wp::float32 var_32;
        wp::float32 var_33;
        wp::int32 var_34;
        wp::float32 var_35;
        bool var_36;
        wp::float32 var_37;
        wp::float32 var_38;
        wp::float32 var_39;
        wp::int32* var_40;
        wp::int32 var_41;
        wp::int32 var_42;
        wp::int32* var_43;
        wp::int32 var_44;
        wp::int32 var_45;
        wp::mat_t<3,3,wp::float32> var_46;
        wp::mat_t<3,3,wp::float32> var_47;
        wp::transform_t<wp::float32> var_48;
        wp::transform_t<wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        bool var_56;
        wp::transform_t<wp::float32>* var_57;
        wp::transform_t<wp::float32> var_58;
        wp::transform_t<wp::float32> var_59;
        wp::transform_t<wp::float32>* var_60;
        wp::transform_t<wp::float32> var_61;
        wp::transform_t<wp::float32> var_62;
        wp::float32* var_63;
        wp::float32 var_64;
        wp::float32 var_65;
        wp::mat_t<3,3,wp::float32>* var_66;
        wp::mat_t<3,3,wp::float32> var_67;
        wp::mat_t<3,3,wp::float32> var_68;
        wp::vec_t<3,wp::float32>* var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::float32 var_72;
        wp::mat_t<3,3,wp::float32> var_73;
        wp::transform_t<wp::float32> var_74;
        wp::vec_t<3,wp::float32> var_75;
        bool var_76;
        wp::transform_t<wp::float32>* var_77;
        wp::transform_t<wp::float32> var_78;
        wp::transform_t<wp::float32> var_79;
        wp::transform_t<wp::float32>* var_80;
        wp::transform_t<wp::float32> var_81;
        wp::transform_t<wp::float32> var_82;
        wp::float32* var_83;
        wp::float32 var_84;
        wp::float32 var_85;
        wp::mat_t<3,3,wp::float32>* var_86;
        wp::mat_t<3,3,wp::float32> var_87;
        wp::mat_t<3,3,wp::float32> var_88;
        wp::vec_t<3,wp::float32>* var_89;
        wp::vec_t<3,wp::float32> var_90;
        wp::vec_t<3,wp::float32> var_91;
        wp::float32 var_92;
        wp::mat_t<3,3,wp::float32> var_93;
        wp::transform_t<wp::float32> var_94;
        wp::vec_t<3,wp::float32> var_95;
        wp::vec_t<3,wp::float32>* var_96;
        wp::vec_t<3,wp::float32> var_97;
        wp::vec_t<3,wp::float32> var_98;
        wp::vec_t<3,wp::float32>* var_99;
        wp::vec_t<3,wp::float32> var_100;
        wp::vec_t<3,wp::float32> var_101;
        wp::vec_t<3,wp::float32> var_102;
        wp::vec_t<3,wp::float32> var_103;
        wp::vec_t<3,wp::float32> var_104;
        wp::vec_t<3,wp::float32> var_105;
        wp::vec_t<3,wp::float32>* var_106;
        wp::vec_t<3,wp::float32> var_107;
        wp::vec_t<3,wp::float32> var_108;
        bool var_109;
        wp::vec_t<6,wp::float32>* var_110;
        wp::vec_t<6,wp::float32> var_111;
        wp::vec_t<3,wp::float32> var_112;
        wp::vec_t<3,wp::float32> var_113;
        wp::vec_t<3,wp::float32> var_114;
        wp::vec_t<6,wp::float32>* var_115;
        wp::vec_t<6,wp::float32> var_116;
        wp::vec_t<3,wp::float32> var_117;
        wp::quat_t<wp::float32> var_118;
        wp::vec_t<3,wp::float32> var_119;
        wp::vec_t<3,wp::float32> var_120;
        wp::vec_t<3,wp::float32> var_121;
        wp::float32 var_122;
        wp::float32 var_123;
        wp::float32 var_124;
        wp::vec_t<3,wp::float32> var_125;
        wp::vec_t<3,wp::float32> var_126;
        wp::float32 var_127;
        bool var_128;
        wp::vec_t<6,wp::float32>* var_129;
        wp::vec_t<6,wp::float32> var_130;
        wp::vec_t<3,wp::float32> var_131;
        wp::vec_t<3,wp::float32> var_132;
        wp::vec_t<3,wp::float32> var_133;
        wp::vec_t<6,wp::float32>* var_134;
        wp::vec_t<6,wp::float32> var_135;
        wp::vec_t<3,wp::float32> var_136;
        wp::quat_t<wp::float32> var_137;
        wp::vec_t<3,wp::float32> var_138;
        wp::vec_t<3,wp::float32> var_139;
        wp::vec_t<3,wp::float32> var_140;
        wp::float32 var_141;
        wp::float32 var_142;
        wp::float32 var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::vec_t<3,wp::float32> var_145;
        wp::float32 var_146;
        wp::vec_t<3,wp::float32> var_147;
        bool var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::float32 var_150;
        wp::vec_t<3,wp::float32> var_151;
        wp::float32 var_152;
        wp::float32 var_153;
        wp::float32 var_154;
        wp::float32 var_155;
        wp::float32 var_156;
        wp::float32 var_157;
        wp::vec_t<3,wp::float32> var_158;
        wp::vec_t<3,wp::float32> var_159;
        bool var_160;
        wp::vec_t<3,wp::float32> var_161;
        wp::float32* var_162;
        bool var_163;
        wp::float32 var_164;
        wp::float32* var_165;
        wp::float32 var_166;
        wp::vec_t<3,wp::float32> var_167;
        wp::vec_t<3,wp::float32> var_168;
        wp::vec_t<3,wp::float32> var_169;
        wp::quat_t<wp::float32> var_170;
        wp::vec_t<3,wp::float32> var_171;
        wp::vec_t<3,wp::float32> var_172;
        wp::vec_t<3,wp::float32> var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<6,wp::float32> var_176;
        wp::vec_t<6,wp::float32> var_177;
        wp::quat_t<wp::float32> var_178;
        bool var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::float32* var_181;
        bool var_182;
        wp::float32 var_183;
        wp::float32* var_184;
        wp::float32 var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::quat_t<wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::vec_t<3,wp::float32> var_191;
        wp::vec_t<3,wp::float32> var_192;
        wp::vec_t<3,wp::float32> var_193;
        wp::vec_t<3,wp::float32> var_194;
        wp::vec_t<6,wp::float32> var_195;
        wp::vec_t<6,wp::float32> var_196;
        wp::quat_t<wp::float32> var_197;
        wp::vec_t<3,wp::float32> var_198;
        wp::vec_t<3,wp::float32> var_199;
        //---------
        // forward
        // def apply_rigid_restitution(                                                           <L 1665>
        // tid = wp.tid()                                                                         <L 1689>
        var_0 = builtin_tid1d();
        // count = contact_count[0]                                                               <L 1691>
        var_2 = wp::address(var_contact_count, var_1);
        var_3 = wp::load(var_2);
        var_4 = wp::copy(var_3);
        // if tid >= count:                                                                       <L 1692>
        var_5 = (var_0 >= var_4);
        if (var_5) {
            // return                                                                             <L 1693>
            return;
        }
        // d = active_contact_distance[tid]                                                       <L 1694>
        var_6 = wp::address(var_active_contact_distance, var_0);
        var_7 = wp::load(var_6);
        var_8 = wp::copy(var_7);
        // if d >= 0.0:                                                                           <L 1695>
        var_10 = (var_8 >= var_9);
        if (var_10) {
            // return                                                                             <L 1696>
            return;
        }
        // mat_nonzero = 0                                                                        <L 1699>
        // restitution = 0.0                                                                      <L 1700>
        // shape_a = contact_shape0[tid]                                                          <L 1701>
        var_11 = wp::address(var_contact_shape0, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // shape_b = contact_shape1[tid]                                                          <L 1702>
        var_14 = wp::address(var_contact_shape1, var_0);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // if shape_a >= 0:                                                                       <L 1703>
        var_17 = (var_13 >= var_1);
        if (var_17) {
            // mat_nonzero += 1                                                                   <L 1704>
            var_19 = wp::add(var_1, var_18);
            // restitution += shape_materials.restitution[shape_a]                                <L 1705>
            var_20 = &(var_shape_materials.restitution);
            var_21 = wp::load(var_20);
            var_22 = wp::address(var_21, var_13);
            var_23 = wp::load(var_22);
            var_24 = wp::add(var_9, var_23);
        }
        var_25 = wp::select(var_17, var_1, var_19);
        var_26 = wp::select(var_17, var_9, var_24);
        // if shape_b >= 0:                                                                       <L 1706>
        var_27 = (var_16 >= var_1);
        if (var_27) {
            // mat_nonzero += 1                                                                   <L 1707>
            var_28 = wp::add(var_25, var_18);
            // restitution += shape_materials.restitution[shape_b]                                <L 1708>
            var_29 = &(var_shape_materials.restitution);
            var_30 = wp::load(var_29);
            var_31 = wp::address(var_30, var_16);
            var_32 = wp::load(var_31);
            var_33 = wp::add(var_26, var_32);
        }
        var_34 = wp::select(var_27, var_25, var_28);
        var_35 = wp::select(var_27, var_26, var_33);
        // if mat_nonzero > 0:                                                                    <L 1709>
        var_36 = (var_34 > var_1);
        if (var_36) {
            // restitution /= float(mat_nonzero)                                                  <L 1710>
            var_37 = wp::float(var_34);
            var_38 = wp::div(var_35, var_37);
        }
        var_39 = wp::select(var_36, var_35, var_38);
        // body_a = contact_body0[tid]                                                            <L 1712>
        var_40 = wp::address(var_contact_body0, var_0);
        var_41 = wp::load(var_40);
        var_42 = wp::copy(var_41);
        // body_b = contact_body1[tid]                                                            <L 1713>
        var_43 = wp::address(var_contact_body1, var_0);
        var_44 = wp::load(var_43);
        var_45 = wp::copy(var_44);
        // m_inv_a = 0.0                                                                          <L 1715>
        // m_inv_b = 0.0                                                                          <L 1716>
        // I_inv_a = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1717>
        var_46 = wp::mat_t<3,3,wp::float32>(var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9);
        // I_inv_b = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1718>
        var_47 = wp::mat_t<3,3,wp::float32>(var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9);
        // X_wb_a_prev = wp.transform_identity()                                                  <L 1720>
        var_48 = wp::transform_identity<wp::float32>();
        // X_wb_b_prev = wp.transform_identity()                                                  <L 1721>
        var_49 = wp::transform_identity<wp::float32>();
        // com_a = wp.vec3(0.0)                                                                   <L 1723>
        var_50 = wp::vec_t<3,wp::float32>(var_9);
        // com_b = wp.vec3(0.0)                                                                   <L 1724>
        var_51 = wp::vec_t<3,wp::float32>(var_9);
        // v_a = wp.vec3(0.0)                                                                     <L 1726>
        var_52 = wp::vec_t<3,wp::float32>(var_9);
        // v_b = wp.vec3(0.0)                                                                     <L 1727>
        var_53 = wp::vec_t<3,wp::float32>(var_9);
        // v_a_new = wp.vec3(0.0)                                                                 <L 1729>
        var_54 = wp::vec_t<3,wp::float32>(var_9);
        // v_b_new = wp.vec3(0.0)                                                                 <L 1730>
        var_55 = wp::vec_t<3,wp::float32>(var_9);
        // inv_mass = 0.0                                                                         <L 1732>
        // if body_a >= 0:                                                                        <L 1734>
        var_56 = (var_42 >= var_1);
        if (var_56) {
            // X_wb_a_prev = body_q_prev[body_a]                                                  <L 1735>
            var_57 = wp::address(var_body_q_prev, var_42);
            var_58 = wp::load(var_57);
            var_59 = wp::copy(var_58);
            // X_wb_a = body_q[body_a]                                                            <L 1736>
            var_60 = wp::address(var_body_q, var_42);
            var_61 = wp::load(var_60);
            var_62 = wp::copy(var_61);
            // m_inv_a = body_m_inv[body_a]                                                       <L 1737>
            var_63 = wp::address(var_body_m_inv, var_42);
            var_64 = wp::load(var_63);
            var_65 = wp::copy(var_64);
            // I_inv_a = body_I_inv[body_a]                                                       <L 1738>
            var_66 = wp::address(var_body_I_inv, var_42);
            var_67 = wp::load(var_66);
            var_68 = wp::copy(var_67);
            // com_a = body_com[body_a]                                                           <L 1739>
            var_69 = wp::address(var_body_com, var_42);
            var_70 = wp::load(var_69);
            var_71 = wp::copy(var_70);
        }
        var_72 = wp::select(var_56, var_9, var_65);
        var_73 = wp::select(var_56, var_46, var_68);
        var_74 = wp::select(var_56, var_48, var_59);
        var_75 = wp::select(var_56, var_50, var_71);
        // if body_b >= 0:                                                                        <L 1741>
        var_76 = (var_45 >= var_1);
        if (var_76) {
            // X_wb_b_prev = body_q_prev[body_b]                                                  <L 1742>
            var_77 = wp::address(var_body_q_prev, var_45);
            var_78 = wp::load(var_77);
            var_79 = wp::copy(var_78);
            // X_wb_b = body_q[body_b]                                                            <L 1743>
            var_80 = wp::address(var_body_q, var_45);
            var_81 = wp::load(var_80);
            var_82 = wp::copy(var_81);
            // m_inv_b = body_m_inv[body_b]                                                       <L 1744>
            var_83 = wp::address(var_body_m_inv, var_45);
            var_84 = wp::load(var_83);
            var_85 = wp::copy(var_84);
            // I_inv_b = body_I_inv[body_b]                                                       <L 1745>
            var_86 = wp::address(var_body_I_inv, var_45);
            var_87 = wp::load(var_86);
            var_88 = wp::copy(var_87);
            // com_b = body_com[body_b]                                                           <L 1746>
            var_89 = wp::address(var_body_com, var_45);
            var_90 = wp::load(var_89);
            var_91 = wp::copy(var_90);
        }
        var_92 = wp::select(var_76, var_9, var_85);
        var_93 = wp::select(var_76, var_47, var_88);
        var_94 = wp::select(var_76, var_49, var_79);
        var_95 = wp::select(var_76, var_51, var_91);
        // bx_a = active_contact_point0[tid]                                                      <L 1748>
        var_96 = wp::address(var_active_contact_point0, var_0);
        var_97 = wp::load(var_96);
        var_98 = wp::copy(var_97);
        // bx_b = active_contact_point1[tid]                                                      <L 1749>
        var_99 = wp::address(var_active_contact_point1, var_0);
        var_100 = wp::load(var_99);
        var_101 = wp::copy(var_100);
        // r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                         <L 1751>
        var_102 = wp::transform_point(var_62, var_75);
        var_103 = wp::sub(var_98, var_102);
        // r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                         <L 1752>
        var_104 = wp::transform_point(var_82, var_95);
        var_105 = wp::sub(var_101, var_104);
        // n = contact_normal[tid]                                                                <L 1754>
        var_106 = wp::address(var_contact_normal, var_0);
        var_107 = wp::load(var_106);
        var_108 = wp::copy(var_107);
        // if body_a >= 0:                                                                        <L 1755>
        var_109 = (var_42 >= var_1);
        if (var_109) {
            // v_a = velocity_at_point(body_qd_prev[body_a], r_a) + gravity * dt                  <L 1756>
            var_110 = wp::address(var_body_qd_prev, var_42);
            var_111 = wp::load(var_110);
            var_112 = velocity_at_point(var_111, var_103);
            var_113 = wp::mul(var_gravity, var_dt);
            var_114 = wp::add(var_112, var_113);
            // v_a_new = velocity_at_point(body_qd[body_a], r_a)                                  <L 1757>
            var_115 = wp::address(var_body_qd, var_42);
            var_116 = wp::load(var_115);
            var_117 = velocity_at_point(var_116, var_103);
            // q_a = wp.transform_get_rotation(X_wb_a_prev)                                       <L 1758>
            var_118 = wp::transform_get_rotation(var_74);
            // rxn = wp.quat_rotate_inv(q_a, wp.cross(r_a, n))                                    <L 1759>
            var_119 = wp::cross(var_103, var_108);
            var_120 = wp::quat_rotate_inv(var_118, var_119);
            // inv_mass_a = m_inv_a + wp.dot(rxn, I_inv_a * rxn)                                  <L 1761>
            var_121 = wp::mul(var_73, var_120);
            var_122 = wp::dot(var_120, var_121);
            var_123 = wp::add(var_72, var_122);
            // inv_mass += inv_mass_a                                                             <L 1765>
            var_124 = wp::add(var_9, var_123);
        }
        var_125 = wp::select(var_109, var_52, var_114);
        var_126 = wp::select(var_109, var_54, var_117);
        var_127 = wp::select(var_109, var_9, var_124);
        // if body_b >= 0:                                                                        <L 1767>
        var_128 = (var_45 >= var_1);
        if (var_128) {
            // v_b = velocity_at_point(body_qd_prev[body_b], r_b) + gravity * dt                  <L 1768>
            var_129 = wp::address(var_body_qd_prev, var_45);
            var_130 = wp::load(var_129);
            var_131 = velocity_at_point(var_130, var_105);
            var_132 = wp::mul(var_gravity, var_dt);
            var_133 = wp::add(var_131, var_132);
            // v_b_new = velocity_at_point(body_qd[body_b], r_b)                                  <L 1769>
            var_134 = wp::address(var_body_qd, var_45);
            var_135 = wp::load(var_134);
            var_136 = velocity_at_point(var_135, var_105);
            // q_b = wp.transform_get_rotation(X_wb_b_prev)                                       <L 1770>
            var_137 = wp::transform_get_rotation(var_94);
            // rxn = wp.quat_rotate_inv(q_b, wp.cross(r_b, n))                                    <L 1771>
            var_138 = wp::cross(var_105, var_108);
            var_139 = wp::quat_rotate_inv(var_137, var_138);
            // inv_mass_b = m_inv_b + wp.dot(rxn, I_inv_b * rxn)                                  <L 1773>
            var_140 = wp::mul(var_93, var_139);
            var_141 = wp::dot(var_139, var_140);
            var_142 = wp::add(var_92, var_141);
            // inv_mass += inv_mass_b                                                             <L 1777>
            var_143 = wp::add(var_127, var_142);
        }
        var_144 = wp::select(var_128, var_53, var_133);
        var_145 = wp::select(var_128, var_55, var_136);
        var_146 = wp::select(var_128, var_127, var_143);
        var_147 = wp::select(var_128, var_120, var_139);
        // if inv_mass == 0.0:                                                                    <L 1780>
        var_148 = (var_146 == var_9);
        if (var_148) {
            // return                                                                             <L 1781>
            return;
        }
        // rel_vel_old = wp.dot(n, v_a - v_b)                                                     <L 1784>
        var_149 = wp::sub(var_125, var_144);
        var_150 = wp::dot(var_108, var_149);
        // rel_vel_new = wp.dot(n, v_a_new - v_b_new)                                             <L 1785>
        var_151 = wp::sub(var_126, var_145);
        var_152 = wp::dot(var_108, var_151);
        // dv = n * (-rel_vel_new + wp.max(-restitution * rel_vel_old, 0.0))                      <L 1788>
        var_153 = wp::neg(var_152);
        var_154 = wp::neg(var_39);
        var_155 = wp::mul(var_154, var_150);
        var_156 = wp::max(var_155, var_9);
        var_157 = wp::add(var_153, var_156);
        var_158 = wp::mul(var_108, var_157);
        // p = dv / inv_mass                                                                      <L 1791>
        var_159 = wp::div(var_158, var_146);
        // if body_a >= 0:                                                                        <L 1792>
        var_160 = (var_42 >= var_1);
        if (var_160) {
            // p_a = p                                                                            <L 1793>
            var_161 = wp::copy(var_159);
            // if contact_inv_weight:                                                             <L 1794>
            if (var_contact_inv_weight) {
                // if contact_inv_weight[body_a] > 0.0:                                           <L 1795>
                var_162 = wp::address(var_contact_inv_weight, var_42);
                var_164 = wp::load(var_162);
                var_163 = (var_164 > var_9);
                if (var_163) {
                    // p_a /= contact_inv_weight[body_a]                                          <L 1796>
                    var_165 = wp::address(var_contact_inv_weight, var_42);
                    var_166 = wp::load(var_165);
                    var_167 = wp::div(var_161, var_166);
                }
                var_168 = wp::select(var_163, var_161, var_167);
            }
            var_169 = wp::select(var_contact_inv_weight, var_161, var_168);
            // q_a = wp.transform_get_rotation(X_wb_a)                                            <L 1797>
            var_170 = wp::transform_get_rotation(var_62);
            // rxp = wp.quat_rotate_inv(q_a, wp.cross(r_a, p_a))                                  <L 1798>
            var_171 = wp::cross(var_103, var_169);
            var_172 = wp::quat_rotate_inv(var_170, var_171);
            // dq = wp.quat_rotate(q_a, I_inv_a * rxp)                                            <L 1799>
            var_173 = wp::mul(var_73, var_172);
            var_174 = wp::quat_rotate(var_170, var_173);
            // wp.atomic_add(deltas, body_a, wp.spatial_vector(dq, p_a * m_inv_a))                <L 1800>
            var_175 = wp::mul(var_169, var_72);
            var_176 = wp::vec_t<6,wp::float32>(var_174, var_175);
            var_177 = wp::atomic_add(var_deltas, var_42, var_176);
        }
        var_178 = wp::select(var_160, var_118, var_170);
        // if body_b >= 0:                                                                        <L 1802>
        var_179 = (var_45 >= var_1);
        if (var_179) {
            // p_b = p                                                                            <L 1803>
            var_180 = wp::copy(var_159);
            // if contact_inv_weight:                                                             <L 1804>
            if (var_contact_inv_weight) {
                // if contact_inv_weight[body_b] > 0.0:                                           <L 1805>
                var_181 = wp::address(var_contact_inv_weight, var_45);
                var_183 = wp::load(var_181);
                var_182 = (var_183 > var_9);
                if (var_182) {
                    // p_b /= contact_inv_weight[body_b]                                          <L 1806>
                    var_184 = wp::address(var_contact_inv_weight, var_45);
                    var_185 = wp::load(var_184);
                    var_186 = wp::div(var_180, var_185);
                }
                var_187 = wp::select(var_182, var_180, var_186);
            }
            var_188 = wp::select(var_contact_inv_weight, var_180, var_187);
            // q_b = wp.transform_get_rotation(X_wb_b)                                            <L 1807>
            var_189 = wp::transform_get_rotation(var_82);
            // rxp = wp.quat_rotate_inv(q_b, wp.cross(r_b, p_b))                                  <L 1808>
            var_190 = wp::cross(var_105, var_188);
            var_191 = wp::quat_rotate_inv(var_189, var_190);
            // dq = wp.quat_rotate(q_b, I_inv_b * rxp)                                            <L 1809>
            var_192 = wp::mul(var_93, var_191);
            var_193 = wp::quat_rotate(var_189, var_192);
            // wp.atomic_sub(deltas, body_b, wp.spatial_vector(dq, p_b * m_inv_b))                <L 1810>
            var_194 = wp::mul(var_188, var_92);
            var_195 = wp::vec_t<6,wp::float32>(var_193, var_194);
            var_196 = wp::atomic_sub(var_deltas, var_45, var_195);
        }
        var_197 = wp::select(var_179, var_137, var_189);
        var_198 = wp::select(var_179, var_172, var_191);
        var_199 = wp::select(var_179, var_174, var_193);
    }
}

extern "C" __global__ void apply_rigid_restitution_cuda_kernel_backward(
    wp::launch_bounds_t dim,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd,
    wp::array_t<wp::transform_t<wp::float32>> var_body_q_prev,
    wp::array_t<wp::vec_t<6,wp::float32>> var_body_qd_prev,
    wp::array_t<wp::vec_t<3,wp::float32>> var_body_com,
    wp::array_t<wp::float32> var_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> var_body_I_inv,
    wp::array_t<wp::int32> var_contact_count,
    wp::array_t<wp::int32> var_contact_body0,
    wp::array_t<wp::int32> var_contact_body1,
    wp::array_t<wp::vec_t<3,wp::float32>> var_contact_normal,
    wp::array_t<wp::int32> var_contact_shape0,
    wp::array_t<wp::int32> var_contact_shape1,
    ModelShapeMaterials var_shape_materials,
    wp::array_t<wp::float32> var_active_contact_distance,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> var_active_contact_point1,
    wp::array_t<wp::float32> var_contact_inv_weight,
    wp::vec_t<3,wp::float32> var_gravity,
    wp::float32 var_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> var_deltas,
    wp::array_t<wp::transform_t<wp::float32>> adj_body_q,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_qd,
    wp::array_t<wp::transform_t<wp::float32>> adj_body_q_prev,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_body_qd_prev,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_body_com,
    wp::array_t<wp::float32> adj_body_m_inv,
    wp::array_t<wp::mat_t<3,3,wp::float32>> adj_body_I_inv,
    wp::array_t<wp::int32> adj_contact_count,
    wp::array_t<wp::int32> adj_contact_body0,
    wp::array_t<wp::int32> adj_contact_body1,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_contact_normal,
    wp::array_t<wp::int32> adj_contact_shape0,
    wp::array_t<wp::int32> adj_contact_shape1,
    ModelShapeMaterials adj_shape_materials,
    wp::array_t<wp::float32> adj_active_contact_distance,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_active_contact_point0,
    wp::array_t<wp::vec_t<3,wp::float32>> adj_active_contact_point1,
    wp::array_t<wp::float32> adj_contact_inv_weight,
    wp::vec_t<3,wp::float32> adj_gravity,
    wp::float32 adj_dt,
    wp::array_t<wp::vec_t<6,wp::float32>> adj_deltas)
{
    for (size_t task_index = static_cast<size_t>(blockDim.x) * static_cast<size_t>(blockIdx.x) + static_cast<size_t>(threadIdx.x);
         task_index < dim.size;
         task_index += static_cast<size_t>(blockDim.x) * static_cast<size_t>(gridDim.x))
    {
        //---------
        // primal vars
        wp::int32 var_0;
        const wp::int32 var_1 = 0;
        wp::int32* var_2;
        wp::int32 var_3;
        wp::int32 var_4;
        bool var_5;
        wp::float32* var_6;
        wp::float32 var_7;
        wp::float32 var_8;
        const wp::float32 var_9 = 0.0;
        bool var_10;
        wp::int32* var_11;
        wp::int32 var_12;
        wp::int32 var_13;
        wp::int32* var_14;
        wp::int32 var_15;
        wp::int32 var_16;
        bool var_17;
        const wp::int32 var_18 = 1;
        wp::int32 var_19;
        wp::array_t<wp::float32>* var_20;
        wp::array_t<wp::float32> var_21;
        wp::float32* var_22;
        wp::float32 var_23;
        wp::float32 var_24;
        wp::int32 var_25;
        wp::float32 var_26;
        bool var_27;
        wp::int32 var_28;
        wp::array_t<wp::float32>* var_29;
        wp::array_t<wp::float32> var_30;
        wp::float32* var_31;
        wp::float32 var_32;
        wp::float32 var_33;
        wp::int32 var_34;
        wp::float32 var_35;
        bool var_36;
        wp::float32 var_37;
        wp::float32 var_38;
        wp::float32 var_39;
        wp::int32* var_40;
        wp::int32 var_41;
        wp::int32 var_42;
        wp::int32* var_43;
        wp::int32 var_44;
        wp::int32 var_45;
        wp::mat_t<3,3,wp::float32> var_46;
        wp::mat_t<3,3,wp::float32> var_47;
        wp::transform_t<wp::float32> var_48;
        wp::transform_t<wp::float32> var_49;
        wp::vec_t<3,wp::float32> var_50;
        wp::vec_t<3,wp::float32> var_51;
        wp::vec_t<3,wp::float32> var_52;
        wp::vec_t<3,wp::float32> var_53;
        wp::vec_t<3,wp::float32> var_54;
        wp::vec_t<3,wp::float32> var_55;
        bool var_56;
        wp::transform_t<wp::float32>* var_57;
        wp::transform_t<wp::float32> var_58;
        wp::transform_t<wp::float32> var_59;
        wp::transform_t<wp::float32>* var_60;
        wp::transform_t<wp::float32> var_61;
        wp::transform_t<wp::float32> var_62;
        wp::float32* var_63;
        wp::float32 var_64;
        wp::float32 var_65;
        wp::mat_t<3,3,wp::float32>* var_66;
        wp::mat_t<3,3,wp::float32> var_67;
        wp::mat_t<3,3,wp::float32> var_68;
        wp::vec_t<3,wp::float32>* var_69;
        wp::vec_t<3,wp::float32> var_70;
        wp::vec_t<3,wp::float32> var_71;
        wp::float32 var_72;
        wp::mat_t<3,3,wp::float32> var_73;
        wp::transform_t<wp::float32> var_74;
        wp::vec_t<3,wp::float32> var_75;
        bool var_76;
        wp::transform_t<wp::float32>* var_77;
        wp::transform_t<wp::float32> var_78;
        wp::transform_t<wp::float32> var_79;
        wp::transform_t<wp::float32>* var_80;
        wp::transform_t<wp::float32> var_81;
        wp::transform_t<wp::float32> var_82;
        wp::float32* var_83;
        wp::float32 var_84;
        wp::float32 var_85;
        wp::mat_t<3,3,wp::float32>* var_86;
        wp::mat_t<3,3,wp::float32> var_87;
        wp::mat_t<3,3,wp::float32> var_88;
        wp::vec_t<3,wp::float32>* var_89;
        wp::vec_t<3,wp::float32> var_90;
        wp::vec_t<3,wp::float32> var_91;
        wp::float32 var_92;
        wp::mat_t<3,3,wp::float32> var_93;
        wp::transform_t<wp::float32> var_94;
        wp::vec_t<3,wp::float32> var_95;
        wp::vec_t<3,wp::float32>* var_96;
        wp::vec_t<3,wp::float32> var_97;
        wp::vec_t<3,wp::float32> var_98;
        wp::vec_t<3,wp::float32>* var_99;
        wp::vec_t<3,wp::float32> var_100;
        wp::vec_t<3,wp::float32> var_101;
        wp::vec_t<3,wp::float32> var_102;
        wp::vec_t<3,wp::float32> var_103;
        wp::vec_t<3,wp::float32> var_104;
        wp::vec_t<3,wp::float32> var_105;
        wp::vec_t<3,wp::float32>* var_106;
        wp::vec_t<3,wp::float32> var_107;
        wp::vec_t<3,wp::float32> var_108;
        bool var_109;
        wp::vec_t<6,wp::float32>* var_110;
        wp::vec_t<6,wp::float32> var_111;
        wp::vec_t<3,wp::float32> var_112;
        wp::vec_t<3,wp::float32> var_113;
        wp::vec_t<3,wp::float32> var_114;
        wp::vec_t<6,wp::float32>* var_115;
        wp::vec_t<6,wp::float32> var_116;
        wp::vec_t<3,wp::float32> var_117;
        wp::quat_t<wp::float32> var_118;
        wp::vec_t<3,wp::float32> var_119;
        wp::vec_t<3,wp::float32> var_120;
        wp::vec_t<3,wp::float32> var_121;
        wp::float32 var_122;
        wp::float32 var_123;
        wp::float32 var_124;
        wp::vec_t<3,wp::float32> var_125;
        wp::vec_t<3,wp::float32> var_126;
        wp::float32 var_127;
        bool var_128;
        wp::vec_t<6,wp::float32>* var_129;
        wp::vec_t<6,wp::float32> var_130;
        wp::vec_t<3,wp::float32> var_131;
        wp::vec_t<3,wp::float32> var_132;
        wp::vec_t<3,wp::float32> var_133;
        wp::vec_t<6,wp::float32>* var_134;
        wp::vec_t<6,wp::float32> var_135;
        wp::vec_t<3,wp::float32> var_136;
        wp::quat_t<wp::float32> var_137;
        wp::vec_t<3,wp::float32> var_138;
        wp::vec_t<3,wp::float32> var_139;
        wp::vec_t<3,wp::float32> var_140;
        wp::float32 var_141;
        wp::float32 var_142;
        wp::float32 var_143;
        wp::vec_t<3,wp::float32> var_144;
        wp::vec_t<3,wp::float32> var_145;
        wp::float32 var_146;
        wp::vec_t<3,wp::float32> var_147;
        bool var_148;
        wp::vec_t<3,wp::float32> var_149;
        wp::float32 var_150;
        wp::vec_t<3,wp::float32> var_151;
        wp::float32 var_152;
        wp::float32 var_153;
        wp::float32 var_154;
        wp::float32 var_155;
        wp::float32 var_156;
        wp::float32 var_157;
        wp::vec_t<3,wp::float32> var_158;
        wp::vec_t<3,wp::float32> var_159;
        bool var_160;
        wp::vec_t<3,wp::float32> var_161;
        wp::float32* var_162;
        bool var_163;
        wp::float32 var_164;
        wp::float32* var_165;
        wp::float32 var_166;
        wp::vec_t<3,wp::float32> var_167;
        wp::vec_t<3,wp::float32> var_168;
        wp::vec_t<3,wp::float32> var_169;
        wp::quat_t<wp::float32> var_170;
        wp::vec_t<3,wp::float32> var_171;
        wp::vec_t<3,wp::float32> var_172;
        wp::vec_t<3,wp::float32> var_173;
        wp::vec_t<3,wp::float32> var_174;
        wp::vec_t<3,wp::float32> var_175;
        wp::vec_t<6,wp::float32> var_176;
        wp::vec_t<6,wp::float32> var_177;
        wp::quat_t<wp::float32> var_178;
        bool var_179;
        wp::vec_t<3,wp::float32> var_180;
        wp::float32* var_181;
        bool var_182;
        wp::float32 var_183;
        wp::float32* var_184;
        wp::float32 var_185;
        wp::vec_t<3,wp::float32> var_186;
        wp::vec_t<3,wp::float32> var_187;
        wp::vec_t<3,wp::float32> var_188;
        wp::quat_t<wp::float32> var_189;
        wp::vec_t<3,wp::float32> var_190;
        wp::vec_t<3,wp::float32> var_191;
        wp::vec_t<3,wp::float32> var_192;
        wp::vec_t<3,wp::float32> var_193;
        wp::vec_t<3,wp::float32> var_194;
        wp::vec_t<6,wp::float32> var_195;
        wp::vec_t<6,wp::float32> var_196;
        wp::quat_t<wp::float32> var_197;
        wp::vec_t<3,wp::float32> var_198;
        wp::vec_t<3,wp::float32> var_199;
        //---------
        // dual vars
        wp::int32 adj_0 = {};
        wp::int32 adj_1 = {};
        wp::int32 adj_2 = {};
        wp::int32 adj_3 = {};
        wp::int32 adj_4 = {};
        bool adj_5 = {};
        wp::float32 adj_6 = {};
        wp::float32 adj_7 = {};
        wp::float32 adj_8 = {};
        wp::float32 adj_9 = {};
        bool adj_10 = {};
        wp::int32 adj_11 = {};
        wp::int32 adj_12 = {};
        wp::int32 adj_13 = {};
        wp::int32 adj_14 = {};
        wp::int32 adj_15 = {};
        wp::int32 adj_16 = {};
        bool adj_17 = {};
        wp::int32 adj_18 = {};
        wp::int32 adj_19 = {};
        wp::array_t<wp::float32> adj_20 = {};
        wp::array_t<wp::float32> adj_21 = {};
        wp::float32 adj_22 = {};
        wp::float32 adj_23 = {};
        wp::float32 adj_24 = {};
        wp::int32 adj_25 = {};
        wp::float32 adj_26 = {};
        bool adj_27 = {};
        wp::int32 adj_28 = {};
        wp::array_t<wp::float32> adj_29 = {};
        wp::array_t<wp::float32> adj_30 = {};
        wp::float32 adj_31 = {};
        wp::float32 adj_32 = {};
        wp::float32 adj_33 = {};
        wp::int32 adj_34 = {};
        wp::float32 adj_35 = {};
        bool adj_36 = {};
        wp::float32 adj_37 = {};
        wp::float32 adj_38 = {};
        wp::float32 adj_39 = {};
        wp::int32 adj_40 = {};
        wp::int32 adj_41 = {};
        wp::int32 adj_42 = {};
        wp::int32 adj_43 = {};
        wp::int32 adj_44 = {};
        wp::int32 adj_45 = {};
        wp::mat_t<3,3,wp::float32> adj_46 = {};
        wp::mat_t<3,3,wp::float32> adj_47 = {};
        wp::transform_t<wp::float32> adj_48 = {};
        wp::transform_t<wp::float32> adj_49 = {};
        wp::vec_t<3,wp::float32> adj_50 = {};
        wp::vec_t<3,wp::float32> adj_51 = {};
        wp::vec_t<3,wp::float32> adj_52 = {};
        wp::vec_t<3,wp::float32> adj_53 = {};
        wp::vec_t<3,wp::float32> adj_54 = {};
        wp::vec_t<3,wp::float32> adj_55 = {};
        bool adj_56 = {};
        wp::transform_t<wp::float32> adj_57 = {};
        wp::transform_t<wp::float32> adj_58 = {};
        wp::transform_t<wp::float32> adj_59 = {};
        wp::transform_t<wp::float32> adj_60 = {};
        wp::transform_t<wp::float32> adj_61 = {};
        wp::transform_t<wp::float32> adj_62 = {};
        wp::float32 adj_63 = {};
        wp::float32 adj_64 = {};
        wp::float32 adj_65 = {};
        wp::mat_t<3,3,wp::float32> adj_66 = {};
        wp::mat_t<3,3,wp::float32> adj_67 = {};
        wp::mat_t<3,3,wp::float32> adj_68 = {};
        wp::vec_t<3,wp::float32> adj_69 = {};
        wp::vec_t<3,wp::float32> adj_70 = {};
        wp::vec_t<3,wp::float32> adj_71 = {};
        wp::float32 adj_72 = {};
        wp::mat_t<3,3,wp::float32> adj_73 = {};
        wp::transform_t<wp::float32> adj_74 = {};
        wp::vec_t<3,wp::float32> adj_75 = {};
        bool adj_76 = {};
        wp::transform_t<wp::float32> adj_77 = {};
        wp::transform_t<wp::float32> adj_78 = {};
        wp::transform_t<wp::float32> adj_79 = {};
        wp::transform_t<wp::float32> adj_80 = {};
        wp::transform_t<wp::float32> adj_81 = {};
        wp::transform_t<wp::float32> adj_82 = {};
        wp::float32 adj_83 = {};
        wp::float32 adj_84 = {};
        wp::float32 adj_85 = {};
        wp::mat_t<3,3,wp::float32> adj_86 = {};
        wp::mat_t<3,3,wp::float32> adj_87 = {};
        wp::mat_t<3,3,wp::float32> adj_88 = {};
        wp::vec_t<3,wp::float32> adj_89 = {};
        wp::vec_t<3,wp::float32> adj_90 = {};
        wp::vec_t<3,wp::float32> adj_91 = {};
        wp::float32 adj_92 = {};
        wp::mat_t<3,3,wp::float32> adj_93 = {};
        wp::transform_t<wp::float32> adj_94 = {};
        wp::vec_t<3,wp::float32> adj_95 = {};
        wp::vec_t<3,wp::float32> adj_96 = {};
        wp::vec_t<3,wp::float32> adj_97 = {};
        wp::vec_t<3,wp::float32> adj_98 = {};
        wp::vec_t<3,wp::float32> adj_99 = {};
        wp::vec_t<3,wp::float32> adj_100 = {};
        wp::vec_t<3,wp::float32> adj_101 = {};
        wp::vec_t<3,wp::float32> adj_102 = {};
        wp::vec_t<3,wp::float32> adj_103 = {};
        wp::vec_t<3,wp::float32> adj_104 = {};
        wp::vec_t<3,wp::float32> adj_105 = {};
        wp::vec_t<3,wp::float32> adj_106 = {};
        wp::vec_t<3,wp::float32> adj_107 = {};
        wp::vec_t<3,wp::float32> adj_108 = {};
        bool adj_109 = {};
        wp::vec_t<6,wp::float32> adj_110 = {};
        wp::vec_t<6,wp::float32> adj_111 = {};
        wp::vec_t<3,wp::float32> adj_112 = {};
        wp::vec_t<3,wp::float32> adj_113 = {};
        wp::vec_t<3,wp::float32> adj_114 = {};
        wp::vec_t<6,wp::float32> adj_115 = {};
        wp::vec_t<6,wp::float32> adj_116 = {};
        wp::vec_t<3,wp::float32> adj_117 = {};
        wp::quat_t<wp::float32> adj_118 = {};
        wp::vec_t<3,wp::float32> adj_119 = {};
        wp::vec_t<3,wp::float32> adj_120 = {};
        wp::vec_t<3,wp::float32> adj_121 = {};
        wp::float32 adj_122 = {};
        wp::float32 adj_123 = {};
        wp::float32 adj_124 = {};
        wp::vec_t<3,wp::float32> adj_125 = {};
        wp::vec_t<3,wp::float32> adj_126 = {};
        wp::float32 adj_127 = {};
        bool adj_128 = {};
        wp::vec_t<6,wp::float32> adj_129 = {};
        wp::vec_t<6,wp::float32> adj_130 = {};
        wp::vec_t<3,wp::float32> adj_131 = {};
        wp::vec_t<3,wp::float32> adj_132 = {};
        wp::vec_t<3,wp::float32> adj_133 = {};
        wp::vec_t<6,wp::float32> adj_134 = {};
        wp::vec_t<6,wp::float32> adj_135 = {};
        wp::vec_t<3,wp::float32> adj_136 = {};
        wp::quat_t<wp::float32> adj_137 = {};
        wp::vec_t<3,wp::float32> adj_138 = {};
        wp::vec_t<3,wp::float32> adj_139 = {};
        wp::vec_t<3,wp::float32> adj_140 = {};
        wp::float32 adj_141 = {};
        wp::float32 adj_142 = {};
        wp::float32 adj_143 = {};
        wp::vec_t<3,wp::float32> adj_144 = {};
        wp::vec_t<3,wp::float32> adj_145 = {};
        wp::float32 adj_146 = {};
        wp::vec_t<3,wp::float32> adj_147 = {};
        bool adj_148 = {};
        wp::vec_t<3,wp::float32> adj_149 = {};
        wp::float32 adj_150 = {};
        wp::vec_t<3,wp::float32> adj_151 = {};
        wp::float32 adj_152 = {};
        wp::float32 adj_153 = {};
        wp::float32 adj_154 = {};
        wp::float32 adj_155 = {};
        wp::float32 adj_156 = {};
        wp::float32 adj_157 = {};
        wp::vec_t<3,wp::float32> adj_158 = {};
        wp::vec_t<3,wp::float32> adj_159 = {};
        bool adj_160 = {};
        wp::vec_t<3,wp::float32> adj_161 = {};
        wp::float32 adj_162 = {};
        bool adj_163 = {};
        wp::float32 adj_164 = {};
        wp::float32 adj_165 = {};
        wp::float32 adj_166 = {};
        wp::vec_t<3,wp::float32> adj_167 = {};
        wp::vec_t<3,wp::float32> adj_168 = {};
        wp::vec_t<3,wp::float32> adj_169 = {};
        wp::quat_t<wp::float32> adj_170 = {};
        wp::vec_t<3,wp::float32> adj_171 = {};
        wp::vec_t<3,wp::float32> adj_172 = {};
        wp::vec_t<3,wp::float32> adj_173 = {};
        wp::vec_t<3,wp::float32> adj_174 = {};
        wp::vec_t<3,wp::float32> adj_175 = {};
        wp::vec_t<6,wp::float32> adj_176 = {};
        wp::vec_t<6,wp::float32> adj_177 = {};
        wp::quat_t<wp::float32> adj_178 = {};
        bool adj_179 = {};
        wp::vec_t<3,wp::float32> adj_180 = {};
        wp::float32 adj_181 = {};
        bool adj_182 = {};
        wp::float32 adj_183 = {};
        wp::float32 adj_184 = {};
        wp::float32 adj_185 = {};
        wp::vec_t<3,wp::float32> adj_186 = {};
        wp::vec_t<3,wp::float32> adj_187 = {};
        wp::vec_t<3,wp::float32> adj_188 = {};
        wp::quat_t<wp::float32> adj_189 = {};
        wp::vec_t<3,wp::float32> adj_190 = {};
        wp::vec_t<3,wp::float32> adj_191 = {};
        wp::vec_t<3,wp::float32> adj_192 = {};
        wp::vec_t<3,wp::float32> adj_193 = {};
        wp::vec_t<3,wp::float32> adj_194 = {};
        wp::vec_t<6,wp::float32> adj_195 = {};
        wp::vec_t<6,wp::float32> adj_196 = {};
        wp::quat_t<wp::float32> adj_197 = {};
        wp::vec_t<3,wp::float32> adj_198 = {};
        wp::vec_t<3,wp::float32> adj_199 = {};
        //---------
        // forward
        // def apply_rigid_restitution(                                                           <L 1665>
        // tid = wp.tid()                                                                         <L 1689>
        var_0 = builtin_tid1d();
        // count = contact_count[0]                                                               <L 1691>
        var_2 = wp::address(var_contact_count, var_1);
        var_3 = wp::load(var_2);
        var_4 = wp::copy(var_3);
        // if tid >= count:                                                                       <L 1692>
        var_5 = (var_0 >= var_4);
        if (var_5) {
            // return                                                                             <L 1693>
            goto label0;
        }
        // d = active_contact_distance[tid]                                                       <L 1694>
        var_6 = wp::address(var_active_contact_distance, var_0);
        var_7 = wp::load(var_6);
        var_8 = wp::copy(var_7);
        // if d >= 0.0:                                                                           <L 1695>
        var_10 = (var_8 >= var_9);
        if (var_10) {
            // return                                                                             <L 1696>
            goto label1;
        }
        // mat_nonzero = 0                                                                        <L 1699>
        // restitution = 0.0                                                                      <L 1700>
        // shape_a = contact_shape0[tid]                                                          <L 1701>
        var_11 = wp::address(var_contact_shape0, var_0);
        var_12 = wp::load(var_11);
        var_13 = wp::copy(var_12);
        // shape_b = contact_shape1[tid]                                                          <L 1702>
        var_14 = wp::address(var_contact_shape1, var_0);
        var_15 = wp::load(var_14);
        var_16 = wp::copy(var_15);
        // if shape_a >= 0:                                                                       <L 1703>
        var_17 = (var_13 >= var_1);
        if (var_17) {
            // mat_nonzero += 1                                                                   <L 1704>
            var_19 = wp::add(var_1, var_18);
            // restitution += shape_materials.restitution[shape_a]                                <L 1705>
            var_20 = &(var_shape_materials.restitution);
            var_21 = wp::load(var_20);
            var_22 = wp::address(var_21, var_13);
            var_23 = wp::load(var_22);
            var_24 = wp::add(var_9, var_23);
        }
        var_25 = wp::select(var_17, var_1, var_19);
        var_26 = wp::select(var_17, var_9, var_24);
        // if shape_b >= 0:                                                                       <L 1706>
        var_27 = (var_16 >= var_1);
        if (var_27) {
            // mat_nonzero += 1                                                                   <L 1707>
            var_28 = wp::add(var_25, var_18);
            // restitution += shape_materials.restitution[shape_b]                                <L 1708>
            var_29 = &(var_shape_materials.restitution);
            var_30 = wp::load(var_29);
            var_31 = wp::address(var_30, var_16);
            var_32 = wp::load(var_31);
            var_33 = wp::add(var_26, var_32);
        }
        var_34 = wp::select(var_27, var_25, var_28);
        var_35 = wp::select(var_27, var_26, var_33);
        // if mat_nonzero > 0:                                                                    <L 1709>
        var_36 = (var_34 > var_1);
        if (var_36) {
            // restitution /= float(mat_nonzero)                                                  <L 1710>
            var_37 = wp::float(var_34);
            var_38 = wp::div(var_35, var_37);
        }
        var_39 = wp::select(var_36, var_35, var_38);
        // body_a = contact_body0[tid]                                                            <L 1712>
        var_40 = wp::address(var_contact_body0, var_0);
        var_41 = wp::load(var_40);
        var_42 = wp::copy(var_41);
        // body_b = contact_body1[tid]                                                            <L 1713>
        var_43 = wp::address(var_contact_body1, var_0);
        var_44 = wp::load(var_43);
        var_45 = wp::copy(var_44);
        // m_inv_a = 0.0                                                                          <L 1715>
        // m_inv_b = 0.0                                                                          <L 1716>
        // I_inv_a = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1717>
        var_46 = wp::mat_t<3,3,wp::float32>(var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9);
        // I_inv_b = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                        <L 1718>
        var_47 = wp::mat_t<3,3,wp::float32>(var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9);
        // X_wb_a_prev = wp.transform_identity()                                                  <L 1720>
        var_48 = wp::transform_identity<wp::float32>();
        // X_wb_b_prev = wp.transform_identity()                                                  <L 1721>
        var_49 = wp::transform_identity<wp::float32>();
        // com_a = wp.vec3(0.0)                                                                   <L 1723>
        var_50 = wp::vec_t<3,wp::float32>(var_9);
        // com_b = wp.vec3(0.0)                                                                   <L 1724>
        var_51 = wp::vec_t<3,wp::float32>(var_9);
        // v_a = wp.vec3(0.0)                                                                     <L 1726>
        var_52 = wp::vec_t<3,wp::float32>(var_9);
        // v_b = wp.vec3(0.0)                                                                     <L 1727>
        var_53 = wp::vec_t<3,wp::float32>(var_9);
        // v_a_new = wp.vec3(0.0)                                                                 <L 1729>
        var_54 = wp::vec_t<3,wp::float32>(var_9);
        // v_b_new = wp.vec3(0.0)                                                                 <L 1730>
        var_55 = wp::vec_t<3,wp::float32>(var_9);
        // inv_mass = 0.0                                                                         <L 1732>
        // if body_a >= 0:                                                                        <L 1734>
        var_56 = (var_42 >= var_1);
        if (var_56) {
            // X_wb_a_prev = body_q_prev[body_a]                                                  <L 1735>
            var_57 = wp::address(var_body_q_prev, var_42);
            var_58 = wp::load(var_57);
            var_59 = wp::copy(var_58);
            // X_wb_a = body_q[body_a]                                                            <L 1736>
            var_60 = wp::address(var_body_q, var_42);
            var_61 = wp::load(var_60);
            var_62 = wp::copy(var_61);
            // m_inv_a = body_m_inv[body_a]                                                       <L 1737>
            var_63 = wp::address(var_body_m_inv, var_42);
            var_64 = wp::load(var_63);
            var_65 = wp::copy(var_64);
            // I_inv_a = body_I_inv[body_a]                                                       <L 1738>
            var_66 = wp::address(var_body_I_inv, var_42);
            var_67 = wp::load(var_66);
            var_68 = wp::copy(var_67);
            // com_a = body_com[body_a]                                                           <L 1739>
            var_69 = wp::address(var_body_com, var_42);
            var_70 = wp::load(var_69);
            var_71 = wp::copy(var_70);
        }
        var_72 = wp::select(var_56, var_9, var_65);
        var_73 = wp::select(var_56, var_46, var_68);
        var_74 = wp::select(var_56, var_48, var_59);
        var_75 = wp::select(var_56, var_50, var_71);
        // if body_b >= 0:                                                                        <L 1741>
        var_76 = (var_45 >= var_1);
        if (var_76) {
            // X_wb_b_prev = body_q_prev[body_b]                                                  <L 1742>
            var_77 = wp::address(var_body_q_prev, var_45);
            var_78 = wp::load(var_77);
            var_79 = wp::copy(var_78);
            // X_wb_b = body_q[body_b]                                                            <L 1743>
            var_80 = wp::address(var_body_q, var_45);
            var_81 = wp::load(var_80);
            var_82 = wp::copy(var_81);
            // m_inv_b = body_m_inv[body_b]                                                       <L 1744>
            var_83 = wp::address(var_body_m_inv, var_45);
            var_84 = wp::load(var_83);
            var_85 = wp::copy(var_84);
            // I_inv_b = body_I_inv[body_b]                                                       <L 1745>
            var_86 = wp::address(var_body_I_inv, var_45);
            var_87 = wp::load(var_86);
            var_88 = wp::copy(var_87);
            // com_b = body_com[body_b]                                                           <L 1746>
            var_89 = wp::address(var_body_com, var_45);
            var_90 = wp::load(var_89);
            var_91 = wp::copy(var_90);
        }
        var_92 = wp::select(var_76, var_9, var_85);
        var_93 = wp::select(var_76, var_47, var_88);
        var_94 = wp::select(var_76, var_49, var_79);
        var_95 = wp::select(var_76, var_51, var_91);
        // bx_a = active_contact_point0[tid]                                                      <L 1748>
        var_96 = wp::address(var_active_contact_point0, var_0);
        var_97 = wp::load(var_96);
        var_98 = wp::copy(var_97);
        // bx_b = active_contact_point1[tid]                                                      <L 1749>
        var_99 = wp::address(var_active_contact_point1, var_0);
        var_100 = wp::load(var_99);
        var_101 = wp::copy(var_100);
        // r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                         <L 1751>
        var_102 = wp::transform_point(var_62, var_75);
        var_103 = wp::sub(var_98, var_102);
        // r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                         <L 1752>
        var_104 = wp::transform_point(var_82, var_95);
        var_105 = wp::sub(var_101, var_104);
        // n = contact_normal[tid]                                                                <L 1754>
        var_106 = wp::address(var_contact_normal, var_0);
        var_107 = wp::load(var_106);
        var_108 = wp::copy(var_107);
        // if body_a >= 0:                                                                        <L 1755>
        var_109 = (var_42 >= var_1);
        if (var_109) {
            // v_a = velocity_at_point(body_qd_prev[body_a], r_a) + gravity * dt                  <L 1756>
            var_110 = wp::address(var_body_qd_prev, var_42);
            var_111 = wp::load(var_110);
            var_112 = velocity_at_point(var_111, var_103);
            var_113 = wp::mul(var_gravity, var_dt);
            var_114 = wp::add(var_112, var_113);
            // v_a_new = velocity_at_point(body_qd[body_a], r_a)                                  <L 1757>
            var_115 = wp::address(var_body_qd, var_42);
            var_116 = wp::load(var_115);
            var_117 = velocity_at_point(var_116, var_103);
            // q_a = wp.transform_get_rotation(X_wb_a_prev)                                       <L 1758>
            var_118 = wp::transform_get_rotation(var_74);
            // rxn = wp.quat_rotate_inv(q_a, wp.cross(r_a, n))                                    <L 1759>
            var_119 = wp::cross(var_103, var_108);
            var_120 = wp::quat_rotate_inv(var_118, var_119);
            // inv_mass_a = m_inv_a + wp.dot(rxn, I_inv_a * rxn)                                  <L 1761>
            var_121 = wp::mul(var_73, var_120);
            var_122 = wp::dot(var_120, var_121);
            var_123 = wp::add(var_72, var_122);
            // inv_mass += inv_mass_a                                                             <L 1765>
            var_124 = wp::add(var_9, var_123);
        }
        var_125 = wp::select(var_109, var_52, var_114);
        var_126 = wp::select(var_109, var_54, var_117);
        var_127 = wp::select(var_109, var_9, var_124);
        // if body_b >= 0:                                                                        <L 1767>
        var_128 = (var_45 >= var_1);
        if (var_128) {
            // v_b = velocity_at_point(body_qd_prev[body_b], r_b) + gravity * dt                  <L 1768>
            var_129 = wp::address(var_body_qd_prev, var_45);
            var_130 = wp::load(var_129);
            var_131 = velocity_at_point(var_130, var_105);
            var_132 = wp::mul(var_gravity, var_dt);
            var_133 = wp::add(var_131, var_132);
            // v_b_new = velocity_at_point(body_qd[body_b], r_b)                                  <L 1769>
            var_134 = wp::address(var_body_qd, var_45);
            var_135 = wp::load(var_134);
            var_136 = velocity_at_point(var_135, var_105);
            // q_b = wp.transform_get_rotation(X_wb_b_prev)                                       <L 1770>
            var_137 = wp::transform_get_rotation(var_94);
            // rxn = wp.quat_rotate_inv(q_b, wp.cross(r_b, n))                                    <L 1771>
            var_138 = wp::cross(var_105, var_108);
            var_139 = wp::quat_rotate_inv(var_137, var_138);
            // inv_mass_b = m_inv_b + wp.dot(rxn, I_inv_b * rxn)                                  <L 1773>
            var_140 = wp::mul(var_93, var_139);
            var_141 = wp::dot(var_139, var_140);
            var_142 = wp::add(var_92, var_141);
            // inv_mass += inv_mass_b                                                             <L 1777>
            var_143 = wp::add(var_127, var_142);
        }
        var_144 = wp::select(var_128, var_53, var_133);
        var_145 = wp::select(var_128, var_55, var_136);
        var_146 = wp::select(var_128, var_127, var_143);
        var_147 = wp::select(var_128, var_120, var_139);
        // if inv_mass == 0.0:                                                                    <L 1780>
        var_148 = (var_146 == var_9);
        if (var_148) {
            // return                                                                             <L 1781>
            goto label2;
        }
        // rel_vel_old = wp.dot(n, v_a - v_b)                                                     <L 1784>
        var_149 = wp::sub(var_125, var_144);
        var_150 = wp::dot(var_108, var_149);
        // rel_vel_new = wp.dot(n, v_a_new - v_b_new)                                             <L 1785>
        var_151 = wp::sub(var_126, var_145);
        var_152 = wp::dot(var_108, var_151);
        // dv = n * (-rel_vel_new + wp.max(-restitution * rel_vel_old, 0.0))                      <L 1788>
        var_153 = wp::neg(var_152);
        var_154 = wp::neg(var_39);
        var_155 = wp::mul(var_154, var_150);
        var_156 = wp::max(var_155, var_9);
        var_157 = wp::add(var_153, var_156);
        var_158 = wp::mul(var_108, var_157);
        // p = dv / inv_mass                                                                      <L 1791>
        var_159 = wp::div(var_158, var_146);
        // if body_a >= 0:                                                                        <L 1792>
        var_160 = (var_42 >= var_1);
        if (var_160) {
            // p_a = p                                                                            <L 1793>
            var_161 = wp::copy(var_159);
            // if contact_inv_weight:                                                             <L 1794>
            if (var_contact_inv_weight) {
                // if contact_inv_weight[body_a] > 0.0:                                           <L 1795>
                var_162 = wp::address(var_contact_inv_weight, var_42);
                var_164 = wp::load(var_162);
                var_163 = (var_164 > var_9);
                if (var_163) {
                    // p_a /= contact_inv_weight[body_a]                                          <L 1796>
                    var_165 = wp::address(var_contact_inv_weight, var_42);
                    var_166 = wp::load(var_165);
                    var_167 = wp::div(var_161, var_166);
                }
                var_168 = wp::select(var_163, var_161, var_167);
            }
            var_169 = wp::select(var_contact_inv_weight, var_161, var_168);
            // q_a = wp.transform_get_rotation(X_wb_a)                                            <L 1797>
            var_170 = wp::transform_get_rotation(var_62);
            // rxp = wp.quat_rotate_inv(q_a, wp.cross(r_a, p_a))                                  <L 1798>
            var_171 = wp::cross(var_103, var_169);
            var_172 = wp::quat_rotate_inv(var_170, var_171);
            // dq = wp.quat_rotate(q_a, I_inv_a * rxp)                                            <L 1799>
            var_173 = wp::mul(var_73, var_172);
            var_174 = wp::quat_rotate(var_170, var_173);
            // wp.atomic_add(deltas, body_a, wp.spatial_vector(dq, p_a * m_inv_a))                <L 1800>
            var_175 = wp::mul(var_169, var_72);
            var_176 = wp::vec_t<6,wp::float32>(var_174, var_175);
            // var_177 = wp::atomic_add(var_deltas, var_42, var_176);
        }
        var_178 = wp::select(var_160, var_118, var_170);
        // if body_b >= 0:                                                                        <L 1802>
        var_179 = (var_45 >= var_1);
        if (var_179) {
            // p_b = p                                                                            <L 1803>
            var_180 = wp::copy(var_159);
            // if contact_inv_weight:                                                             <L 1804>
            if (var_contact_inv_weight) {
                // if contact_inv_weight[body_b] > 0.0:                                           <L 1805>
                var_181 = wp::address(var_contact_inv_weight, var_45);
                var_183 = wp::load(var_181);
                var_182 = (var_183 > var_9);
                if (var_182) {
                    // p_b /= contact_inv_weight[body_b]                                          <L 1806>
                    var_184 = wp::address(var_contact_inv_weight, var_45);
                    var_185 = wp::load(var_184);
                    var_186 = wp::div(var_180, var_185);
                }
                var_187 = wp::select(var_182, var_180, var_186);
            }
            var_188 = wp::select(var_contact_inv_weight, var_180, var_187);
            // q_b = wp.transform_get_rotation(X_wb_b)                                            <L 1807>
            var_189 = wp::transform_get_rotation(var_82);
            // rxp = wp.quat_rotate_inv(q_b, wp.cross(r_b, p_b))                                  <L 1808>
            var_190 = wp::cross(var_105, var_188);
            var_191 = wp::quat_rotate_inv(var_189, var_190);
            // dq = wp.quat_rotate(q_b, I_inv_b * rxp)                                            <L 1809>
            var_192 = wp::mul(var_93, var_191);
            var_193 = wp::quat_rotate(var_189, var_192);
            // wp.atomic_sub(deltas, body_b, wp.spatial_vector(dq, p_b * m_inv_b))                <L 1810>
            var_194 = wp::mul(var_188, var_92);
            var_195 = wp::vec_t<6,wp::float32>(var_193, var_194);
            // var_196 = wp::atomic_sub(var_deltas, var_45, var_195);
        }
        var_197 = wp::select(var_179, var_137, var_189);
        var_198 = wp::select(var_179, var_172, var_191);
        var_199 = wp::select(var_179, var_174, var_193);
        //---------
        // reverse
        wp::adj_select(var_179, var_174, var_193, adj_179, adj_174, adj_193, adj_199);
        wp::adj_select(var_179, var_172, var_191, adj_179, adj_172, adj_191, adj_198);
        wp::adj_select(var_179, var_137, var_189, adj_179, adj_137, adj_189, adj_197);
        if (var_179) {
            wp::adj_atomic_sub(var_deltas, var_45, var_195, adj_deltas, adj_45, adj_195, adj_196);
            wp::adj_vec_t(var_193, var_194, adj_193, adj_194, adj_195);
            wp::adj_mul(var_188, var_92, adj_188, adj_92, adj_194);
            // adj: wp.atomic_sub(deltas, body_b, wp.spatial_vector(dq, p_b * m_inv_b))           <L 1810>
            wp::adj_quat_rotate(var_189, var_192, adj_189, adj_192, adj_193);
            wp::adj_mul(var_93, var_191, adj_93, adj_191, adj_192);
            // adj: dq = wp.quat_rotate(q_b, I_inv_b * rxp)                                       <L 1809>
            wp::adj_quat_rotate_inv(var_189, var_190, adj_189, adj_190, adj_191);
            wp::adj_cross(var_105, var_188, adj_105, adj_188, adj_190);
            // adj: rxp = wp.quat_rotate_inv(q_b, wp.cross(r_b, p_b))                             <L 1808>
            wp::adj_transform_get_rotation(var_82, adj_82, adj_189);
            // adj: q_b = wp.transform_get_rotation(X_wb_b)                                       <L 1807>
            wp::adj_select(var_contact_inv_weight, var_180, var_187, adj_contact_inv_weight, adj_180, adj_187, adj_188);
            if (var_contact_inv_weight) {
                wp::adj_select(var_182, var_180, var_186, adj_182, adj_180, adj_186, adj_187);
                if (var_182) {
                    wp::adj_div(var_180, var_185, adj_180, adj_184, adj_186);
                    wp::adj_load(var_184, adj_184, adj_185);
                    wp::adj_address(var_contact_inv_weight, var_45, adj_contact_inv_weight, adj_45, adj_184);
                    // adj: p_b /= contact_inv_weight[body_b]                                     <L 1806>
                }
                wp::adj_load(var_181, adj_181, adj_183);
                wp::adj_address(var_contact_inv_weight, var_45, adj_contact_inv_weight, adj_45, adj_181);
                // adj: if contact_inv_weight[body_b] > 0.0:                                      <L 1805>
            }
            // adj: if contact_inv_weight:                                                        <L 1804>
            wp::adj_copy(var_159, adj_159, adj_180);
            // adj: p_b = p                                                                       <L 1803>
        }
        // adj: if body_b >= 0:                                                                   <L 1802>
        wp::adj_select(var_160, var_118, var_170, adj_160, adj_118, adj_170, adj_178);
        if (var_160) {
            wp::adj_atomic_add(var_deltas, var_42, var_176, adj_deltas, adj_42, adj_176, adj_177);
            wp::adj_vec_t(var_174, var_175, adj_174, adj_175, adj_176);
            wp::adj_mul(var_169, var_72, adj_169, adj_72, adj_175);
            // adj: wp.atomic_add(deltas, body_a, wp.spatial_vector(dq, p_a * m_inv_a))           <L 1800>
            wp::adj_quat_rotate(var_170, var_173, adj_170, adj_173, adj_174);
            wp::adj_mul(var_73, var_172, adj_73, adj_172, adj_173);
            // adj: dq = wp.quat_rotate(q_a, I_inv_a * rxp)                                       <L 1799>
            wp::adj_quat_rotate_inv(var_170, var_171, adj_170, adj_171, adj_172);
            wp::adj_cross(var_103, var_169, adj_103, adj_169, adj_171);
            // adj: rxp = wp.quat_rotate_inv(q_a, wp.cross(r_a, p_a))                             <L 1798>
            wp::adj_transform_get_rotation(var_62, adj_62, adj_170);
            // adj: q_a = wp.transform_get_rotation(X_wb_a)                                       <L 1797>
            wp::adj_select(var_contact_inv_weight, var_161, var_168, adj_contact_inv_weight, adj_161, adj_168, adj_169);
            if (var_contact_inv_weight) {
                wp::adj_select(var_163, var_161, var_167, adj_163, adj_161, adj_167, adj_168);
                if (var_163) {
                    wp::adj_div(var_161, var_166, adj_161, adj_165, adj_167);
                    wp::adj_load(var_165, adj_165, adj_166);
                    wp::adj_address(var_contact_inv_weight, var_42, adj_contact_inv_weight, adj_42, adj_165);
                    // adj: p_a /= contact_inv_weight[body_a]                                     <L 1796>
                }
                wp::adj_load(var_162, adj_162, adj_164);
                wp::adj_address(var_contact_inv_weight, var_42, adj_contact_inv_weight, adj_42, adj_162);
                // adj: if contact_inv_weight[body_a] > 0.0:                                      <L 1795>
            }
            // adj: if contact_inv_weight:                                                        <L 1794>
            wp::adj_copy(var_159, adj_159, adj_161);
            // adj: p_a = p                                                                       <L 1793>
        }
        // adj: if body_a >= 0:                                                                   <L 1792>
        wp::adj_div(var_158, var_146, adj_158, adj_146, adj_159);
        // adj: p = dv / inv_mass                                                                 <L 1791>
        wp::adj_mul(var_108, var_157, adj_108, adj_157, adj_158);
        wp::adj_add(var_153, var_156, adj_153, adj_156, adj_157);
        wp::adj_max(var_155, var_9, adj_155, adj_9, adj_156);
        wp::adj_mul(var_154, var_150, adj_154, adj_150, adj_155);
        wp::adj_neg(var_39, adj_39, adj_154);
        wp::adj_neg(var_152, adj_152, adj_153);
        // adj: dv = n * (-rel_vel_new + wp.max(-restitution * rel_vel_old, 0.0))                 <L 1788>
        wp::adj_dot(var_108, var_151, adj_108, adj_151, adj_152);
        wp::adj_sub(var_126, var_145, adj_126, adj_145, adj_151);
        // adj: rel_vel_new = wp.dot(n, v_a_new - v_b_new)                                        <L 1785>
        wp::adj_dot(var_108, var_149, adj_108, adj_149, adj_150);
        wp::adj_sub(var_125, var_144, adj_125, adj_144, adj_149);
        // adj: rel_vel_old = wp.dot(n, v_a - v_b)                                                <L 1784>
        if (var_148) {
            label2:;
            // adj: return                                                                        <L 1781>
        }
        // adj: if inv_mass == 0.0:                                                               <L 1780>
        wp::adj_select(var_128, var_120, var_139, adj_128, adj_120, adj_139, adj_147);
        wp::adj_select(var_128, var_127, var_143, adj_128, adj_127, adj_143, adj_146);
        wp::adj_select(var_128, var_55, var_136, adj_128, adj_55, adj_136, adj_145);
        wp::adj_select(var_128, var_53, var_133, adj_128, adj_53, adj_133, adj_144);
        if (var_128) {
            wp::adj_add(var_127, var_142, adj_127, adj_142, adj_143);
            // adj: inv_mass += inv_mass_b                                                        <L 1777>
            wp::adj_add(var_92, var_141, adj_92, adj_141, adj_142);
            wp::adj_dot(var_139, var_140, adj_139, adj_140, adj_141);
            wp::adj_mul(var_93, var_139, adj_93, adj_139, adj_140);
            // adj: inv_mass_b = m_inv_b + wp.dot(rxn, I_inv_b * rxn)                             <L 1773>
            wp::adj_quat_rotate_inv(var_137, var_138, adj_137, adj_138, adj_139);
            wp::adj_cross(var_105, var_108, adj_105, adj_108, adj_138);
            // adj: rxn = wp.quat_rotate_inv(q_b, wp.cross(r_b, n))                               <L 1771>
            wp::adj_transform_get_rotation(var_94, adj_94, adj_137);
            // adj: q_b = wp.transform_get_rotation(X_wb_b_prev)                                  <L 1770>
            adj_velocity_at_point(var_135, var_105, adj_134, adj_105, adj_136);
            wp::adj_load(var_134, adj_134, adj_135);
            wp::adj_address(var_body_qd, var_45, adj_body_qd, adj_45, adj_134);
            // adj: v_b_new = velocity_at_point(body_qd[body_b], r_b)                             <L 1769>
            wp::adj_add(var_131, var_132, adj_131, adj_132, adj_133);
            wp::adj_mul(var_gravity, var_dt, adj_gravity, adj_dt, adj_132);
            adj_velocity_at_point(var_130, var_105, adj_129, adj_105, adj_131);
            wp::adj_load(var_129, adj_129, adj_130);
            wp::adj_address(var_body_qd_prev, var_45, adj_body_qd_prev, adj_45, adj_129);
            // adj: v_b = velocity_at_point(body_qd_prev[body_b], r_b) + gravity * dt             <L 1768>
        }
        // adj: if body_b >= 0:                                                                   <L 1767>
        wp::adj_select(var_109, var_9, var_124, adj_109, adj_9, adj_124, adj_127);
        wp::adj_select(var_109, var_54, var_117, adj_109, adj_54, adj_117, adj_126);
        wp::adj_select(var_109, var_52, var_114, adj_109, adj_52, adj_114, adj_125);
        if (var_109) {
            wp::adj_add(var_9, var_123, adj_9, adj_123, adj_124);
            // adj: inv_mass += inv_mass_a                                                        <L 1765>
            wp::adj_add(var_72, var_122, adj_72, adj_122, adj_123);
            wp::adj_dot(var_120, var_121, adj_120, adj_121, adj_122);
            wp::adj_mul(var_73, var_120, adj_73, adj_120, adj_121);
            // adj: inv_mass_a = m_inv_a + wp.dot(rxn, I_inv_a * rxn)                             <L 1761>
            wp::adj_quat_rotate_inv(var_118, var_119, adj_118, adj_119, adj_120);
            wp::adj_cross(var_103, var_108, adj_103, adj_108, adj_119);
            // adj: rxn = wp.quat_rotate_inv(q_a, wp.cross(r_a, n))                               <L 1759>
            wp::adj_transform_get_rotation(var_74, adj_74, adj_118);
            // adj: q_a = wp.transform_get_rotation(X_wb_a_prev)                                  <L 1758>
            adj_velocity_at_point(var_116, var_103, adj_115, adj_103, adj_117);
            wp::adj_load(var_115, adj_115, adj_116);
            wp::adj_address(var_body_qd, var_42, adj_body_qd, adj_42, adj_115);
            // adj: v_a_new = velocity_at_point(body_qd[body_a], r_a)                             <L 1757>
            wp::adj_add(var_112, var_113, adj_112, adj_113, adj_114);
            wp::adj_mul(var_gravity, var_dt, adj_gravity, adj_dt, adj_113);
            adj_velocity_at_point(var_111, var_103, adj_110, adj_103, adj_112);
            wp::adj_load(var_110, adj_110, adj_111);
            wp::adj_address(var_body_qd_prev, var_42, adj_body_qd_prev, adj_42, adj_110);
            // adj: v_a = velocity_at_point(body_qd_prev[body_a], r_a) + gravity * dt             <L 1756>
        }
        // adj: if body_a >= 0:                                                                   <L 1755>
        wp::adj_copy(var_107, adj_106, adj_108);
        wp::adj_load(var_106, adj_106, adj_107);
        wp::adj_address(var_contact_normal, var_0, adj_contact_normal, adj_0, adj_106);
        // adj: n = contact_normal[tid]                                                           <L 1754>
        wp::adj_sub(var_101, var_104, adj_101, adj_104, adj_105);
        wp::adj_transform_point(var_82, var_95, adj_82, adj_95, adj_104);
        // adj: r_b = bx_b - wp.transform_point(X_wb_b, com_b)                                    <L 1752>
        wp::adj_sub(var_98, var_102, adj_98, adj_102, adj_103);
        wp::adj_transform_point(var_62, var_75, adj_62, adj_75, adj_102);
        // adj: r_a = bx_a - wp.transform_point(X_wb_a, com_a)                                    <L 1751>
        wp::adj_copy(var_100, adj_99, adj_101);
        wp::adj_load(var_99, adj_99, adj_100);
        wp::adj_address(var_active_contact_point1, var_0, adj_active_contact_point1, adj_0, adj_99);
        // adj: bx_b = active_contact_point1[tid]                                                 <L 1749>
        wp::adj_copy(var_97, adj_96, adj_98);
        wp::adj_load(var_96, adj_96, adj_97);
        wp::adj_address(var_active_contact_point0, var_0, adj_active_contact_point0, adj_0, adj_96);
        // adj: bx_a = active_contact_point0[tid]                                                 <L 1748>
        wp::adj_select(var_76, var_51, var_91, adj_76, adj_51, adj_91, adj_95);
        wp::adj_select(var_76, var_49, var_79, adj_76, adj_49, adj_79, adj_94);
        wp::adj_select(var_76, var_47, var_88, adj_76, adj_47, adj_88, adj_93);
        wp::adj_select(var_76, var_9, var_85, adj_76, adj_9, adj_85, adj_92);
        if (var_76) {
            wp::adj_copy(var_90, adj_89, adj_91);
            wp::adj_load(var_89, adj_89, adj_90);
            wp::adj_address(var_body_com, var_45, adj_body_com, adj_45, adj_89);
            // adj: com_b = body_com[body_b]                                                      <L 1746>
            wp::adj_copy(var_87, adj_86, adj_88);
            wp::adj_load(var_86, adj_86, adj_87);
            wp::adj_address(var_body_I_inv, var_45, adj_body_I_inv, adj_45, adj_86);
            // adj: I_inv_b = body_I_inv[body_b]                                                  <L 1745>
            wp::adj_copy(var_84, adj_83, adj_85);
            wp::adj_load(var_83, adj_83, adj_84);
            wp::adj_address(var_body_m_inv, var_45, adj_body_m_inv, adj_45, adj_83);
            // adj: m_inv_b = body_m_inv[body_b]                                                  <L 1744>
            wp::adj_copy(var_81, adj_80, adj_82);
            wp::adj_load(var_80, adj_80, adj_81);
            wp::adj_address(var_body_q, var_45, adj_body_q, adj_45, adj_80);
            // adj: X_wb_b = body_q[body_b]                                                       <L 1743>
            wp::adj_copy(var_78, adj_77, adj_79);
            wp::adj_load(var_77, adj_77, adj_78);
            wp::adj_address(var_body_q_prev, var_45, adj_body_q_prev, adj_45, adj_77);
            // adj: X_wb_b_prev = body_q_prev[body_b]                                             <L 1742>
        }
        // adj: if body_b >= 0:                                                                   <L 1741>
        wp::adj_select(var_56, var_50, var_71, adj_56, adj_50, adj_71, adj_75);
        wp::adj_select(var_56, var_48, var_59, adj_56, adj_48, adj_59, adj_74);
        wp::adj_select(var_56, var_46, var_68, adj_56, adj_46, adj_68, adj_73);
        wp::adj_select(var_56, var_9, var_65, adj_56, adj_9, adj_65, adj_72);
        if (var_56) {
            wp::adj_copy(var_70, adj_69, adj_71);
            wp::adj_load(var_69, adj_69, adj_70);
            wp::adj_address(var_body_com, var_42, adj_body_com, adj_42, adj_69);
            // adj: com_a = body_com[body_a]                                                      <L 1739>
            wp::adj_copy(var_67, adj_66, adj_68);
            wp::adj_load(var_66, adj_66, adj_67);
            wp::adj_address(var_body_I_inv, var_42, adj_body_I_inv, adj_42, adj_66);
            // adj: I_inv_a = body_I_inv[body_a]                                                  <L 1738>
            wp::adj_copy(var_64, adj_63, adj_65);
            wp::adj_load(var_63, adj_63, adj_64);
            wp::adj_address(var_body_m_inv, var_42, adj_body_m_inv, adj_42, adj_63);
            // adj: m_inv_a = body_m_inv[body_a]                                                  <L 1737>
            wp::adj_copy(var_61, adj_60, adj_62);
            wp::adj_load(var_60, adj_60, adj_61);
            wp::adj_address(var_body_q, var_42, adj_body_q, adj_42, adj_60);
            // adj: X_wb_a = body_q[body_a]                                                       <L 1736>
            wp::adj_copy(var_58, adj_57, adj_59);
            wp::adj_load(var_57, adj_57, adj_58);
            wp::adj_address(var_body_q_prev, var_42, adj_body_q_prev, adj_42, adj_57);
            // adj: X_wb_a_prev = body_q_prev[body_a]                                             <L 1735>
        }
        // adj: if body_a >= 0:                                                                   <L 1734>
        // adj: inv_mass = 0.0                                                                    <L 1732>
        wp::adj_vec_t(var_9, adj_9, adj_55);
        // adj: v_b_new = wp.vec3(0.0)                                                            <L 1730>
        wp::adj_vec_t(var_9, adj_9, adj_54);
        // adj: v_a_new = wp.vec3(0.0)                                                            <L 1729>
        wp::adj_vec_t(var_9, adj_9, adj_53);
        // adj: v_b = wp.vec3(0.0)                                                                <L 1727>
        wp::adj_vec_t(var_9, adj_9, adj_52);
        // adj: v_a = wp.vec3(0.0)                                                                <L 1726>
        wp::adj_vec_t(var_9, adj_9, adj_51);
        // adj: com_b = wp.vec3(0.0)                                                              <L 1724>
        wp::adj_vec_t(var_9, adj_9, adj_50);
        // adj: com_a = wp.vec3(0.0)                                                              <L 1723>
        // adj: X_wb_b_prev = wp.transform_identity()                                             <L 1721>
        // adj: X_wb_a_prev = wp.transform_identity()                                             <L 1720>
        wp::adj_mat_t(var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_47);
        // adj: I_inv_b = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                   <L 1718>
        wp::adj_mat_t(var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, var_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_9, adj_46);
        // adj: I_inv_a = wp.mat33(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)                   <L 1717>
        // adj: m_inv_b = 0.0                                                                     <L 1716>
        // adj: m_inv_a = 0.0                                                                     <L 1715>
        wp::adj_copy(var_44, adj_43, adj_45);
        wp::adj_load(var_43, adj_43, adj_44);
        wp::adj_address(var_contact_body1, var_0, adj_contact_body1, adj_0, adj_43);
        // adj: body_b = contact_body1[tid]                                                       <L 1713>
        wp::adj_copy(var_41, adj_40, adj_42);
        wp::adj_load(var_40, adj_40, adj_41);
        wp::adj_address(var_contact_body0, var_0, adj_contact_body0, adj_0, adj_40);
        // adj: body_a = contact_body0[tid]                                                       <L 1712>
        wp::adj_select(var_36, var_35, var_38, adj_36, adj_35, adj_38, adj_39);
        if (var_36) {
            wp::adj_div(var_35, var_37, var_38, adj_35, adj_37, adj_38);
            wp::adj_float(var_34, adj_34, adj_37);
            // adj: restitution /= float(mat_nonzero)                                             <L 1710>
        }
        // adj: if mat_nonzero > 0:                                                               <L 1709>
        wp::adj_select(var_27, var_26, var_33, adj_27, adj_26, adj_33, adj_35);
        wp::adj_select(var_27, var_25, var_28, adj_27, adj_25, adj_28, adj_34);
        if (var_27) {
            wp::adj_add(var_26, var_32, adj_26, adj_31, adj_33);
            wp::adj_load(var_31, adj_31, adj_32);
            wp::adj_address(var_30, var_16, adj_29, adj_16, adj_31);
            wp::adj_load(var_29, adj_29, adj_30);
            adj_shape_materials.restitution = adj_29;
            // adj: restitution += shape_materials.restitution[shape_b]                           <L 1708>
            wp::adj_add(var_25, var_18, adj_25, adj_18, adj_28);
            // adj: mat_nonzero += 1                                                              <L 1707>
        }
        // adj: if shape_b >= 0:                                                                  <L 1706>
        wp::adj_select(var_17, var_9, var_24, adj_17, adj_9, adj_24, adj_26);
        wp::adj_select(var_17, var_1, var_19, adj_17, adj_1, adj_19, adj_25);
        if (var_17) {
            wp::adj_add(var_9, var_23, adj_9, adj_22, adj_24);
            wp::adj_load(var_22, adj_22, adj_23);
            wp::adj_address(var_21, var_13, adj_20, adj_13, adj_22);
            wp::adj_load(var_20, adj_20, adj_21);
            adj_shape_materials.restitution = adj_20;
            // adj: restitution += shape_materials.restitution[shape_a]                           <L 1705>
            wp::adj_add(var_1, var_18, adj_1, adj_18, adj_19);
            // adj: mat_nonzero += 1                                                              <L 1704>
        }
        // adj: if shape_a >= 0:                                                                  <L 1703>
        wp::adj_copy(var_15, adj_14, adj_16);
        wp::adj_load(var_14, adj_14, adj_15);
        wp::adj_address(var_contact_shape1, var_0, adj_contact_shape1, adj_0, adj_14);
        // adj: shape_b = contact_shape1[tid]                                                     <L 1702>
        wp::adj_copy(var_12, adj_11, adj_13);
        wp::adj_load(var_11, adj_11, adj_12);
        wp::adj_address(var_contact_shape0, var_0, adj_contact_shape0, adj_0, adj_11);
        // adj: shape_a = contact_shape0[tid]                                                     <L 1701>
        // adj: restitution = 0.0                                                                 <L 1700>
        // adj: mat_nonzero = 0                                                                   <L 1699>
        if (var_10) {
            label1:;
            // adj: return                                                                        <L 1696>
        }
        // adj: if d >= 0.0:                                                                      <L 1695>
        wp::adj_copy(var_7, adj_6, adj_8);
        wp::adj_load(var_6, adj_6, adj_7);
        wp::adj_address(var_active_contact_distance, var_0, adj_active_contact_distance, adj_0, adj_6);
        // adj: d = active_contact_distance[tid]                                                  <L 1694>
        if (var_5) {
            label0:;
            // adj: return                                                                        <L 1693>
        }
        // adj: if tid >= count:                                                                  <L 1692>
        wp::adj_copy(var_3, adj_2, adj_4);
        wp::adj_load(var_2, adj_2, adj_3);
        wp::adj_address(var_contact_count, var_1, adj_contact_count, adj_1, adj_2);
        // adj: count = contact_count[0]                                                          <L 1691>
        // adj: tid = wp.tid()                                                                    <L 1689>
        // adj: def apply_rigid_restitution(                                                      <L 1665>
        continue;
    }
}

